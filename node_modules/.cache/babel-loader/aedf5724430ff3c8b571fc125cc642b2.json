{"ast":null,"code":"var replaceSubstitutionTransformer = function replaceSubstitutionTransformer(replaceWhat, replaceWith) {\n  return {\n    onSubstitution: function onSubstitution(substitution, resultSoFar) {\n      if (replaceWhat == null || replaceWith == null) {\n        throw new Error('replaceSubstitutionTransformer requires at least 2 arguments.');\n      } // Do not touch if null or undefined\n\n\n      if (substitution == null) {\n        return substitution;\n      } else {\n        return substitution.toString().replace(replaceWhat, replaceWith);\n      }\n    }\n  };\n};\n\nexport default replaceSubstitutionTransformer;","map":{"version":3,"sources":["../../src/replaceSubstitutionTransformer/replaceSubstitutionTransformer.js"],"names":["replaceSubstitutionTransformer","onSubstitution","replaceWhat","replaceWith","substitution"],"mappings":"AAAA,IAAMA,8BAAAA,GAAiC,SAAjCA,8BAAiC,CAAA,WAAA,EAAA,WAAA,EAAA;AAAA,SAA+B;AACpEC,IAAAA,cADoE,EAAA,SAAA,cAAA,CAAA,YAAA,EAAA,WAAA,EAC1B;AACxC,UAAIC,WAAAA,IAAAA,IAAAA,IAAuBC,WAAAA,IAA3B,IAAA,EAAgD;AAC9C,cAAM,IAAA,KAAA,CAAN,+DAAM,CAAN;AAGD,OALuC,CAOxC;;;AACA,UAAIC,YAAAA,IAAJ,IAAA,EAA0B;AACxB,eAAA,YAAA;AADF,OAAA,MAEO;AACL,eAAOA,YAAAA,CAAAA,QAAAA,GAAAA,OAAAA,CAAAA,WAAAA,EAAP,WAAOA,CAAP;AACD;AACF;AAdmE,GAA/B;AAAvC,CAAA;;AAiBA,eAAA,8BAAA","sourcesContent":["const replaceSubstitutionTransformer = (replaceWhat, replaceWith) => ({\n  onSubstitution(substitution, resultSoFar) {\n    if (replaceWhat == null || replaceWith == null) {\n      throw new Error(\n        'replaceSubstitutionTransformer requires at least 2 arguments.',\n      );\n    }\n\n    // Do not touch if null or undefined\n    if (substitution == null) {\n      return substitution;\n    } else {\n      return substitution.toString().replace(replaceWhat, replaceWith);\n    }\n  },\n});\n\nexport default replaceSubstitutionTransformer;\n"]},"metadata":{},"sourceType":"module"}