{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _core = require(\"@babel/core\");\n\nconst buildForAwait = (0, _core.template)(`\n  async function wrapper() {\n    var ITERATOR_COMPLETION = true;\n    var ITERATOR_HAD_ERROR_KEY = false;\n    var ITERATOR_ERROR_KEY;\n    try {\n      for (\n        var ITERATOR_KEY = GET_ITERATOR(OBJECT), STEP_KEY, STEP_VALUE;\n        (\n          STEP_KEY = await ITERATOR_KEY.next(),\n          ITERATOR_COMPLETION = STEP_KEY.done,\n          STEP_VALUE = await STEP_KEY.value,\n          !ITERATOR_COMPLETION\n        );\n        ITERATOR_COMPLETION = true) {\n      }\n    } catch (err) {\n      ITERATOR_HAD_ERROR_KEY = true;\n      ITERATOR_ERROR_KEY = err;\n    } finally {\n      try {\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return != null) {\n          await ITERATOR_KEY.return();\n        }\n      } finally {\n        if (ITERATOR_HAD_ERROR_KEY) {\n          throw ITERATOR_ERROR_KEY;\n        }\n      }\n    }\n  }\n`);\n\nfunction _default(path, {\n  getAsyncIterator\n}) {\n  const {\n    node,\n    scope,\n    parent\n  } = path;\n  const stepKey = scope.generateUidIdentifier(\"step\");\n  const stepValue = scope.generateUidIdentifier(\"value\");\n  const left = node.left;\n  let declar;\n\n  if (_core.types.isIdentifier(left) || _core.types.isPattern(left) || _core.types.isMemberExpression(left)) {\n    declar = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", left, stepValue));\n  } else if (_core.types.isVariableDeclaration(left)) {\n    declar = _core.types.variableDeclaration(left.kind, [_core.types.variableDeclarator(left.declarations[0].id, stepValue)]);\n  }\n\n  let template = buildForAwait({\n    ITERATOR_HAD_ERROR_KEY: scope.generateUidIdentifier(\"didIteratorError\"),\n    ITERATOR_COMPLETION: scope.generateUidIdentifier(\"iteratorNormalCompletion\"),\n    ITERATOR_ERROR_KEY: scope.generateUidIdentifier(\"iteratorError\"),\n    ITERATOR_KEY: scope.generateUidIdentifier(\"iterator\"),\n    GET_ITERATOR: getAsyncIterator,\n    OBJECT: node.right,\n    STEP_VALUE: stepValue,\n    STEP_KEY: stepKey\n  });\n  template = template.body.body;\n\n  const isLabeledParent = _core.types.isLabeledStatement(parent);\n\n  const tryBody = template[3].block.body;\n  const loop = tryBody[0];\n\n  if (isLabeledParent) {\n    tryBody[0] = _core.types.labeledStatement(parent.label, loop);\n  }\n\n  return {\n    replaceParent: isLabeledParent,\n    node: template,\n    declar,\n    loop\n  };\n}","map":{"version":3,"sources":["/home/agatha/open/node_modules/@babel/plugin-proposal-async-generator-functions/lib/for-await.js"],"names":["Object","defineProperty","exports","value","default","_default","_core","require","buildForAwait","template","path","getAsyncIterator","node","scope","parent","stepKey","generateUidIdentifier","stepValue","left","declar","types","isIdentifier","isPattern","isMemberExpression","expressionStatement","assignmentExpression","isVariableDeclaration","variableDeclaration","kind","variableDeclarator","declarations","id","ITERATOR_HAD_ERROR_KEY","ITERATOR_COMPLETION","ITERATOR_ERROR_KEY","ITERATOR_KEY","GET_ITERATOR","OBJECT","right","STEP_VALUE","STEP_KEY","body","isLabeledParent","isLabeledStatement","tryBody","block","loop","labeledStatement","label","replaceParent"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _core = require(\"@babel/core\");\n\nconst buildForAwait = (0, _core.template)(`\n  async function wrapper() {\n    var ITERATOR_COMPLETION = true;\n    var ITERATOR_HAD_ERROR_KEY = false;\n    var ITERATOR_ERROR_KEY;\n    try {\n      for (\n        var ITERATOR_KEY = GET_ITERATOR(OBJECT), STEP_KEY, STEP_VALUE;\n        (\n          STEP_KEY = await ITERATOR_KEY.next(),\n          ITERATOR_COMPLETION = STEP_KEY.done,\n          STEP_VALUE = await STEP_KEY.value,\n          !ITERATOR_COMPLETION\n        );\n        ITERATOR_COMPLETION = true) {\n      }\n    } catch (err) {\n      ITERATOR_HAD_ERROR_KEY = true;\n      ITERATOR_ERROR_KEY = err;\n    } finally {\n      try {\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return != null) {\n          await ITERATOR_KEY.return();\n        }\n      } finally {\n        if (ITERATOR_HAD_ERROR_KEY) {\n          throw ITERATOR_ERROR_KEY;\n        }\n      }\n    }\n  }\n`);\n\nfunction _default(path, {\n  getAsyncIterator\n}) {\n  const {\n    node,\n    scope,\n    parent\n  } = path;\n  const stepKey = scope.generateUidIdentifier(\"step\");\n  const stepValue = scope.generateUidIdentifier(\"value\");\n  const left = node.left;\n  let declar;\n\n  if (_core.types.isIdentifier(left) || _core.types.isPattern(left) || _core.types.isMemberExpression(left)) {\n    declar = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", left, stepValue));\n  } else if (_core.types.isVariableDeclaration(left)) {\n    declar = _core.types.variableDeclaration(left.kind, [_core.types.variableDeclarator(left.declarations[0].id, stepValue)]);\n  }\n\n  let template = buildForAwait({\n    ITERATOR_HAD_ERROR_KEY: scope.generateUidIdentifier(\"didIteratorError\"),\n    ITERATOR_COMPLETION: scope.generateUidIdentifier(\"iteratorNormalCompletion\"),\n    ITERATOR_ERROR_KEY: scope.generateUidIdentifier(\"iteratorError\"),\n    ITERATOR_KEY: scope.generateUidIdentifier(\"iterator\"),\n    GET_ITERATOR: getAsyncIterator,\n    OBJECT: node.right,\n    STEP_VALUE: stepValue,\n    STEP_KEY: stepKey\n  });\n  template = template.body.body;\n\n  const isLabeledParent = _core.types.isLabeledStatement(parent);\n\n  const tryBody = template[3].block.body;\n  const loop = tryBody[0];\n\n  if (isLabeledParent) {\n    tryBody[0] = _core.types.labeledStatement(parent.label, loop);\n  }\n\n  return {\n    replaceParent: isLabeledParent,\n    node: template,\n    declar,\n    loop\n  };\n}"]},"metadata":{},"sourceType":"script"}