{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeCoreJSOption = normalizeCoreJSOption;\nexports.default = normalizeOptions;\nexports.validateUseBuiltInsOption = exports.validateModulesOption = exports.validateIgnoreBrowserslistConfig = exports.validateStringOption = exports.validateBoolOption = exports.validateConfigPathOption = exports.checkDuplicateIncludeExcludes = exports.normalizePluginName = void 0;\n\nvar _data = _interopRequireDefault(require(\"core-js-compat/data\"));\n\nvar _levenary = _interopRequireDefault(require(\"levenary\"));\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _semver = require(\"semver\");\n\nvar _corejs2BuiltIns = _interopRequireDefault(require(\"@babel/compat-data/corejs2-built-ins\"));\n\nvar _pluginsCompatData = require(\"./plugins-compat-data\");\n\nvar _moduleTransformations = _interopRequireDefault(require(\"./module-transformations\"));\n\nvar _options = require(\"./options\");\n\nvar _getPlatformSpecificDefault = require(\"./polyfills/corejs2/get-platform-specific-default\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst validateTopLevelOptions = options => {\n  const validOptions = Object.keys(_options.TopLevelOptions);\n\n  for (const option in options) {\n    if (!_options.TopLevelOptions[option]) {\n      throw new Error(`Invalid Option: ${option} is not a valid top-level option.\n        Maybe you meant to use '${(0, _levenary.default)(option, validOptions)}'?`);\n    }\n  }\n};\n\nconst allPluginsList = Object.keys(_pluginsCompatData.plugins);\nconst modulePlugins = [\"proposal-dynamic-import\", ...Object.keys(_moduleTransformations.default).map(m => _moduleTransformations.default[m])];\n\nconst getValidIncludesAndExcludes = (type, corejs) => new Set([...allPluginsList, ...(type === \"exclude\" ? modulePlugins : []), ...(corejs ? corejs == 2 ? [...Object.keys(_corejs2BuiltIns.default), ..._getPlatformSpecificDefault.defaultWebIncludes] : Object.keys(_data.default) : [])]);\n\nconst pluginToRegExp = plugin => {\n  if (plugin instanceof RegExp) return plugin;\n\n  try {\n    return new RegExp(`^${normalizePluginName(plugin)}$`);\n  } catch (e) {\n    return null;\n  }\n};\n\nconst selectPlugins = (regexp, type, corejs) => Array.from(getValidIncludesAndExcludes(type, corejs)).filter(item => regexp instanceof RegExp && regexp.test(item));\n\nconst flatten = array => [].concat(...array);\n\nconst expandIncludesAndExcludes = (plugins = [], type, corejs) => {\n  if (plugins.length === 0) return [];\n  const selectedPlugins = plugins.map(plugin => selectPlugins(pluginToRegExp(plugin), type, corejs));\n  const invalidRegExpList = plugins.filter((p, i) => selectedPlugins[i].length === 0);\n  (0, _invariant.default)(invalidRegExpList.length === 0, `Invalid Option: The plugins/built-ins '${invalidRegExpList.join(\", \")}' passed to the '${type}' option are not\n    valid. Please check data/[plugin-features|built-in-features].js in babel-preset-env`);\n  return flatten(selectedPlugins);\n};\n\nconst normalizePluginName = plugin => plugin.replace(/^(@babel\\/|babel-)(plugin-)?/, \"\");\n\nexports.normalizePluginName = normalizePluginName;\n\nconst checkDuplicateIncludeExcludes = (include = [], exclude = []) => {\n  const duplicates = include.filter(opt => exclude.indexOf(opt) >= 0);\n  (0, _invariant.default)(duplicates.length === 0, `Invalid Option: The plugins/built-ins '${duplicates.join(\", \")}' were found in both the \"include\" and\n    \"exclude\" options.`);\n};\n\nexports.checkDuplicateIncludeExcludes = checkDuplicateIncludeExcludes;\n\nconst normalizeTargets = targets => {\n  if (typeof targets === \"string\" || Array.isArray(targets)) {\n    return {\n      browsers: targets\n    };\n  }\n\n  return Object.assign({}, targets);\n};\n\nconst validateConfigPathOption = (configPath = process.cwd()) => {\n  (0, _invariant.default)(typeof configPath === \"string\", `Invalid Option: The configPath option '${configPath}' is invalid, only strings are allowed.`);\n  return configPath;\n};\n\nexports.validateConfigPathOption = validateConfigPathOption;\n\nconst validateBoolOption = (name, value, defaultValue) => {\n  if (typeof value === \"undefined\") {\n    value = defaultValue;\n  }\n\n  if (typeof value !== \"boolean\") {\n    throw new Error(`Preset env: '${name}' option must be a boolean.`);\n  }\n\n  return value;\n};\n\nexports.validateBoolOption = validateBoolOption;\n\nconst validateStringOption = (name, value, defaultValue) => {\n  if (typeof value === \"undefined\") {\n    value = defaultValue;\n  } else if (typeof value !== \"string\") {\n    throw new Error(`Preset env: '${name}' option must be a string.`);\n  }\n\n  return value;\n};\n\nexports.validateStringOption = validateStringOption;\n\nconst validateIgnoreBrowserslistConfig = ignoreBrowserslistConfig => validateBoolOption(_options.TopLevelOptions.ignoreBrowserslistConfig, ignoreBrowserslistConfig, false);\n\nexports.validateIgnoreBrowserslistConfig = validateIgnoreBrowserslistConfig;\n\nconst validateModulesOption = (modulesOpt = _options.ModulesOption.auto) => {\n  (0, _invariant.default)(_options.ModulesOption[modulesOpt.toString()] || modulesOpt === _options.ModulesOption.false, `Invalid Option: The 'modules' option must be one of \\n` + ` - 'false' to indicate no module processing\\n` + ` - a specific module type: 'commonjs', 'amd', 'umd', 'systemjs'` + ` - 'auto' (default) which will automatically select 'false' if the current\\n` + `   process is known to support ES module syntax, or \"commonjs\" otherwise\\n`);\n  return modulesOpt;\n};\n\nexports.validateModulesOption = validateModulesOption;\n\nconst validateUseBuiltInsOption = (builtInsOpt = false) => {\n  (0, _invariant.default)(_options.UseBuiltInsOption[builtInsOpt.toString()] || builtInsOpt === _options.UseBuiltInsOption.false, `Invalid Option: The 'useBuiltIns' option must be either\n    'false' (default) to indicate no polyfill,\n    '\"entry\"' to indicate replacing the entry polyfill, or\n    '\"usage\"' to import only used polyfills per file`);\n  return builtInsOpt;\n};\n\nexports.validateUseBuiltInsOption = validateUseBuiltInsOption;\n\nfunction normalizeCoreJSOption(corejs, useBuiltIns) {\n  let proposals = false;\n  let rawVersion;\n\n  if (useBuiltIns && corejs === undefined) {\n    rawVersion = 2;\n    console.warn(\"\\nWARNING: We noticed you're using the `useBuiltIns` option without declaring a \" + \"core-js version. Currently, we assume version 2.x when no version \" + \"is passed. Since this default version will likely change in future \" + \"versions of Babel, we recommend explicitly setting the core-js version \" + \"you are using via the `corejs` option.\\n\" + \"\\nYou should also be sure that the version you pass to the `corejs` \" + \"option matches the version specified in your `package.json`'s \" + \"`dependencies` section. If it doesn't, you need to run one of the \" + \"following commands:\\n\\n\" + \"  npm install --save core-js@2    npm install --save core-js@3\\n\" + \"  yarn add core-js@2              yarn add core-js@3\\n\");\n  } else if (typeof corejs === \"object\" && corejs !== null) {\n    rawVersion = corejs.version;\n    proposals = Boolean(corejs.proposals);\n  } else {\n    rawVersion = corejs;\n  }\n\n  const version = rawVersion ? (0, _semver.coerce)(String(rawVersion)) : false;\n\n  if (!useBuiltIns && version) {\n    console.log(\"\\nThe `corejs` option only has an effect when the `useBuiltIns` option is not `false`\\n\");\n  }\n\n  if (useBuiltIns && (!version || version.major < 2 || version.major > 3)) {\n    throw new RangeError(\"Invalid Option: The version passed to `corejs` is invalid. Currently, \" + \"only core-js@2 and core-js@3 are supported.\");\n  }\n\n  return {\n    version,\n    proposals\n  };\n}\n\nfunction normalizeOptions(opts) {\n  validateTopLevelOptions(opts);\n  const useBuiltIns = validateUseBuiltInsOption(opts.useBuiltIns);\n  const corejs = normalizeCoreJSOption(opts.corejs, useBuiltIns);\n  const include = expandIncludesAndExcludes(opts.include, _options.TopLevelOptions.include, !!corejs.version && corejs.version.major);\n  const exclude = expandIncludesAndExcludes(opts.exclude, _options.TopLevelOptions.exclude, !!corejs.version && corejs.version.major);\n  checkDuplicateIncludeExcludes(include, exclude);\n  const shippedProposals = validateBoolOption(_options.TopLevelOptions.shippedProposals, opts.shippedProposals, false);\n  return {\n    bugfixes: validateBoolOption(_options.TopLevelOptions.bugfixes, opts.bugfixes, false),\n    configPath: validateConfigPathOption(opts.configPath),\n    corejs,\n    debug: validateBoolOption(_options.TopLevelOptions.debug, opts.debug, false),\n    include,\n    exclude,\n    forceAllTransforms: validateBoolOption(_options.TopLevelOptions.forceAllTransforms, opts.forceAllTransforms, false),\n    ignoreBrowserslistConfig: validateIgnoreBrowserslistConfig(opts.ignoreBrowserslistConfig),\n    loose: validateBoolOption(_options.TopLevelOptions.loose, opts.loose, false),\n    modules: validateModulesOption(opts.modules),\n    shippedProposals,\n    spec: validateBoolOption(_options.TopLevelOptions.spec, opts.spec, false),\n    targets: normalizeTargets(opts.targets),\n    useBuiltIns: useBuiltIns,\n    browserslistEnv: validateStringOption(_options.TopLevelOptions.browserslistEnv, opts.browserslistEnv)\n  };\n}","map":{"version":3,"sources":["/home/agatha/open/node_modules/@babel/preset-env/lib/normalize-options.js"],"names":["Object","defineProperty","exports","value","normalizeCoreJSOption","default","normalizeOptions","validateUseBuiltInsOption","validateModulesOption","validateIgnoreBrowserslistConfig","validateStringOption","validateBoolOption","validateConfigPathOption","checkDuplicateIncludeExcludes","normalizePluginName","_data","_interopRequireDefault","require","_levenary","_invariant","_semver","_corejs2BuiltIns","_pluginsCompatData","_moduleTransformations","_options","_getPlatformSpecificDefault","obj","__esModule","validateTopLevelOptions","options","validOptions","keys","TopLevelOptions","option","Error","allPluginsList","plugins","modulePlugins","map","m","getValidIncludesAndExcludes","type","corejs","Set","defaultWebIncludes","pluginToRegExp","plugin","RegExp","e","selectPlugins","regexp","Array","from","filter","item","test","flatten","array","concat","expandIncludesAndExcludes","length","selectedPlugins","invalidRegExpList","p","i","join","replace","include","exclude","duplicates","opt","indexOf","normalizeTargets","targets","isArray","browsers","assign","configPath","process","cwd","name","defaultValue","ignoreBrowserslistConfig","modulesOpt","ModulesOption","auto","toString","false","builtInsOpt","UseBuiltInsOption","useBuiltIns","proposals","rawVersion","undefined","console","warn","version","Boolean","coerce","String","log","major","RangeError","opts","shippedProposals","bugfixes","debug","forceAllTransforms","loose","modules","spec","browserslistEnv"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeCoreJSOption = normalizeCoreJSOption;\nexports.default = normalizeOptions;\nexports.validateUseBuiltInsOption = exports.validateModulesOption = exports.validateIgnoreBrowserslistConfig = exports.validateStringOption = exports.validateBoolOption = exports.validateConfigPathOption = exports.checkDuplicateIncludeExcludes = exports.normalizePluginName = void 0;\n\nvar _data = _interopRequireDefault(require(\"core-js-compat/data\"));\n\nvar _levenary = _interopRequireDefault(require(\"levenary\"));\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _semver = require(\"semver\");\n\nvar _corejs2BuiltIns = _interopRequireDefault(require(\"@babel/compat-data/corejs2-built-ins\"));\n\nvar _pluginsCompatData = require(\"./plugins-compat-data\");\n\nvar _moduleTransformations = _interopRequireDefault(require(\"./module-transformations\"));\n\nvar _options = require(\"./options\");\n\nvar _getPlatformSpecificDefault = require(\"./polyfills/corejs2/get-platform-specific-default\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst validateTopLevelOptions = options => {\n  const validOptions = Object.keys(_options.TopLevelOptions);\n\n  for (const option in options) {\n    if (!_options.TopLevelOptions[option]) {\n      throw new Error(`Invalid Option: ${option} is not a valid top-level option.\n        Maybe you meant to use '${(0, _levenary.default)(option, validOptions)}'?`);\n    }\n  }\n};\n\nconst allPluginsList = Object.keys(_pluginsCompatData.plugins);\nconst modulePlugins = [\"proposal-dynamic-import\", ...Object.keys(_moduleTransformations.default).map(m => _moduleTransformations.default[m])];\n\nconst getValidIncludesAndExcludes = (type, corejs) => new Set([...allPluginsList, ...(type === \"exclude\" ? modulePlugins : []), ...(corejs ? corejs == 2 ? [...Object.keys(_corejs2BuiltIns.default), ..._getPlatformSpecificDefault.defaultWebIncludes] : Object.keys(_data.default) : [])]);\n\nconst pluginToRegExp = plugin => {\n  if (plugin instanceof RegExp) return plugin;\n\n  try {\n    return new RegExp(`^${normalizePluginName(plugin)}$`);\n  } catch (e) {\n    return null;\n  }\n};\n\nconst selectPlugins = (regexp, type, corejs) => Array.from(getValidIncludesAndExcludes(type, corejs)).filter(item => regexp instanceof RegExp && regexp.test(item));\n\nconst flatten = array => [].concat(...array);\n\nconst expandIncludesAndExcludes = (plugins = [], type, corejs) => {\n  if (plugins.length === 0) return [];\n  const selectedPlugins = plugins.map(plugin => selectPlugins(pluginToRegExp(plugin), type, corejs));\n  const invalidRegExpList = plugins.filter((p, i) => selectedPlugins[i].length === 0);\n  (0, _invariant.default)(invalidRegExpList.length === 0, `Invalid Option: The plugins/built-ins '${invalidRegExpList.join(\", \")}' passed to the '${type}' option are not\n    valid. Please check data/[plugin-features|built-in-features].js in babel-preset-env`);\n  return flatten(selectedPlugins);\n};\n\nconst normalizePluginName = plugin => plugin.replace(/^(@babel\\/|babel-)(plugin-)?/, \"\");\n\nexports.normalizePluginName = normalizePluginName;\n\nconst checkDuplicateIncludeExcludes = (include = [], exclude = []) => {\n  const duplicates = include.filter(opt => exclude.indexOf(opt) >= 0);\n  (0, _invariant.default)(duplicates.length === 0, `Invalid Option: The plugins/built-ins '${duplicates.join(\", \")}' were found in both the \"include\" and\n    \"exclude\" options.`);\n};\n\nexports.checkDuplicateIncludeExcludes = checkDuplicateIncludeExcludes;\n\nconst normalizeTargets = targets => {\n  if (typeof targets === \"string\" || Array.isArray(targets)) {\n    return {\n      browsers: targets\n    };\n  }\n\n  return Object.assign({}, targets);\n};\n\nconst validateConfigPathOption = (configPath = process.cwd()) => {\n  (0, _invariant.default)(typeof configPath === \"string\", `Invalid Option: The configPath option '${configPath}' is invalid, only strings are allowed.`);\n  return configPath;\n};\n\nexports.validateConfigPathOption = validateConfigPathOption;\n\nconst validateBoolOption = (name, value, defaultValue) => {\n  if (typeof value === \"undefined\") {\n    value = defaultValue;\n  }\n\n  if (typeof value !== \"boolean\") {\n    throw new Error(`Preset env: '${name}' option must be a boolean.`);\n  }\n\n  return value;\n};\n\nexports.validateBoolOption = validateBoolOption;\n\nconst validateStringOption = (name, value, defaultValue) => {\n  if (typeof value === \"undefined\") {\n    value = defaultValue;\n  } else if (typeof value !== \"string\") {\n    throw new Error(`Preset env: '${name}' option must be a string.`);\n  }\n\n  return value;\n};\n\nexports.validateStringOption = validateStringOption;\n\nconst validateIgnoreBrowserslistConfig = ignoreBrowserslistConfig => validateBoolOption(_options.TopLevelOptions.ignoreBrowserslistConfig, ignoreBrowserslistConfig, false);\n\nexports.validateIgnoreBrowserslistConfig = validateIgnoreBrowserslistConfig;\n\nconst validateModulesOption = (modulesOpt = _options.ModulesOption.auto) => {\n  (0, _invariant.default)(_options.ModulesOption[modulesOpt.toString()] || modulesOpt === _options.ModulesOption.false, `Invalid Option: The 'modules' option must be one of \\n` + ` - 'false' to indicate no module processing\\n` + ` - a specific module type: 'commonjs', 'amd', 'umd', 'systemjs'` + ` - 'auto' (default) which will automatically select 'false' if the current\\n` + `   process is known to support ES module syntax, or \"commonjs\" otherwise\\n`);\n  return modulesOpt;\n};\n\nexports.validateModulesOption = validateModulesOption;\n\nconst validateUseBuiltInsOption = (builtInsOpt = false) => {\n  (0, _invariant.default)(_options.UseBuiltInsOption[builtInsOpt.toString()] || builtInsOpt === _options.UseBuiltInsOption.false, `Invalid Option: The 'useBuiltIns' option must be either\n    'false' (default) to indicate no polyfill,\n    '\"entry\"' to indicate replacing the entry polyfill, or\n    '\"usage\"' to import only used polyfills per file`);\n  return builtInsOpt;\n};\n\nexports.validateUseBuiltInsOption = validateUseBuiltInsOption;\n\nfunction normalizeCoreJSOption(corejs, useBuiltIns) {\n  let proposals = false;\n  let rawVersion;\n\n  if (useBuiltIns && corejs === undefined) {\n    rawVersion = 2;\n    console.warn(\"\\nWARNING: We noticed you're using the `useBuiltIns` option without declaring a \" + \"core-js version. Currently, we assume version 2.x when no version \" + \"is passed. Since this default version will likely change in future \" + \"versions of Babel, we recommend explicitly setting the core-js version \" + \"you are using via the `corejs` option.\\n\" + \"\\nYou should also be sure that the version you pass to the `corejs` \" + \"option matches the version specified in your `package.json`'s \" + \"`dependencies` section. If it doesn't, you need to run one of the \" + \"following commands:\\n\\n\" + \"  npm install --save core-js@2    npm install --save core-js@3\\n\" + \"  yarn add core-js@2              yarn add core-js@3\\n\");\n  } else if (typeof corejs === \"object\" && corejs !== null) {\n    rawVersion = corejs.version;\n    proposals = Boolean(corejs.proposals);\n  } else {\n    rawVersion = corejs;\n  }\n\n  const version = rawVersion ? (0, _semver.coerce)(String(rawVersion)) : false;\n\n  if (!useBuiltIns && version) {\n    console.log(\"\\nThe `corejs` option only has an effect when the `useBuiltIns` option is not `false`\\n\");\n  }\n\n  if (useBuiltIns && (!version || version.major < 2 || version.major > 3)) {\n    throw new RangeError(\"Invalid Option: The version passed to `corejs` is invalid. Currently, \" + \"only core-js@2 and core-js@3 are supported.\");\n  }\n\n  return {\n    version,\n    proposals\n  };\n}\n\nfunction normalizeOptions(opts) {\n  validateTopLevelOptions(opts);\n  const useBuiltIns = validateUseBuiltInsOption(opts.useBuiltIns);\n  const corejs = normalizeCoreJSOption(opts.corejs, useBuiltIns);\n  const include = expandIncludesAndExcludes(opts.include, _options.TopLevelOptions.include, !!corejs.version && corejs.version.major);\n  const exclude = expandIncludesAndExcludes(opts.exclude, _options.TopLevelOptions.exclude, !!corejs.version && corejs.version.major);\n  checkDuplicateIncludeExcludes(include, exclude);\n  const shippedProposals = validateBoolOption(_options.TopLevelOptions.shippedProposals, opts.shippedProposals, false);\n  return {\n    bugfixes: validateBoolOption(_options.TopLevelOptions.bugfixes, opts.bugfixes, false),\n    configPath: validateConfigPathOption(opts.configPath),\n    corejs,\n    debug: validateBoolOption(_options.TopLevelOptions.debug, opts.debug, false),\n    include,\n    exclude,\n    forceAllTransforms: validateBoolOption(_options.TopLevelOptions.forceAllTransforms, opts.forceAllTransforms, false),\n    ignoreBrowserslistConfig: validateIgnoreBrowserslistConfig(opts.ignoreBrowserslistConfig),\n    loose: validateBoolOption(_options.TopLevelOptions.loose, opts.loose, false),\n    modules: validateModulesOption(opts.modules),\n    shippedProposals,\n    spec: validateBoolOption(_options.TopLevelOptions.spec, opts.spec, false),\n    targets: normalizeTargets(opts.targets),\n    useBuiltIns: useBuiltIns,\n    browserslistEnv: validateStringOption(_options.TopLevelOptions.browserslistEnv, opts.browserslistEnv)\n  };\n}"]},"metadata":{},"sourceType":"script"}