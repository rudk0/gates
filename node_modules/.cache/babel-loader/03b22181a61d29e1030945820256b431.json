{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n/**\n * Safari ~11 has an issue where variable declarations in a For statement throw if they shadow parameters.\n * This is fixed by renaming any declarations in the left/init part of a For* statement so they don't shadow.\n * @see https://bugs.webkit.org/show_bug.cgi?id=171041\n *\n * @example\n *   e => { for (let e of []) e }   // throws\n *   e => { for (let _e of []) _e }   // works\n */\n\nfunction handle(declaration) {\n  if (!declaration.isVariableDeclaration()) return;\n  const fn = declaration.getFunctionParent();\n  const {\n    name\n  } = declaration.node.declarations[0].id; // check if there is a shadowed binding coming from a parameter\n\n  if (fn && fn.scope.hasOwnBinding(name) && fn.scope.getOwnBinding(name).kind === \"param\") {\n    declaration.scope.rename(name);\n  }\n}\n\nvar _default = () => ({\n  name: \"transform-safari-for-shadowing\",\n  visitor: {\n    ForXStatement(path) {\n      handle(path.get(\"left\"));\n    },\n\n    ForStatement(path) {\n      handle(path.get(\"init\"));\n    }\n\n  }\n});\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["/home/agatha/open/node_modules/@babel/preset-modules/lib/plugins/transform-safari-for-shadowing/index.js"],"names":["exports","__esModule","default","handle","declaration","isVariableDeclaration","fn","getFunctionParent","name","node","declarations","id","scope","hasOwnBinding","getOwnBinding","kind","rename","_default","visitor","ForXStatement","path","get","ForStatement","module"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AAEA;;;;;;;;;;AASA,SAASC,MAAT,CAAgBC,WAAhB,EAA6B;AAC3B,MAAI,CAACA,WAAW,CAACC,qBAAZ,EAAL,EAA0C;AAC1C,QAAMC,EAAE,GAAGF,WAAW,CAACG,iBAAZ,EAAX;AACA,QAAM;AACJC,IAAAA;AADI,MAEFJ,WAAW,CAACK,IAAZ,CAAiBC,YAAjB,CAA8B,CAA9B,EAAiCC,EAFrC,CAH2B,CAKc;;AAEzC,MAAIL,EAAE,IAAIA,EAAE,CAACM,KAAH,CAASC,aAAT,CAAuBL,IAAvB,CAAN,IAAsCF,EAAE,CAACM,KAAH,CAASE,aAAT,CAAuBN,IAAvB,EAA6BO,IAA7B,KAAsC,OAAhF,EAAyF;AACvFX,IAAAA,WAAW,CAACQ,KAAZ,CAAkBI,MAAlB,CAAyBR,IAAzB;AACD;AACF;;AAED,IAAIS,QAAQ,GAAG,OAAO;AACpBT,EAAAA,IAAI,EAAE,gCADc;AAEpBU,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,CAACC,IAAD,EAAO;AAClBjB,MAAAA,MAAM,CAACiB,IAAI,CAACC,GAAL,CAAS,MAAT,CAAD,CAAN;AACD,KAHM;;AAKPC,IAAAA,YAAY,CAACF,IAAD,EAAO;AACjBjB,MAAAA,MAAM,CAACiB,IAAI,CAACC,GAAL,CAAS,MAAT,CAAD,CAAN;AACD;;AAPM;AAFW,CAAP,CAAf;;AAcArB,OAAO,CAACE,OAAR,GAAkBe,QAAlB;AACAM,MAAM,CAACvB,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\n/**\n * Safari ~11 has an issue where variable declarations in a For statement throw if they shadow parameters.\n * This is fixed by renaming any declarations in the left/init part of a For* statement so they don't shadow.\n * @see https://bugs.webkit.org/show_bug.cgi?id=171041\n *\n * @example\n *   e => { for (let e of []) e }   // throws\n *   e => { for (let _e of []) _e }   // works\n */\nfunction handle(declaration) {\n  if (!declaration.isVariableDeclaration()) return;\n  const fn = declaration.getFunctionParent();\n  const {\n    name\n  } = declaration.node.declarations[0].id; // check if there is a shadowed binding coming from a parameter\n\n  if (fn && fn.scope.hasOwnBinding(name) && fn.scope.getOwnBinding(name).kind === \"param\") {\n    declaration.scope.rename(name);\n  }\n}\n\nvar _default = () => ({\n  name: \"transform-safari-for-shadowing\",\n  visitor: {\n    ForXStatement(path) {\n      handle(path.get(\"left\"));\n    },\n\n    ForStatement(path) {\n      handle(path.get(\"init\"));\n    }\n\n  }\n});\n\nexports.default = _default;\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}