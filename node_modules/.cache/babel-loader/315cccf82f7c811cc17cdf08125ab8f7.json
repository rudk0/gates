{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _core = require(\"@babel/core\");\n\nfunction getName(key) {\n  if (_core.types.isIdentifier(key)) {\n    return key.name;\n  }\n\n  return key.value.toString();\n}\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  return {\n    name: \"transform-duplicate-keys\",\n    visitor: {\n      ObjectExpression(path) {\n        const {\n          node\n        } = path;\n        const plainProps = node.properties.filter(prop => !_core.types.isSpreadElement(prop) && !prop.computed);\n        const alreadySeenData = Object.create(null);\n        const alreadySeenGetters = Object.create(null);\n        const alreadySeenSetters = Object.create(null);\n\n        for (const prop of plainProps) {\n          const name = getName(prop.key);\n          let isDuplicate = false;\n\n          switch (prop.kind) {\n            case \"get\":\n              if (alreadySeenData[name] || alreadySeenGetters[name]) {\n                isDuplicate = true;\n              }\n\n              alreadySeenGetters[name] = true;\n              break;\n\n            case \"set\":\n              if (alreadySeenData[name] || alreadySeenSetters[name]) {\n                isDuplicate = true;\n              }\n\n              alreadySeenSetters[name] = true;\n              break;\n\n            default:\n              if (alreadySeenData[name] || alreadySeenGetters[name] || alreadySeenSetters[name]) {\n                isDuplicate = true;\n              }\n\n              alreadySeenData[name] = true;\n          }\n\n          if (isDuplicate) {\n            prop.computed = true;\n            prop.key = _core.types.stringLiteral(name);\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/home/agatha/open/node_modules/@babel/plugin-transform-duplicate-keys/lib/index.js"],"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_core","getName","key","types","isIdentifier","name","toString","_default","declare","api","assertVersion","visitor","ObjectExpression","path","node","plainProps","properties","filter","prop","isSpreadElement","computed","alreadySeenData","create","alreadySeenGetters","alreadySeenSetters","isDuplicate","kind","stringLiteral"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,4BAAD,CAAhC;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAAnB;;AAEA,SAASE,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,MAAIF,KAAK,CAACG,KAAN,CAAYC,YAAZ,CAAyBF,GAAzB,CAAJ,EAAmC;AACjC,WAAOA,GAAG,CAACG,IAAX;AACD;;AAED,SAAOH,GAAG,CAACN,KAAJ,CAAUU,QAAV,EAAP;AACD;;AAED,IAAIC,QAAQ,GAAG,CAAC,GAAGT,kBAAkB,CAACU,OAAvB,EAAgCC,GAAG,IAAI;AACpDA,EAAAA,GAAG,CAACC,aAAJ,CAAkB,CAAlB;AACA,SAAO;AACLL,IAAAA,IAAI,EAAE,0BADD;AAELM,IAAAA,OAAO,EAAE;AACPC,MAAAA,gBAAgB,CAACC,IAAD,EAAO;AACrB,cAAM;AACJC,UAAAA;AADI,YAEFD,IAFJ;AAGA,cAAME,UAAU,GAAGD,IAAI,CAACE,UAAL,CAAgBC,MAAhB,CAAuBC,IAAI,IAAI,CAAClB,KAAK,CAACG,KAAN,CAAYgB,eAAZ,CAA4BD,IAA5B,CAAD,IAAsC,CAACA,IAAI,CAACE,QAA3E,CAAnB;AACA,cAAMC,eAAe,GAAG5B,MAAM,CAAC6B,MAAP,CAAc,IAAd,CAAxB;AACA,cAAMC,kBAAkB,GAAG9B,MAAM,CAAC6B,MAAP,CAAc,IAAd,CAA3B;AACA,cAAME,kBAAkB,GAAG/B,MAAM,CAAC6B,MAAP,CAAc,IAAd,CAA3B;;AAEA,aAAK,MAAMJ,IAAX,IAAmBH,UAAnB,EAA+B;AAC7B,gBAAMV,IAAI,GAAGJ,OAAO,CAACiB,IAAI,CAAChB,GAAN,CAApB;AACA,cAAIuB,WAAW,GAAG,KAAlB;;AAEA,kBAAQP,IAAI,CAACQ,IAAb;AACE,iBAAK,KAAL;AACE,kBAAIL,eAAe,CAAChB,IAAD,CAAf,IAAyBkB,kBAAkB,CAAClB,IAAD,CAA/C,EAAuD;AACrDoB,gBAAAA,WAAW,GAAG,IAAd;AACD;;AAEDF,cAAAA,kBAAkB,CAAClB,IAAD,CAAlB,GAA2B,IAA3B;AACA;;AAEF,iBAAK,KAAL;AACE,kBAAIgB,eAAe,CAAChB,IAAD,CAAf,IAAyBmB,kBAAkB,CAACnB,IAAD,CAA/C,EAAuD;AACrDoB,gBAAAA,WAAW,GAAG,IAAd;AACD;;AAEDD,cAAAA,kBAAkB,CAACnB,IAAD,CAAlB,GAA2B,IAA3B;AACA;;AAEF;AACE,kBAAIgB,eAAe,CAAChB,IAAD,CAAf,IAAyBkB,kBAAkB,CAAClB,IAAD,CAA3C,IAAqDmB,kBAAkB,CAACnB,IAAD,CAA3E,EAAmF;AACjFoB,gBAAAA,WAAW,GAAG,IAAd;AACD;;AAEDJ,cAAAA,eAAe,CAAChB,IAAD,CAAf,GAAwB,IAAxB;AAtBJ;;AAyBA,cAAIoB,WAAJ,EAAiB;AACfP,YAAAA,IAAI,CAACE,QAAL,GAAgB,IAAhB;AACAF,YAAAA,IAAI,CAAChB,GAAL,GAAWF,KAAK,CAACG,KAAN,CAAYwB,aAAZ,CAA0BtB,IAA1B,CAAX;AACD;AACF;AACF;;AA5CM;AAFJ,GAAP;AAkDD,CApDc,CAAf;;AAsDAV,OAAO,CAACE,OAAR,GAAkBU,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _core = require(\"@babel/core\");\n\nfunction getName(key) {\n  if (_core.types.isIdentifier(key)) {\n    return key.name;\n  }\n\n  return key.value.toString();\n}\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  return {\n    name: \"transform-duplicate-keys\",\n    visitor: {\n      ObjectExpression(path) {\n        const {\n          node\n        } = path;\n        const plainProps = node.properties.filter(prop => !_core.types.isSpreadElement(prop) && !prop.computed);\n        const alreadySeenData = Object.create(null);\n        const alreadySeenGetters = Object.create(null);\n        const alreadySeenSetters = Object.create(null);\n\n        for (const prop of plainProps) {\n          const name = getName(prop.key);\n          let isDuplicate = false;\n\n          switch (prop.kind) {\n            case \"get\":\n              if (alreadySeenData[name] || alreadySeenGetters[name]) {\n                isDuplicate = true;\n              }\n\n              alreadySeenGetters[name] = true;\n              break;\n\n            case \"set\":\n              if (alreadySeenData[name] || alreadySeenSetters[name]) {\n                isDuplicate = true;\n              }\n\n              alreadySeenSetters[name] = true;\n              break;\n\n            default:\n              if (alreadySeenData[name] || alreadySeenGetters[name] || alreadySeenSetters[name]) {\n                isDuplicate = true;\n              }\n\n              alreadySeenData[name] = true;\n          }\n\n          if (isDuplicate) {\n            prop.computed = true;\n            prop.key = _core.types.stringLiteral(name);\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}