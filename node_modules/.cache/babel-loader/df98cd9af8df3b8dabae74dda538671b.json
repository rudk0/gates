{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _core = require(\"@babel/core\");\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  return {\n    name: \"transform-shorthand-properties\",\n    visitor: {\n      ObjectMethod(path) {\n        const {\n          node\n        } = path;\n\n        if (node.kind === \"method\") {\n          const func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n          func.returnType = node.returnType;\n          path.replaceWith(_core.types.objectProperty(node.key, func, node.computed));\n        }\n      },\n\n      ObjectProperty({\n        node\n      }) {\n        if (node.shorthand) {\n          node.shorthand = false;\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/home/agatha/open/node_modules/@babel/plugin-transform-shorthand-properties/lib/index.js"],"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_core","_default","declare","api","assertVersion","name","visitor","ObjectMethod","path","node","kind","func","types","functionExpression","params","body","generator","async","returnType","replaceWith","objectProperty","key","computed","ObjectProperty","shorthand"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,4BAAD,CAAhC;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAAnB;;AAEA,IAAIE,QAAQ,GAAG,CAAC,GAAGH,kBAAkB,CAACI,OAAvB,EAAgCC,GAAG,IAAI;AACpDA,EAAAA,GAAG,CAACC,aAAJ,CAAkB,CAAlB;AACA,SAAO;AACLC,IAAAA,IAAI,EAAE,gCADD;AAELC,IAAAA,OAAO,EAAE;AACPC,MAAAA,YAAY,CAACC,IAAD,EAAO;AACjB,cAAM;AACJC,UAAAA;AADI,YAEFD,IAFJ;;AAIA,YAAIC,IAAI,CAACC,IAAL,KAAc,QAAlB,EAA4B;AAC1B,gBAAMC,IAAI,GAAGX,KAAK,CAACY,KAAN,CAAYC,kBAAZ,CAA+B,IAA/B,EAAqCJ,IAAI,CAACK,MAA1C,EAAkDL,IAAI,CAACM,IAAvD,EAA6DN,IAAI,CAACO,SAAlE,EAA6EP,IAAI,CAACQ,KAAlF,CAAb;;AAEAN,UAAAA,IAAI,CAACO,UAAL,GAAkBT,IAAI,CAACS,UAAvB;AACAV,UAAAA,IAAI,CAACW,WAAL,CAAiBnB,KAAK,CAACY,KAAN,CAAYQ,cAAZ,CAA2BX,IAAI,CAACY,GAAhC,EAAqCV,IAArC,EAA2CF,IAAI,CAACa,QAAhD,CAAjB;AACD;AACF,OAZM;;AAcPC,MAAAA,cAAc,CAAC;AACbd,QAAAA;AADa,OAAD,EAEX;AACD,YAAIA,IAAI,CAACe,SAAT,EAAoB;AAClBf,UAAAA,IAAI,CAACe,SAAL,GAAiB,KAAjB;AACD;AACF;;AApBM;AAFJ,GAAP;AA0BD,CA5Bc,CAAf;;AA8BA7B,OAAO,CAACE,OAAR,GAAkBI,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _core = require(\"@babel/core\");\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  return {\n    name: \"transform-shorthand-properties\",\n    visitor: {\n      ObjectMethod(path) {\n        const {\n          node\n        } = path;\n\n        if (node.kind === \"method\") {\n          const func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n          func.returnType = node.returnType;\n          path.replaceWith(_core.types.objectProperty(node.key, func, node.computed));\n        }\n      },\n\n      ObjectProperty({\n        node\n      }) {\n        if (node.shorthand) {\n          node.shorthand = false;\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}