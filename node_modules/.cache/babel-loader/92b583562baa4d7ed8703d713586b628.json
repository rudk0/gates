{"ast":null,"code":"'use strict';\n\nconst cmp = require('semver/functions/cmp');\n\nconst semver = require('semver/functions/coerce');\n\nconst has = Function.call.bind({}.hasOwnProperty);\n\nfunction compare(a, operator, b) {\n  return cmp(semver(a), operator, semver(b));\n}\n\nfunction intersection(list, order) {\n  const set = list instanceof Set ? list : new Set(list);\n  return order.filter(name => set.has(name));\n}\n\nfunction sortObjectByKey(object, fn) {\n  return Object.keys(object).sort(fn).reduce((memo, key) => {\n    memo[key] = object[key];\n    return memo;\n  }, {});\n}\n\nmodule.exports = {\n  compare,\n  has,\n  intersection,\n  semver,\n  sortObjectByKey\n};","map":{"version":3,"sources":["/home/agatha/open/node_modules/core-js-compat/helpers.js"],"names":["cmp","require","semver","has","Function","call","bind","hasOwnProperty","compare","a","operator","b","intersection","list","order","set","Set","filter","name","sortObjectByKey","object","fn","Object","keys","sort","reduce","memo","key","module","exports"],"mappings":"AAAA;;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,sBAAD,CAAnB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,yBAAD,CAAtB;;AAEA,MAAME,GAAG,GAAGC,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmB,GAAGC,cAAtB,CAAZ;;AAEA,SAASC,OAAT,CAAiBC,CAAjB,EAAoBC,QAApB,EAA8BC,CAA9B,EAAiC;AAC/B,SAAOX,GAAG,CAACE,MAAM,CAACO,CAAD,CAAP,EAAYC,QAAZ,EAAsBR,MAAM,CAACS,CAAD,CAA5B,CAAV;AACD;;AAED,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,KAA5B,EAAmC;AACjC,QAAMC,GAAG,GAAGF,IAAI,YAAYG,GAAhB,GAAsBH,IAAtB,GAA6B,IAAIG,GAAJ,CAAQH,IAAR,CAAzC;AACA,SAAOC,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIH,GAAG,CAACZ,GAAJ,CAAQe,IAAR,CAArB,CAAP;AACD;;AAED,SAASC,eAAT,CAAyBC,MAAzB,EAAiCC,EAAjC,EAAqC;AACnC,SAAOC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,IAApB,CAAyBH,EAAzB,EAA6BI,MAA7B,CAAoC,CAACC,IAAD,EAAOC,GAAP,KAAe;AACxDD,IAAAA,IAAI,CAACC,GAAD,CAAJ,GAAYP,MAAM,CAACO,GAAD,CAAlB;AACA,WAAOD,IAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACfrB,EAAAA,OADe;AAEfL,EAAAA,GAFe;AAGfS,EAAAA,YAHe;AAIfV,EAAAA,MAJe;AAKfiB,EAAAA;AALe,CAAjB","sourcesContent":["'use strict';\nconst cmp = require('semver/functions/cmp');\nconst semver = require('semver/functions/coerce');\n\nconst has = Function.call.bind({}.hasOwnProperty);\n\nfunction compare(a, operator, b) {\n  return cmp(semver(a), operator, semver(b));\n}\n\nfunction intersection(list, order) {\n  const set = list instanceof Set ? list : new Set(list);\n  return order.filter(name => set.has(name));\n}\n\nfunction sortObjectByKey(object, fn) {\n  return Object.keys(object).sort(fn).reduce((memo, key) => {\n    memo[key] = object[key];\n    return memo;\n  }, {});\n}\n\nmodule.exports = {\n  compare,\n  has,\n  intersection,\n  semver,\n  sortObjectByKey,\n};\n"]},"metadata":{},"sourceType":"script"}