{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _types = require('./types');\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass Farm {\n  constructor(numOfWorkers, callback, computeWorkerKey) {\n    _defineProperty(this, '_computeWorkerKey', void 0);\n\n    _defineProperty(this, '_cacheKeys', void 0);\n\n    _defineProperty(this, '_callback', void 0);\n\n    _defineProperty(this, '_last', void 0);\n\n    _defineProperty(this, '_locks', void 0);\n\n    _defineProperty(this, '_numOfWorkers', void 0);\n\n    _defineProperty(this, '_offset', void 0);\n\n    _defineProperty(this, '_queue', void 0);\n\n    this._cacheKeys = Object.create(null);\n    this._callback = callback;\n    this._last = [];\n    this._locks = [];\n    this._numOfWorkers = numOfWorkers;\n    this._offset = 0;\n    this._queue = [];\n\n    if (computeWorkerKey) {\n      this._computeWorkerKey = computeWorkerKey;\n    }\n  }\n\n  doWork(method, ...args) {\n    return new Promise((resolve, reject) => {\n      const computeWorkerKey = this._computeWorkerKey;\n      const request = [_types.CHILD_MESSAGE_CALL, false, method, args];\n      let worker = null;\n      let hash = null;\n\n      if (computeWorkerKey) {\n        hash = computeWorkerKey.call(this, method, ...args);\n        worker = hash == null ? null : this._cacheKeys[hash];\n      }\n\n      const onStart = worker => {\n        if (hash != null) {\n          this._cacheKeys[hash] = worker;\n        }\n      };\n\n      const onEnd = (error, result) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      };\n\n      const task = {\n        onEnd,\n        onStart,\n        request\n      };\n\n      if (worker) {\n        this._enqueue(task, worker.getWorkerId());\n      } else {\n        this._push(task);\n      }\n    });\n  }\n\n  _getNextTask(workerId) {\n    let queueHead = this._queue[workerId];\n\n    while (queueHead && queueHead.task.request[1]) {\n      queueHead = queueHead.next || null;\n    }\n\n    this._queue[workerId] = queueHead;\n    return queueHead && queueHead.task;\n  }\n\n  _process(workerId) {\n    if (this._isLocked(workerId)) {\n      return this;\n    }\n\n    const task = this._getNextTask(workerId);\n\n    if (!task) {\n      return this;\n    }\n\n    const onEnd = (error, result) => {\n      task.onEnd(error, result);\n\n      this._unlock(workerId);\n\n      this._process(workerId);\n    };\n\n    task.request[1] = true;\n\n    this._lock(workerId);\n\n    this._callback(workerId, task.request, task.onStart, onEnd);\n\n    return this;\n  }\n\n  _enqueue(task, workerId) {\n    const item = {\n      next: null,\n      task\n    };\n\n    if (task.request[1]) {\n      return this;\n    }\n\n    if (this._queue[workerId]) {\n      this._last[workerId].next = item;\n    } else {\n      this._queue[workerId] = item;\n    }\n\n    this._last[workerId] = item;\n\n    this._process(workerId);\n\n    return this;\n  }\n\n  _push(task) {\n    for (let i = 0; i < this._numOfWorkers; i++) {\n      this._enqueue(task, (this._offset + i) % this._numOfWorkers);\n    }\n\n    this._offset++;\n    return this;\n  }\n\n  _lock(workerId) {\n    this._locks[workerId] = true;\n  }\n\n  _unlock(workerId) {\n    this._locks[workerId] = false;\n  }\n\n  _isLocked(workerId) {\n    return this._locks[workerId];\n  }\n\n}\n\nexports.default = Farm;","map":{"version":3,"sources":["/home/agatha/open/node_modules/jest-worker/build/Farm.js"],"names":["Object","defineProperty","exports","value","default","_types","require","_defineProperty","obj","key","enumerable","configurable","writable","Farm","constructor","numOfWorkers","callback","computeWorkerKey","_cacheKeys","create","_callback","_last","_locks","_numOfWorkers","_offset","_queue","_computeWorkerKey","doWork","method","args","Promise","resolve","reject","request","CHILD_MESSAGE_CALL","worker","hash","call","onStart","onEnd","error","result","task","_enqueue","getWorkerId","_push","_getNextTask","workerId","queueHead","next","_process","_isLocked","_unlock","_lock","item","i"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _types = require('./types');\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nclass Farm {\n  constructor(numOfWorkers, callback, computeWorkerKey) {\n    _defineProperty(this, '_computeWorkerKey', void 0);\n\n    _defineProperty(this, '_cacheKeys', void 0);\n\n    _defineProperty(this, '_callback', void 0);\n\n    _defineProperty(this, '_last', void 0);\n\n    _defineProperty(this, '_locks', void 0);\n\n    _defineProperty(this, '_numOfWorkers', void 0);\n\n    _defineProperty(this, '_offset', void 0);\n\n    _defineProperty(this, '_queue', void 0);\n\n    this._cacheKeys = Object.create(null);\n    this._callback = callback;\n    this._last = [];\n    this._locks = [];\n    this._numOfWorkers = numOfWorkers;\n    this._offset = 0;\n    this._queue = [];\n\n    if (computeWorkerKey) {\n      this._computeWorkerKey = computeWorkerKey;\n    }\n  }\n\n  doWork(method, ...args) {\n    return new Promise((resolve, reject) => {\n      const computeWorkerKey = this._computeWorkerKey;\n      const request = [_types.CHILD_MESSAGE_CALL, false, method, args];\n      let worker = null;\n      let hash = null;\n\n      if (computeWorkerKey) {\n        hash = computeWorkerKey.call(this, method, ...args);\n        worker = hash == null ? null : this._cacheKeys[hash];\n      }\n\n      const onStart = worker => {\n        if (hash != null) {\n          this._cacheKeys[hash] = worker;\n        }\n      };\n\n      const onEnd = (error, result) => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      };\n\n      const task = {\n        onEnd,\n        onStart,\n        request\n      };\n\n      if (worker) {\n        this._enqueue(task, worker.getWorkerId());\n      } else {\n        this._push(task);\n      }\n    });\n  }\n\n  _getNextTask(workerId) {\n    let queueHead = this._queue[workerId];\n\n    while (queueHead && queueHead.task.request[1]) {\n      queueHead = queueHead.next || null;\n    }\n\n    this._queue[workerId] = queueHead;\n    return queueHead && queueHead.task;\n  }\n\n  _process(workerId) {\n    if (this._isLocked(workerId)) {\n      return this;\n    }\n\n    const task = this._getNextTask(workerId);\n\n    if (!task) {\n      return this;\n    }\n\n    const onEnd = (error, result) => {\n      task.onEnd(error, result);\n\n      this._unlock(workerId);\n\n      this._process(workerId);\n    };\n\n    task.request[1] = true;\n\n    this._lock(workerId);\n\n    this._callback(workerId, task.request, task.onStart, onEnd);\n\n    return this;\n  }\n\n  _enqueue(task, workerId) {\n    const item = {\n      next: null,\n      task\n    };\n\n    if (task.request[1]) {\n      return this;\n    }\n\n    if (this._queue[workerId]) {\n      this._last[workerId].next = item;\n    } else {\n      this._queue[workerId] = item;\n    }\n\n    this._last[workerId] = item;\n\n    this._process(workerId);\n\n    return this;\n  }\n\n  _push(task) {\n    for (let i = 0; i < this._numOfWorkers; i++) {\n      this._enqueue(task, (this._offset + i) % this._numOfWorkers);\n    }\n\n    this._offset++;\n    return this;\n  }\n\n  _lock(workerId) {\n    this._locks[workerId] = true;\n  }\n\n  _unlock(workerId) {\n    this._locks[workerId] = false;\n  }\n\n  _isLocked(workerId) {\n    return this._locks[workerId];\n  }\n}\n\nexports.default = Farm;\n"]},"metadata":{},"sourceType":"script"}