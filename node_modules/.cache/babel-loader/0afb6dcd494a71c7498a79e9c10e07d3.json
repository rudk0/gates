{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"/home/agatha/open/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/home/agatha/open/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar Types = require('./types');\n\nvar Utils = require('./utils');\n\nvar internals = {\n  needsProtoHack: new Set([Types.set, Types.map, Types.weakSet, Types.weakMap])\n};\n\nmodule.exports = internals.clone = function (obj) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _seen = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n\n  var clone = internals.clone;\n  var seen = _seen;\n\n  if (options.shallow) {\n    if (options.shallow !== true) {\n      return internals.cloneWithShallow(obj, options);\n    }\n\n    clone = function clone(value) {\n      return value;\n    };\n  } else {\n    seen = seen || new Map();\n    var lookup = seen.get(obj);\n\n    if (lookup) {\n      return lookup;\n    }\n  } // Built-in object types\n\n\n  var baseProto = Types.getInternalProto(obj);\n\n  if (baseProto === Types.buffer) {\n    return Buffer && Buffer.from(obj); // $lab:coverage:ignore$\n  }\n\n  if (baseProto === Types.date) {\n    return new Date(obj.getTime());\n  }\n\n  if (baseProto === Types.regex) {\n    return new RegExp(obj);\n  } // Generic objects\n\n\n  var newObj = internals.base(obj, baseProto, options);\n\n  if (newObj === obj) {\n    return obj;\n  }\n\n  if (seen) {\n    seen.set(obj, newObj); // Set seen, since obj could recurse\n  }\n\n  if (baseProto === Types.set) {\n    var _iterator = _createForOfIteratorHelper(obj),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var value = _step.value;\n        newObj.add(clone(value, options, seen));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else if (baseProto === Types.map) {\n    var _iterator2 = _createForOfIteratorHelper(obj),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _step2$value = _slicedToArray(_step2.value, 2),\n            key = _step2$value[0],\n            _value = _step2$value[1];\n\n        newObj.set(key, clone(_value, options, seen));\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  var keys = Utils.keys(obj, options);\n\n  var _iterator3 = _createForOfIteratorHelper(keys),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _key = _step3.value;\n\n      if (_key === '__proto__') {\n        continue;\n      }\n\n      if (baseProto === Types.array && _key === 'length') {\n        newObj.length = obj.length;\n        continue;\n      }\n\n      var descriptor = Object.getOwnPropertyDescriptor(obj, _key);\n\n      if (descriptor) {\n        if (descriptor.get || descriptor.set) {\n          Object.defineProperty(newObj, _key, descriptor);\n        } else if (descriptor.enumerable) {\n          newObj[_key] = clone(obj[_key], options, seen);\n        } else {\n          Object.defineProperty(newObj, _key, {\n            enumerable: false,\n            writable: true,\n            configurable: true,\n            value: clone(obj[_key], options, seen)\n          });\n        }\n      } else {\n        Object.defineProperty(newObj, _key, {\n          enumerable: true,\n          writable: true,\n          configurable: true,\n          value: clone(obj[_key], options, seen)\n        });\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return newObj;\n};\n\ninternals.cloneWithShallow = function (source, options) {\n  var keys = options.shallow;\n  options = Object.assign({}, options);\n  options.shallow = false;\n  var storage = Utils.store(source, keys); // Move shallow copy items to storage\n\n  var copy = internals.clone(source, options); // Deep copy the rest\n\n  Utils.restore(copy, source, storage); // Shallow copy the stored items and restore\n\n  return copy;\n};\n\ninternals.base = function (obj, baseProto, options) {\n  if (baseProto === Types.array) {\n    return [];\n  }\n\n  if (options.prototype === false) {\n    // Defaults to true\n    if (internals.needsProtoHack.has(baseProto)) {\n      return new baseProto.constructor();\n    }\n\n    return {};\n  }\n\n  var proto = Object.getPrototypeOf(obj);\n\n  if (proto && proto.isImmutable) {\n    return obj;\n  }\n\n  if (internals.needsProtoHack.has(baseProto)) {\n    var newObj = new proto.constructor();\n\n    if (proto !== baseProto) {\n      Object.setPrototypeOf(newObj, proto);\n    }\n\n    return newObj;\n  }\n\n  return Object.create(proto);\n};","map":{"version":3,"sources":["/home/agatha/open/node_modules/@hapi/hoek/lib/clone.js"],"names":["Types","require","Utils","internals","needsProtoHack","Set","set","map","weakSet","weakMap","module","exports","clone","obj","options","_seen","seen","shallow","cloneWithShallow","value","Map","lookup","get","baseProto","getInternalProto","buffer","Buffer","from","date","Date","getTime","regex","RegExp","newObj","base","add","key","keys","array","length","descriptor","Object","getOwnPropertyDescriptor","defineProperty","enumerable","writable","configurable","source","assign","storage","store","copy","restore","prototype","has","constructor","proto","getPrototypeOf","isImmutable","setPrototypeOf","create"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Types = require('./types');\nconst Utils = require('./utils');\n\n\nconst internals = {\n    needsProtoHack: new Set([Types.set, Types.map, Types.weakSet, Types.weakMap])\n};\n\n\nmodule.exports = internals.clone = function (obj, options = {}, _seen = null) {\n\n    if (typeof obj !== 'object' ||\n        obj === null) {\n\n        return obj;\n    }\n\n    let clone = internals.clone;\n    let seen = _seen;\n\n    if (options.shallow) {\n        if (options.shallow !== true) {\n            return internals.cloneWithShallow(obj, options);\n        }\n\n        clone = (value) => value;\n    }\n    else {\n        seen = seen || new Map();\n\n        const lookup = seen.get(obj);\n        if (lookup) {\n            return lookup;\n        }\n    }\n\n    // Built-in object types\n\n    const baseProto = Types.getInternalProto(obj);\n    if (baseProto === Types.buffer) {\n        return Buffer && Buffer.from(obj);              // $lab:coverage:ignore$\n    }\n\n    if (baseProto === Types.date) {\n        return new Date(obj.getTime());\n    }\n\n    if (baseProto === Types.regex) {\n        return new RegExp(obj);\n    }\n\n    // Generic objects\n\n    const newObj = internals.base(obj, baseProto, options);\n    if (newObj === obj) {\n        return obj;\n    }\n\n    if (seen) {\n        seen.set(obj, newObj);                              // Set seen, since obj could recurse\n    }\n\n    if (baseProto === Types.set) {\n        for (const value of obj) {\n            newObj.add(clone(value, options, seen));\n        }\n    }\n    else if (baseProto === Types.map) {\n        for (const [key, value] of obj) {\n            newObj.set(key, clone(value, options, seen));\n        }\n    }\n\n    const keys = Utils.keys(obj, options);\n    for (const key of keys) {\n        if (key === '__proto__') {\n            continue;\n        }\n\n        if (baseProto === Types.array &&\n            key === 'length') {\n\n            newObj.length = obj.length;\n            continue;\n        }\n\n        const descriptor = Object.getOwnPropertyDescriptor(obj, key);\n        if (descriptor) {\n            if (descriptor.get ||\n                descriptor.set) {\n\n                Object.defineProperty(newObj, key, descriptor);\n            }\n            else if (descriptor.enumerable) {\n                newObj[key] = clone(obj[key], options, seen);\n            }\n            else {\n                Object.defineProperty(newObj, key, { enumerable: false, writable: true, configurable: true, value: clone(obj[key], options, seen) });\n            }\n        }\n        else {\n            Object.defineProperty(newObj, key, {\n                enumerable: true,\n                writable: true,\n                configurable: true,\n                value: clone(obj[key], options, seen)\n            });\n        }\n    }\n\n    return newObj;\n};\n\n\ninternals.cloneWithShallow = function (source, options) {\n\n    const keys = options.shallow;\n    options = Object.assign({}, options);\n    options.shallow = false;\n\n    const storage = Utils.store(source, keys);    // Move shallow copy items to storage\n    const copy = internals.clone(source, options);      // Deep copy the rest\n    Utils.restore(copy, source, storage);         // Shallow copy the stored items and restore\n    return copy;\n};\n\n\ninternals.base = function (obj, baseProto, options) {\n\n    if (baseProto === Types.array) {\n        return [];\n    }\n\n    if (options.prototype === false) {                  // Defaults to true\n        if (internals.needsProtoHack.has(baseProto)) {\n            return new baseProto.constructor();\n        }\n\n        return {};\n    }\n\n    const proto = Object.getPrototypeOf(obj);\n    if (proto &&\n        proto.isImmutable) {\n\n        return obj;\n    }\n\n    if (internals.needsProtoHack.has(baseProto)) {\n        const newObj = new proto.constructor();\n        if (proto !== baseProto) {\n            Object.setPrototypeOf(newObj, proto);\n        }\n\n        return newObj;\n    }\n\n    return Object.create(proto);\n};\n"]},"metadata":{},"sourceType":"script"}