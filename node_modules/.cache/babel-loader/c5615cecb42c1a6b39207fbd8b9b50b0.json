{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction getObjRef(node, nodes, file, scope) {\n  let ref;\n\n  if (t.isSuper(node)) {\n    return node;\n  } else if (t.isIdentifier(node)) {\n    if (scope.hasBinding(node.name)) {\n      return node;\n    } else {\n      ref = node;\n    }\n  } else if (t.isMemberExpression(node)) {\n    ref = node.object;\n\n    if (t.isSuper(ref) || t.isIdentifier(ref) && scope.hasBinding(ref.name)) {\n      return ref;\n    }\n  } else {\n    throw new Error(`We can't explode this node type ${node.type}`);\n  }\n\n  const temp = scope.generateUidIdentifierBasedOnNode(ref);\n  scope.push({\n    id: temp\n  });\n  nodes.push(t.assignmentExpression(\"=\", t.cloneNode(temp), t.cloneNode(ref)));\n  return temp;\n}\n\nfunction getPropRef(node, nodes, file, scope) {\n  const prop = node.property;\n  const key = t.toComputedKey(node, prop);\n  if (t.isLiteral(key) && t.isPureish(key)) return key;\n  const temp = scope.generateUidIdentifierBasedOnNode(prop);\n  scope.push({\n    id: temp\n  });\n  nodes.push(t.assignmentExpression(\"=\", t.cloneNode(temp), t.cloneNode(prop)));\n  return temp;\n}\n\nfunction _default(node, nodes, file, scope, allowedSingleIdent) {\n  let obj;\n\n  if (t.isIdentifier(node) && allowedSingleIdent) {\n    obj = node;\n  } else {\n    obj = getObjRef(node, nodes, file, scope);\n  }\n\n  let ref, uid;\n\n  if (t.isIdentifier(node)) {\n    ref = t.cloneNode(node);\n    uid = obj;\n  } else {\n    const prop = getPropRef(node, nodes, file, scope);\n    const computed = node.computed || t.isLiteral(prop);\n    uid = t.memberExpression(t.cloneNode(obj), t.cloneNode(prop), computed);\n    ref = t.memberExpression(t.cloneNode(obj), t.cloneNode(prop), computed);\n  }\n\n  return {\n    uid: uid,\n    ref: ref\n  };\n}","map":{"version":3,"sources":["/home/agatha/open/node_modules/@babel/helper-explode-assignable-expression/lib/index.js"],"names":["Object","defineProperty","exports","value","default","_default","t","_interopRequireWildcard","require","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","getObjRef","node","nodes","file","scope","ref","isSuper","isIdentifier","hasBinding","name","isMemberExpression","object","Error","type","temp","generateUidIdentifierBasedOnNode","push","id","assignmentExpression","cloneNode","getPropRef","prop","property","toComputedKey","isLiteral","isPureish","allowedSingleIdent","uid","computed","memberExpression"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction getObjRef(node, nodes, file, scope) {\n  let ref;\n\n  if (t.isSuper(node)) {\n    return node;\n  } else if (t.isIdentifier(node)) {\n    if (scope.hasBinding(node.name)) {\n      return node;\n    } else {\n      ref = node;\n    }\n  } else if (t.isMemberExpression(node)) {\n    ref = node.object;\n\n    if (t.isSuper(ref) || t.isIdentifier(ref) && scope.hasBinding(ref.name)) {\n      return ref;\n    }\n  } else {\n    throw new Error(`We can't explode this node type ${node.type}`);\n  }\n\n  const temp = scope.generateUidIdentifierBasedOnNode(ref);\n  scope.push({\n    id: temp\n  });\n  nodes.push(t.assignmentExpression(\"=\", t.cloneNode(temp), t.cloneNode(ref)));\n  return temp;\n}\n\nfunction getPropRef(node, nodes, file, scope) {\n  const prop = node.property;\n  const key = t.toComputedKey(node, prop);\n  if (t.isLiteral(key) && t.isPureish(key)) return key;\n  const temp = scope.generateUidIdentifierBasedOnNode(prop);\n  scope.push({\n    id: temp\n  });\n  nodes.push(t.assignmentExpression(\"=\", t.cloneNode(temp), t.cloneNode(prop)));\n  return temp;\n}\n\nfunction _default(node, nodes, file, scope, allowedSingleIdent) {\n  let obj;\n\n  if (t.isIdentifier(node) && allowedSingleIdent) {\n    obj = node;\n  } else {\n    obj = getObjRef(node, nodes, file, scope);\n  }\n\n  let ref, uid;\n\n  if (t.isIdentifier(node)) {\n    ref = t.cloneNode(node);\n    uid = obj;\n  } else {\n    const prop = getPropRef(node, nodes, file, scope);\n    const computed = node.computed || t.isLiteral(prop);\n    uid = t.memberExpression(t.cloneNode(obj), t.cloneNode(prop), computed);\n    ref = t.memberExpression(t.cloneNode(obj), t.cloneNode(prop), computed);\n  }\n\n  return {\n    uid: uid,\n    ref: ref\n  };\n}"]},"metadata":{},"sourceType":"script"}