{"ast":null,"code":"'use strict';\n\nvar internals = {};\n\nmodule.exports = function (input) {\n  if (!input) {\n    return '';\n  }\n\n  var lessThan = 0x3C;\n  var greaterThan = 0x3E;\n  var andSymbol = 0x26;\n  var lineSeperator = 0x2028; // replace method\n\n  var charCode;\n  return input.replace(/[<>&\\u2028\\u2029]/g, function (match) {\n    charCode = match.charCodeAt(0);\n\n    if (charCode === lessThan) {\n      return \"\\\\u003c\";\n    }\n\n    if (charCode === greaterThan) {\n      return \"\\\\u003e\";\n    }\n\n    if (charCode === andSymbol) {\n      return \"\\\\u0026\";\n    }\n\n    if (charCode === lineSeperator) {\n      return \"\\\\u2028\";\n    }\n\n    return \"\\\\u2029\";\n  });\n};","map":{"version":3,"sources":["/home/agatha/open/node_modules/@hapi/hoek/lib/escapeJson.js"],"names":["internals","module","exports","input","lessThan","greaterThan","andSymbol","lineSeperator","charCode","replace","match","charCodeAt"],"mappings":"AAAA;;AAEA,IAAMA,SAAS,GAAG,EAAlB;;AAGAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,KAAV,EAAiB;AAE9B,MAAI,CAACA,KAAL,EAAY;AACR,WAAO,EAAP;AACH;;AAED,MAAMC,QAAQ,GAAG,IAAjB;AACA,MAAMC,WAAW,GAAG,IAApB;AACA,MAAMC,SAAS,GAAG,IAAlB;AACA,MAAMC,aAAa,GAAG,MAAtB,CAT8B,CAW9B;;AACA,MAAIC,QAAJ;AACA,SAAOL,KAAK,CAACM,OAAN,CAAc,oBAAd,EAAoC,UAACC,KAAD,EAAW;AAElDF,IAAAA,QAAQ,GAAGE,KAAK,CAACC,UAAN,CAAiB,CAAjB,CAAX;;AAEA,QAAIH,QAAQ,KAAKJ,QAAjB,EAA2B;AACvB,aAAO,SAAP;AACH;;AAED,QAAII,QAAQ,KAAKH,WAAjB,EAA8B;AAC1B,aAAO,SAAP;AACH;;AAED,QAAIG,QAAQ,KAAKF,SAAjB,EAA4B;AACxB,aAAO,SAAP;AACH;;AAED,QAAIE,QAAQ,KAAKD,aAAjB,EAAgC;AAC5B,aAAO,SAAP;AACH;;AAED,WAAO,SAAP;AACH,GArBM,CAAP;AAsBH,CAnCD","sourcesContent":["'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function (input) {\n\n    if (!input) {\n        return '';\n    }\n\n    const lessThan = 0x3C;\n    const greaterThan = 0x3E;\n    const andSymbol = 0x26;\n    const lineSeperator = 0x2028;\n\n    // replace method\n    let charCode;\n    return input.replace(/[<>&\\u2028\\u2029]/g, (match) => {\n\n        charCode = match.charCodeAt(0);\n\n        if (charCode === lessThan) {\n            return '\\\\u003c';\n        }\n\n        if (charCode === greaterThan) {\n            return '\\\\u003e';\n        }\n\n        if (charCode === andSymbol) {\n            return '\\\\u0026';\n        }\n\n        if (charCode === lineSeperator) {\n            return '\\\\u2028';\n        }\n\n        return '\\\\u2029';\n    });\n};\n"]},"metadata":{},"sourceType":"script"}