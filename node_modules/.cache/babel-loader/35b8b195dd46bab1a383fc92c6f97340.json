{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _data = _interopRequireDefault(require(\"core-js-compat/data\"));\n\nvar _corejs3ShippedProposals = _interopRequireDefault(require(\"@babel/compat-data/corejs3-shipped-proposals\"));\n\nvar _getModulesListForTargetVersion = _interopRequireDefault(require(\"core-js-compat/get-modules-list-for-target-version\"));\n\nvar _helperCompilationTargets = require(\"@babel/helper-compilation-targets\");\n\nvar _builtInDefinitions = require(\"./built-in-definitions\");\n\nvar _utils = require(\"../../utils\");\n\nvar _debug = require(\"../../debug\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst NO_DIRECT_POLYFILL_IMPORT = `\n  When setting \\`useBuiltIns: 'usage'\\`, polyfills are automatically imported when needed.\n  Please remove the direct import of \\`core-js\\` or use \\`useBuiltIns: 'entry'\\` instead.`;\nconst corejs3PolyfillsWithoutProposals = Object.keys(_data.default).filter(name => !name.startsWith(\"esnext.\")).reduce((memo, key) => {\n  memo[key] = _data.default[key];\n  return memo;\n}, {});\n\nconst corejs3PolyfillsWithShippedProposals = _corejs3ShippedProposals.default.reduce((memo, key) => {\n  memo[key] = _data.default[key];\n  return memo;\n}, Object.assign({}, corejs3PolyfillsWithoutProposals));\n\nfunction _default(_, {\n  corejs,\n  include,\n  exclude,\n  polyfillTargets,\n  proposals,\n  shippedProposals,\n  debug\n}) {\n  const polyfills = (0, _helperCompilationTargets.filterItems)(proposals ? _data.default : shippedProposals ? corejs3PolyfillsWithShippedProposals : corejs3PolyfillsWithoutProposals, include, exclude, polyfillTargets, null);\n  const available = new Set((0, _getModulesListForTargetVersion.default)(corejs.version));\n\n  function resolveKey(path, computed) {\n    const {\n      node,\n      parent,\n      scope\n    } = path;\n    if (path.isStringLiteral()) return node.value;\n    const {\n      name\n    } = node;\n    const isIdentifier = path.isIdentifier();\n    if (isIdentifier && !(computed || parent.computed)) return name;\n\n    if (!isIdentifier || scope.getBindingIdentifier(name)) {\n      const {\n        value\n      } = path.evaluate();\n      if (typeof value === \"string\") return value;\n    }\n  }\n\n  function resolveSource(path) {\n    const {\n      node,\n      scope\n    } = path;\n    let builtIn, instanceType;\n\n    if (node) {\n      builtIn = node.name;\n\n      if (!path.isIdentifier() || scope.getBindingIdentifier(builtIn)) {\n        const {\n          deopt,\n          value\n        } = path.evaluate();\n\n        if (value !== undefined) {\n          instanceType = (0, _utils.getType)(value);\n        } else if (deopt == null ? void 0 : deopt.isIdentifier()) {\n          builtIn = deopt.node.name;\n        }\n      }\n    }\n\n    return {\n      builtIn,\n      instanceType,\n      isNamespaced: (0, _utils.isNamespaced)(path)\n    };\n  }\n\n  const addAndRemovePolyfillImports = {\n    ImportDeclaration(path) {\n      if ((0, _utils.isPolyfillSource)((0, _utils.getImportSource)(path))) {\n        console.warn(NO_DIRECT_POLYFILL_IMPORT);\n        path.remove();\n      }\n    },\n\n    Program: {\n      enter(path) {\n        path.get(\"body\").forEach(bodyPath => {\n          if ((0, _utils.isPolyfillSource)((0, _utils.getRequireSource)(bodyPath))) {\n            console.warn(NO_DIRECT_POLYFILL_IMPORT);\n            bodyPath.remove();\n          }\n        });\n      },\n\n      exit(path) {\n        const filtered = (0, _utils.intersection)(polyfills, this.polyfillsSet, available);\n        const reversed = Array.from(filtered).reverse();\n\n        for (const module of reversed) {\n          if (!this.injectedPolyfills.has(module)) {\n            (0, _utils.createImport)(path, module);\n          }\n        }\n\n        filtered.forEach(module => this.injectedPolyfills.add(module));\n      }\n\n    },\n\n    Import() {\n      this.addUnsupported(_builtInDefinitions.PromiseDependencies);\n    },\n\n    Function({\n      node\n    }) {\n      if (node.async) {\n        this.addUnsupported(_builtInDefinitions.PromiseDependencies);\n      }\n    },\n\n    \"ForOfStatement|ArrayPattern\"() {\n      this.addUnsupported(_builtInDefinitions.CommonIterators);\n    },\n\n    SpreadElement({\n      parentPath\n    }) {\n      if (!parentPath.isObjectExpression()) {\n        this.addUnsupported(_builtInDefinitions.CommonIterators);\n      }\n    },\n\n    YieldExpression({\n      node\n    }) {\n      if (node.delegate) {\n        this.addUnsupported(_builtInDefinitions.CommonIterators);\n      }\n    },\n\n    ReferencedIdentifier({\n      node: {\n        name\n      },\n      scope\n    }) {\n      if (scope.getBindingIdentifier(name)) return;\n      this.addBuiltInDependencies(name);\n    },\n\n    MemberExpression(path) {\n      const source = resolveSource(path.get(\"object\"));\n      const key = resolveKey(path.get(\"property\"));\n      this.addPropertyDependencies(source, key);\n    },\n\n    ObjectPattern(path) {\n      const {\n        parentPath,\n        parent,\n        key\n      } = path;\n      let source;\n\n      if (parentPath.isVariableDeclarator()) {\n        source = resolveSource(parentPath.get(\"init\"));\n      } else if (parentPath.isAssignmentExpression()) {\n        source = resolveSource(parentPath.get(\"right\"));\n      } else if (parentPath.isFunctionExpression()) {\n        const grand = parentPath.parentPath;\n\n        if (grand.isCallExpression() || grand.isNewExpression()) {\n          if (grand.node.callee === parent) {\n            source = resolveSource(grand.get(\"arguments\")[key]);\n          }\n        }\n      }\n\n      for (const property of path.get(\"properties\")) {\n        if (property.isObjectProperty()) {\n          const key = resolveKey(property.get(\"key\"));\n          this.addPropertyDependencies(source, key);\n        }\n      }\n    },\n\n    BinaryExpression(path) {\n      if (path.node.operator !== \"in\") return;\n      const source = resolveSource(path.get(\"right\"));\n      const key = resolveKey(path.get(\"left\"), true);\n      this.addPropertyDependencies(source, key);\n    }\n\n  };\n  return {\n    name: \"corejs3-usage\",\n\n    pre() {\n      this.injectedPolyfills = new Set();\n      this.polyfillsSet = new Set();\n\n      this.addUnsupported = function (builtIn) {\n        const modules = Array.isArray(builtIn) ? builtIn : [builtIn];\n\n        for (const module of modules) {\n          this.polyfillsSet.add(module);\n        }\n      };\n\n      this.addBuiltInDependencies = function (builtIn) {\n        if ((0, _utils.has)(_builtInDefinitions.BuiltIns, builtIn)) {\n          const BuiltInDependencies = _builtInDefinitions.BuiltIns[builtIn];\n          this.addUnsupported(BuiltInDependencies);\n        }\n      };\n\n      this.addPropertyDependencies = function (source = {}, key) {\n        const {\n          builtIn,\n          instanceType,\n          isNamespaced\n        } = source;\n        if (isNamespaced) return;\n\n        if (_builtInDefinitions.PossibleGlobalObjects.has(builtIn)) {\n          this.addBuiltInDependencies(key);\n        } else if ((0, _utils.has)(_builtInDefinitions.StaticProperties, builtIn)) {\n          const BuiltInProperties = _builtInDefinitions.StaticProperties[builtIn];\n\n          if ((0, _utils.has)(BuiltInProperties, key)) {\n            const StaticPropertyDependencies = BuiltInProperties[key];\n            return this.addUnsupported(StaticPropertyDependencies);\n          }\n        }\n\n        if (!(0, _utils.has)(_builtInDefinitions.InstanceProperties, key)) return;\n        let InstancePropertyDependencies = _builtInDefinitions.InstanceProperties[key];\n\n        if (instanceType) {\n          InstancePropertyDependencies = InstancePropertyDependencies.filter(m => m.includes(instanceType) || _builtInDefinitions.CommonInstanceDependencies.has(m));\n        }\n\n        this.addUnsupported(InstancePropertyDependencies);\n      };\n    },\n\n    post() {\n      if (debug) {\n        (0, _debug.logUsagePolyfills)(this.injectedPolyfills, this.file.opts.filename, polyfillTargets, _data.default);\n      }\n    },\n\n    visitor: addAndRemovePolyfillImports\n  };\n}","map":{"version":3,"sources":["/home/agatha/open/node_modules/@babel/preset-env/lib/polyfills/corejs3/usage-plugin.js"],"names":["Object","defineProperty","exports","value","default","_default","_data","_interopRequireDefault","require","_corejs3ShippedProposals","_getModulesListForTargetVersion","_helperCompilationTargets","_builtInDefinitions","_utils","_debug","obj","__esModule","NO_DIRECT_POLYFILL_IMPORT","corejs3PolyfillsWithoutProposals","keys","filter","name","startsWith","reduce","memo","key","corejs3PolyfillsWithShippedProposals","assign","_","corejs","include","exclude","polyfillTargets","proposals","shippedProposals","debug","polyfills","filterItems","available","Set","version","resolveKey","path","computed","node","parent","scope","isStringLiteral","isIdentifier","getBindingIdentifier","evaluate","resolveSource","builtIn","instanceType","deopt","undefined","getType","isNamespaced","addAndRemovePolyfillImports","ImportDeclaration","isPolyfillSource","getImportSource","console","warn","remove","Program","enter","get","forEach","bodyPath","getRequireSource","exit","filtered","intersection","polyfillsSet","reversed","Array","from","reverse","module","injectedPolyfills","has","createImport","add","Import","addUnsupported","PromiseDependencies","Function","async","CommonIterators","SpreadElement","parentPath","isObjectExpression","YieldExpression","delegate","ReferencedIdentifier","addBuiltInDependencies","MemberExpression","source","addPropertyDependencies","ObjectPattern","isVariableDeclarator","isAssignmentExpression","isFunctionExpression","grand","isCallExpression","isNewExpression","callee","property","isObjectProperty","BinaryExpression","operator","pre","modules","isArray","BuiltIns","BuiltInDependencies","PossibleGlobalObjects","StaticProperties","BuiltInProperties","StaticPropertyDependencies","InstanceProperties","InstancePropertyDependencies","m","includes","CommonInstanceDependencies","post","logUsagePolyfills","file","opts","filename","visitor"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _data = _interopRequireDefault(require(\"core-js-compat/data\"));\n\nvar _corejs3ShippedProposals = _interopRequireDefault(require(\"@babel/compat-data/corejs3-shipped-proposals\"));\n\nvar _getModulesListForTargetVersion = _interopRequireDefault(require(\"core-js-compat/get-modules-list-for-target-version\"));\n\nvar _helperCompilationTargets = require(\"@babel/helper-compilation-targets\");\n\nvar _builtInDefinitions = require(\"./built-in-definitions\");\n\nvar _utils = require(\"../../utils\");\n\nvar _debug = require(\"../../debug\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_DIRECT_POLYFILL_IMPORT = `\n  When setting \\`useBuiltIns: 'usage'\\`, polyfills are automatically imported when needed.\n  Please remove the direct import of \\`core-js\\` or use \\`useBuiltIns: 'entry'\\` instead.`;\nconst corejs3PolyfillsWithoutProposals = Object.keys(_data.default).filter(name => !name.startsWith(\"esnext.\")).reduce((memo, key) => {\n  memo[key] = _data.default[key];\n  return memo;\n}, {});\n\nconst corejs3PolyfillsWithShippedProposals = _corejs3ShippedProposals.default.reduce((memo, key) => {\n  memo[key] = _data.default[key];\n  return memo;\n}, Object.assign({}, corejs3PolyfillsWithoutProposals));\n\nfunction _default(_, {\n  corejs,\n  include,\n  exclude,\n  polyfillTargets,\n  proposals,\n  shippedProposals,\n  debug\n}) {\n  const polyfills = (0, _helperCompilationTargets.filterItems)(proposals ? _data.default : shippedProposals ? corejs3PolyfillsWithShippedProposals : corejs3PolyfillsWithoutProposals, include, exclude, polyfillTargets, null);\n  const available = new Set((0, _getModulesListForTargetVersion.default)(corejs.version));\n\n  function resolveKey(path, computed) {\n    const {\n      node,\n      parent,\n      scope\n    } = path;\n    if (path.isStringLiteral()) return node.value;\n    const {\n      name\n    } = node;\n    const isIdentifier = path.isIdentifier();\n    if (isIdentifier && !(computed || parent.computed)) return name;\n\n    if (!isIdentifier || scope.getBindingIdentifier(name)) {\n      const {\n        value\n      } = path.evaluate();\n      if (typeof value === \"string\") return value;\n    }\n  }\n\n  function resolveSource(path) {\n    const {\n      node,\n      scope\n    } = path;\n    let builtIn, instanceType;\n\n    if (node) {\n      builtIn = node.name;\n\n      if (!path.isIdentifier() || scope.getBindingIdentifier(builtIn)) {\n        const {\n          deopt,\n          value\n        } = path.evaluate();\n\n        if (value !== undefined) {\n          instanceType = (0, _utils.getType)(value);\n        } else if (deopt == null ? void 0 : deopt.isIdentifier()) {\n          builtIn = deopt.node.name;\n        }\n      }\n    }\n\n    return {\n      builtIn,\n      instanceType,\n      isNamespaced: (0, _utils.isNamespaced)(path)\n    };\n  }\n\n  const addAndRemovePolyfillImports = {\n    ImportDeclaration(path) {\n      if ((0, _utils.isPolyfillSource)((0, _utils.getImportSource)(path))) {\n        console.warn(NO_DIRECT_POLYFILL_IMPORT);\n        path.remove();\n      }\n    },\n\n    Program: {\n      enter(path) {\n        path.get(\"body\").forEach(bodyPath => {\n          if ((0, _utils.isPolyfillSource)((0, _utils.getRequireSource)(bodyPath))) {\n            console.warn(NO_DIRECT_POLYFILL_IMPORT);\n            bodyPath.remove();\n          }\n        });\n      },\n\n      exit(path) {\n        const filtered = (0, _utils.intersection)(polyfills, this.polyfillsSet, available);\n        const reversed = Array.from(filtered).reverse();\n\n        for (const module of reversed) {\n          if (!this.injectedPolyfills.has(module)) {\n            (0, _utils.createImport)(path, module);\n          }\n        }\n\n        filtered.forEach(module => this.injectedPolyfills.add(module));\n      }\n\n    },\n\n    Import() {\n      this.addUnsupported(_builtInDefinitions.PromiseDependencies);\n    },\n\n    Function({\n      node\n    }) {\n      if (node.async) {\n        this.addUnsupported(_builtInDefinitions.PromiseDependencies);\n      }\n    },\n\n    \"ForOfStatement|ArrayPattern\"() {\n      this.addUnsupported(_builtInDefinitions.CommonIterators);\n    },\n\n    SpreadElement({\n      parentPath\n    }) {\n      if (!parentPath.isObjectExpression()) {\n        this.addUnsupported(_builtInDefinitions.CommonIterators);\n      }\n    },\n\n    YieldExpression({\n      node\n    }) {\n      if (node.delegate) {\n        this.addUnsupported(_builtInDefinitions.CommonIterators);\n      }\n    },\n\n    ReferencedIdentifier({\n      node: {\n        name\n      },\n      scope\n    }) {\n      if (scope.getBindingIdentifier(name)) return;\n      this.addBuiltInDependencies(name);\n    },\n\n    MemberExpression(path) {\n      const source = resolveSource(path.get(\"object\"));\n      const key = resolveKey(path.get(\"property\"));\n      this.addPropertyDependencies(source, key);\n    },\n\n    ObjectPattern(path) {\n      const {\n        parentPath,\n        parent,\n        key\n      } = path;\n      let source;\n\n      if (parentPath.isVariableDeclarator()) {\n        source = resolveSource(parentPath.get(\"init\"));\n      } else if (parentPath.isAssignmentExpression()) {\n        source = resolveSource(parentPath.get(\"right\"));\n      } else if (parentPath.isFunctionExpression()) {\n        const grand = parentPath.parentPath;\n\n        if (grand.isCallExpression() || grand.isNewExpression()) {\n          if (grand.node.callee === parent) {\n            source = resolveSource(grand.get(\"arguments\")[key]);\n          }\n        }\n      }\n\n      for (const property of path.get(\"properties\")) {\n        if (property.isObjectProperty()) {\n          const key = resolveKey(property.get(\"key\"));\n          this.addPropertyDependencies(source, key);\n        }\n      }\n    },\n\n    BinaryExpression(path) {\n      if (path.node.operator !== \"in\") return;\n      const source = resolveSource(path.get(\"right\"));\n      const key = resolveKey(path.get(\"left\"), true);\n      this.addPropertyDependencies(source, key);\n    }\n\n  };\n  return {\n    name: \"corejs3-usage\",\n\n    pre() {\n      this.injectedPolyfills = new Set();\n      this.polyfillsSet = new Set();\n\n      this.addUnsupported = function (builtIn) {\n        const modules = Array.isArray(builtIn) ? builtIn : [builtIn];\n\n        for (const module of modules) {\n          this.polyfillsSet.add(module);\n        }\n      };\n\n      this.addBuiltInDependencies = function (builtIn) {\n        if ((0, _utils.has)(_builtInDefinitions.BuiltIns, builtIn)) {\n          const BuiltInDependencies = _builtInDefinitions.BuiltIns[builtIn];\n          this.addUnsupported(BuiltInDependencies);\n        }\n      };\n\n      this.addPropertyDependencies = function (source = {}, key) {\n        const {\n          builtIn,\n          instanceType,\n          isNamespaced\n        } = source;\n        if (isNamespaced) return;\n\n        if (_builtInDefinitions.PossibleGlobalObjects.has(builtIn)) {\n          this.addBuiltInDependencies(key);\n        } else if ((0, _utils.has)(_builtInDefinitions.StaticProperties, builtIn)) {\n          const BuiltInProperties = _builtInDefinitions.StaticProperties[builtIn];\n\n          if ((0, _utils.has)(BuiltInProperties, key)) {\n            const StaticPropertyDependencies = BuiltInProperties[key];\n            return this.addUnsupported(StaticPropertyDependencies);\n          }\n        }\n\n        if (!(0, _utils.has)(_builtInDefinitions.InstanceProperties, key)) return;\n        let InstancePropertyDependencies = _builtInDefinitions.InstanceProperties[key];\n\n        if (instanceType) {\n          InstancePropertyDependencies = InstancePropertyDependencies.filter(m => m.includes(instanceType) || _builtInDefinitions.CommonInstanceDependencies.has(m));\n        }\n\n        this.addUnsupported(InstancePropertyDependencies);\n      };\n    },\n\n    post() {\n      if (debug) {\n        (0, _debug.logUsagePolyfills)(this.injectedPolyfills, this.file.opts.filename, polyfillTargets, _data.default);\n      }\n    },\n\n    visitor: addAndRemovePolyfillImports\n  };\n}"]},"metadata":{},"sourceType":"script"}