{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"convertFunctionParams\", {\n  enumerable: true,\n  get: function () {\n    return _params.default;\n  }\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _params = _interopRequireDefault(require(\"./params\"));\n\nvar _rest = _interopRequireDefault(require(\"./rest\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  return {\n    name: \"transform-parameters\",\n    visitor: {\n      Function(path) {\n        if (path.isArrowFunctionExpression() && path.get(\"params\").some(param => param.isRestElement() || param.isAssignmentPattern())) {\n          path.arrowFunctionToExpression();\n        }\n\n        const convertedRest = (0, _rest.default)(path);\n        const convertedParams = (0, _params.default)(path, loose);\n\n        if (convertedRest || convertedParams) {\n          path.scope.crawl();\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/home/agatha/open/node_modules/@babel/plugin-transform-parameters/lib/index.js"],"names":["Object","defineProperty","exports","value","enumerable","get","_params","default","_helperPluginUtils","require","_interopRequireDefault","_rest","obj","__esModule","_default","declare","api","options","assertVersion","loose","name","visitor","Function","path","isArrowFunctionExpression","some","param","isRestElement","isAssignmentPattern","arrowFunctionToExpression","convertedRest","convertedParams","scope","crawl"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAH,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,uBAA/B,EAAwD;AACtDE,EAAAA,UAAU,EAAE,IAD0C;AAEtDC,EAAAA,GAAG,EAAE,YAAY;AACf,WAAOC,OAAO,CAACC,OAAf;AACD;AAJqD,CAAxD;AAMAL,OAAO,CAACK,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,4BAAD,CAAhC;;AAEA,IAAIH,OAAO,GAAGI,sBAAsB,CAACD,OAAO,CAAC,UAAD,CAAR,CAApC;;AAEA,IAAIE,KAAK,GAAGD,sBAAsB,CAACD,OAAO,CAAC,QAAD,CAAR,CAAlC;;AAEA,SAASC,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,QAAQ,GAAG,CAAC,GAAGN,kBAAkB,CAACO,OAAvB,EAAgC,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC/DD,EAAAA,GAAG,CAACE,aAAJ,CAAkB,CAAlB;AACA,QAAM;AACJC,IAAAA;AADI,MAEFF,OAFJ;AAGA,SAAO;AACLG,IAAAA,IAAI,EAAE,sBADD;AAELC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,CAACC,IAAD,EAAO;AACb,YAAIA,IAAI,CAACC,yBAAL,MAAoCD,IAAI,CAAClB,GAAL,CAAS,QAAT,EAAmBoB,IAAnB,CAAwBC,KAAK,IAAIA,KAAK,CAACC,aAAN,MAAyBD,KAAK,CAACE,mBAAN,EAA1D,CAAxC,EAAgI;AAC9HL,UAAAA,IAAI,CAACM,yBAAL;AACD;;AAED,cAAMC,aAAa,GAAG,CAAC,GAAGnB,KAAK,CAACJ,OAAV,EAAmBgB,IAAnB,CAAtB;AACA,cAAMQ,eAAe,GAAG,CAAC,GAAGzB,OAAO,CAACC,OAAZ,EAAqBgB,IAArB,EAA2BJ,KAA3B,CAAxB;;AAEA,YAAIW,aAAa,IAAIC,eAArB,EAAsC;AACpCR,UAAAA,IAAI,CAACS,KAAL,CAAWC,KAAX;AACD;AACF;;AAZM;AAFJ,GAAP;AAkBD,CAvBc,CAAf;;AAyBA/B,OAAO,CAACK,OAAR,GAAkBO,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"convertFunctionParams\", {\n  enumerable: true,\n  get: function () {\n    return _params.default;\n  }\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _params = _interopRequireDefault(require(\"./params\"));\n\nvar _rest = _interopRequireDefault(require(\"./rest\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  return {\n    name: \"transform-parameters\",\n    visitor: {\n      Function(path) {\n        if (path.isArrowFunctionExpression() && path.get(\"params\").some(param => param.isRestElement() || param.isAssignmentPattern())) {\n          path.arrowFunctionToExpression();\n        }\n\n        const convertedRest = (0, _rest.default)(path);\n        const convertedParams = (0, _params.default)(path, loose);\n\n        if (convertedRest || convertedParams) {\n          path.scope.crawl();\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}