{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/agatha/open/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/agatha/open/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Hoek = require('@hapi/hoek');\n\nvar Language = require('./language');\n\nvar internals = {\n  annotations: Symbol('joi-annotations')\n};\n\ninternals.stringify = function (value, wrapArrays) {\n  var type = typeof value;\n\n  if (value === null) {\n    return 'null';\n  }\n\n  if (type === 'string') {\n    return value;\n  }\n\n  if (value instanceof exports.Err || type === 'function' || type === 'symbol') {\n    return value.toString();\n  }\n\n  if (type === 'object') {\n    if (Array.isArray(value)) {\n      var partial = '';\n\n      for (var i = 0; i < value.length; ++i) {\n        partial = partial + (partial.length ? ', ' : '') + internals.stringify(value[i], wrapArrays);\n      }\n\n      return wrapArrays ? '[' + partial + ']' : partial;\n    }\n\n    return value.toString();\n  }\n\n  return JSON.stringify(value);\n};\n\nexports.Err = /*#__PURE__*/function () {\n  function _class(type, context, state, options, flags, message, template) {\n    _classCallCheck(this, _class);\n\n    this.isJoi = true;\n    this.type = type;\n    this.context = context || {};\n    this.context.key = state.path[state.path.length - 1];\n    this.context.label = state.key;\n    this.path = state.path;\n    this.options = options;\n    this.flags = flags;\n    this.message = message;\n    this.template = template;\n    var localized = this.options.language;\n\n    if (this.flags.label) {\n      this.context.label = this.flags.label;\n    } else if (localized && ( // language can be null for arrays exclusion check\n    this.context.label === '' || this.context.label === null)) {\n      this.context.label = localized.root || Language.errors.root;\n    }\n  }\n\n  _createClass(_class, [{\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      if (this.message) {\n        return this.message;\n      }\n\n      var format;\n\n      if (this.template) {\n        format = this.template;\n      }\n\n      var localized = this.options.language;\n      format = format || Hoek.reach(localized, this.type) || Hoek.reach(Language.errors, this.type);\n\n      if (format === undefined) {\n        return \"Error code \\\"\".concat(this.type, \"\\\" is not defined, your custom type is missing the correct language definition\");\n      }\n\n      var wrapArrays = Hoek.reach(localized, 'messages.wrapArrays');\n\n      if (typeof wrapArrays !== 'boolean') {\n        wrapArrays = Language.errors.messages.wrapArrays;\n      }\n\n      if (format === null) {\n        var childrenString = internals.stringify(this.context.reason, wrapArrays);\n\n        if (wrapArrays) {\n          return childrenString.slice(1, -1);\n        }\n\n        return childrenString;\n      }\n\n      var hasKey = /{{!?label}}/.test(format);\n      var skipKey = format.length > 2 && format[0] === '!' && format[1] === '!';\n\n      if (skipKey) {\n        format = format.slice(2);\n      }\n\n      if (!hasKey && !skipKey) {\n        var localizedKey = Hoek.reach(localized, 'key');\n\n        if (typeof localizedKey === 'string') {\n          format = localizedKey + format;\n        } else {\n          format = Hoek.reach(Language.errors, 'key') + format;\n        }\n      }\n\n      var message = format.replace(/{{(!?)([^}]+)}}/g, function ($0, isSecure, name) {\n        var value = Hoek.reach(_this.context, name);\n        var normalized = internals.stringify(value, wrapArrays);\n        return isSecure && _this.options.escapeHtml ? Hoek.escapeHtml(normalized) : normalized;\n      });\n\n      this.toString = function () {\n        return message;\n      }; // Persist result of last toString call, it won't change\n\n\n      return message;\n    }\n  }]);\n\n  return _class;\n}();\n\nexports.create = function (type, context, state, options, flags, message, template) {\n  return new exports.Err(type, context, state, options, flags, message, template);\n};\n\nexports.process = function (errors, object) {\n  if (!errors) {\n    return null;\n  } // Construct error\n\n\n  var message = '';\n  var details = [];\n\n  var processErrors = function processErrors(localErrors, parent, overrideMessage) {\n    for (var i = 0; i < localErrors.length; ++i) {\n      var item = localErrors[i];\n\n      if (item instanceof Error) {\n        return item;\n      }\n\n      if (item.flags.error && typeof item.flags.error !== 'function') {\n        if (!item.flags.selfError || !item.context.reason) {\n          return item.flags.error;\n        }\n      }\n\n      var itemMessage = void 0;\n\n      if (parent === undefined) {\n        itemMessage = item.toString();\n        message = message + (message ? '. ' : '') + itemMessage;\n      } // Do not push intermediate errors, we're only interested in leafs\n\n\n      if (item.context.reason) {\n        var _override = processErrors(item.context.reason, item.path, item.type === 'override' ? item.message : null);\n\n        if (_override) {\n          return _override;\n        }\n      } else {\n        details.push({\n          message: overrideMessage || itemMessage || item.toString(),\n          path: item.path,\n          type: item.type,\n          context: item.context\n        });\n      }\n    }\n  };\n\n  var override = processErrors(errors);\n\n  if (override) {\n    return override;\n  }\n\n  var error = new Error(message);\n  error.isJoi = true;\n  error.name = 'ValidationError';\n  error.details = details;\n  error._object = object;\n  error.annotate = internals.annotate;\n  return error;\n}; // Inspired by json-stringify-safe\n\n\ninternals.safeStringify = function (obj, spaces) {\n  return JSON.stringify(obj, internals.serializer(), spaces);\n};\n\ninternals.serializer = function () {\n  var keys = [];\n  var stack = [];\n\n  var cycleReplacer = function cycleReplacer(key, value) {\n    if (stack[0] === value) {\n      return '[Circular ~]';\n    }\n\n    return '[Circular ~.' + keys.slice(0, stack.indexOf(value)).join('.') + ']';\n  };\n\n  return function (key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this);\n\n      if (~thisPos) {\n        stack.length = thisPos + 1;\n        keys.length = thisPos + 1;\n        keys[thisPos] = key;\n      } else {\n        stack.push(this);\n        keys.push(key);\n      }\n\n      if (~stack.indexOf(value)) {\n        value = cycleReplacer.call(this, key, value);\n      }\n    } else {\n      stack.push(value);\n    }\n\n    if (value) {\n      var annotations = value[internals.annotations];\n\n      if (annotations) {\n        if (Array.isArray(value)) {\n          var annotated = [];\n\n          for (var i = 0; i < value.length; ++i) {\n            if (annotations.errors[i]) {\n              annotated.push(\"_$idx$_\".concat(annotations.errors[i].sort().join(', '), \"_$end$_\"));\n            }\n\n            annotated.push(value[i]);\n          }\n\n          value = annotated;\n        } else {\n          var errorKeys = Object.keys(annotations.errors);\n\n          for (var _i = 0; _i < errorKeys.length; ++_i) {\n            var errorKey = errorKeys[_i];\n            value[\"\".concat(errorKey, \"_$key$_\").concat(annotations.errors[errorKey].sort().join(', '), \"_$end$_\")] = value[errorKey];\n            value[errorKey] = undefined;\n          }\n\n          var missingKeys = Object.keys(annotations.missing);\n\n          for (var _i2 = 0; _i2 < missingKeys.length; ++_i2) {\n            var missingKey = missingKeys[_i2];\n            value[\"_$miss$_\".concat(missingKey, \"|\").concat(annotations.missing[missingKey], \"_$end$_\")] = '__missing__';\n          }\n        }\n\n        return value;\n      }\n    }\n\n    if (value === Infinity || value === -Infinity || Number.isNaN(value) || typeof value === 'function' || typeof value === 'symbol') {\n      return '[' + value.toString() + ']';\n    }\n\n    return value;\n  };\n};\n\ninternals.annotate = function (stripColorCodes) {\n  var redFgEscape = stripColorCodes ? '' : \"\\x1B[31m\";\n  var redBgEscape = stripColorCodes ? '' : \"\\x1B[41m\";\n  var endColor = stripColorCodes ? '' : \"\\x1B[0m\";\n\n  if (typeof this._object !== 'object') {\n    return this.details[0].message;\n  }\n\n  var obj = Hoek.clone(this._object || {});\n\n  for (var i = this.details.length - 1; i >= 0; --i) {\n    // Reverse order to process deepest child first\n    var pos = i + 1;\n    var error = this.details[i];\n    var path = error.path;\n    var ref = obj;\n\n    for (var j = 0;; ++j) {\n      var seg = path[j];\n\n      if (ref.isImmutable) {\n        ref = ref.clone(); // joi schemas are not cloned by hoek, we have to take this extra step\n      }\n\n      if (j + 1 < path.length && ref[seg] && typeof ref[seg] !== 'string') {\n        ref = ref[seg];\n      } else {\n        var refAnnotations = ref[internals.annotations] = ref[internals.annotations] || {\n          errors: {},\n          missing: {}\n        };\n        var value = ref[seg];\n        var cacheKey = seg || error.context.label;\n\n        if (value !== undefined) {\n          refAnnotations.errors[cacheKey] = refAnnotations.errors[cacheKey] || [];\n          refAnnotations.errors[cacheKey].push(pos);\n        } else {\n          refAnnotations.missing[cacheKey] = pos;\n        }\n\n        break;\n      }\n    }\n  }\n\n  var replacers = {\n    key: /_\\$key\\$_([, \\d]+)_\\$end\\$_\"/g,\n    missing: /\"_\\$miss\\$_([^|]+)\\|(\\d+)_\\$end\\$_\": \"__missing__\"/g,\n    arrayIndex: /\\s*\"_\\$idx\\$_([, \\d]+)_\\$end\\$_\",?\\n(.*)/g,\n    specials: /\"\\[(NaN|Symbol.*|-?Infinity|function.*|\\(.*)]\"/g\n  };\n  var message = internals.safeStringify(obj, 2).replace(replacers.key, function ($0, $1) {\n    return \"\\\" \".concat(redFgEscape, \"[\").concat($1, \"]\").concat(endColor);\n  }).replace(replacers.missing, function ($0, $1, $2) {\n    return \"\".concat(redBgEscape, \"\\\"\").concat($1, \"\\\"\").concat(endColor).concat(redFgEscape, \" [\").concat($2, \"]: -- missing --\").concat(endColor);\n  }).replace(replacers.arrayIndex, function ($0, $1, $2) {\n    return \"\\n\".concat($2, \" \").concat(redFgEscape, \"[\").concat($1, \"]\").concat(endColor);\n  }).replace(replacers.specials, function ($0, $1) {\n    return $1;\n  });\n  message = \"\".concat(message, \"\\n\").concat(redFgEscape);\n\n  for (var _i3 = 0; _i3 < this.details.length; ++_i3) {\n    var _pos = _i3 + 1;\n\n    message = \"\".concat(message, \"\\n[\").concat(_pos, \"] \").concat(this.details[_i3].message);\n  }\n\n  message = message + endColor;\n  return message;\n};","map":{"version":3,"sources":["/home/agatha/open/node_modules/@hapi/joi/lib/errors.js"],"names":["Hoek","require","Language","internals","annotations","Symbol","stringify","value","wrapArrays","type","exports","Err","toString","Array","isArray","partial","i","length","JSON","context","state","options","flags","message","template","isJoi","key","path","label","localized","language","root","errors","format","reach","undefined","messages","childrenString","reason","slice","hasKey","test","skipKey","localizedKey","replace","$0","isSecure","name","normalized","escapeHtml","create","process","object","details","processErrors","localErrors","parent","overrideMessage","item","Error","error","selfError","itemMessage","override","push","_object","annotate","safeStringify","obj","spaces","serializer","keys","stack","cycleReplacer","indexOf","join","thisPos","call","annotated","sort","errorKeys","Object","errorKey","missingKeys","missing","missingKey","Infinity","Number","isNaN","stripColorCodes","redFgEscape","redBgEscape","endColor","clone","pos","ref","j","seg","isImmutable","refAnnotations","cacheKey","replacers","arrayIndex","specials","$1","$2"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Hoek = require('@hapi/hoek');\n\nconst Language = require('./language');\n\n\nconst internals = {\n    annotations: Symbol('joi-annotations')\n};\n\n\ninternals.stringify = function (value, wrapArrays) {\n\n    const type = typeof value;\n\n    if (value === null) {\n        return 'null';\n    }\n\n    if (type === 'string') {\n        return value;\n    }\n\n    if (value instanceof exports.Err || type === 'function' || type === 'symbol') {\n        return value.toString();\n    }\n\n    if (type === 'object') {\n        if (Array.isArray(value)) {\n            let partial = '';\n\n            for (let i = 0; i < value.length; ++i) {\n                partial = partial + (partial.length ? ', ' : '') + internals.stringify(value[i], wrapArrays);\n            }\n\n            return wrapArrays ? '[' + partial + ']' : partial;\n        }\n\n        return value.toString();\n    }\n\n    return JSON.stringify(value);\n};\n\n\nexports.Err = class {\n\n    constructor(type, context, state, options, flags, message, template) {\n\n        this.isJoi = true;\n        this.type = type;\n        this.context = context || {};\n        this.context.key = state.path[state.path.length - 1];\n        this.context.label = state.key;\n        this.path = state.path;\n        this.options = options;\n        this.flags = flags;\n        this.message = message;\n        this.template = template;\n\n        const localized = this.options.language;\n\n        if (this.flags.label) {\n            this.context.label = this.flags.label;\n        }\n        else if (localized &&                   // language can be null for arrays exclusion check\n            (this.context.label === '' ||\n            this.context.label === null)) {\n            this.context.label = localized.root || Language.errors.root;\n        }\n    }\n\n    toString() {\n\n        if (this.message) {\n            return this.message;\n        }\n\n        let format;\n\n        if (this.template) {\n            format = this.template;\n        }\n\n        const localized = this.options.language;\n\n        format = format || Hoek.reach(localized, this.type) || Hoek.reach(Language.errors, this.type);\n\n        if (format === undefined) {\n            return `Error code \"${this.type}\" is not defined, your custom type is missing the correct language definition`;\n        }\n\n        let wrapArrays = Hoek.reach(localized, 'messages.wrapArrays');\n        if (typeof wrapArrays !== 'boolean') {\n            wrapArrays = Language.errors.messages.wrapArrays;\n        }\n\n        if (format === null) {\n            const childrenString = internals.stringify(this.context.reason, wrapArrays);\n            if (wrapArrays) {\n                return childrenString.slice(1, -1);\n            }\n\n            return childrenString;\n        }\n\n        const hasKey = /{{!?label}}/.test(format);\n        const skipKey = format.length > 2 && format[0] === '!' && format[1] === '!';\n\n        if (skipKey) {\n            format = format.slice(2);\n        }\n\n        if (!hasKey && !skipKey) {\n            const localizedKey = Hoek.reach(localized, 'key');\n            if (typeof localizedKey === 'string') {\n                format = localizedKey + format;\n            }\n            else {\n                format = Hoek.reach(Language.errors, 'key') + format;\n            }\n        }\n\n        const message =  format.replace(/{{(!?)([^}]+)}}/g, ($0, isSecure, name) => {\n\n            const value = Hoek.reach(this.context, name);\n            const normalized = internals.stringify(value, wrapArrays);\n            return (isSecure && this.options.escapeHtml ? Hoek.escapeHtml(normalized) : normalized);\n        });\n\n        this.toString = () => message;  // Persist result of last toString call, it won't change\n\n        return message;\n    }\n\n};\n\n\nexports.create = function (type, context, state, options, flags, message, template) {\n\n    return new exports.Err(type, context, state, options, flags, message, template);\n};\n\n\nexports.process = function (errors, object) {\n\n    if (!errors) {\n        return null;\n    }\n\n    // Construct error\n\n    let message = '';\n    const details = [];\n\n    const processErrors = function (localErrors, parent, overrideMessage) {\n\n        for (let i = 0; i < localErrors.length; ++i) {\n            const item = localErrors[i];\n\n            if (item instanceof Error) {\n                return item;\n            }\n\n            if (item.flags.error && typeof item.flags.error !== 'function') {\n                if (!item.flags.selfError || !item.context.reason) {\n                    return item.flags.error;\n                }\n            }\n\n            let itemMessage;\n            if (parent === undefined) {\n                itemMessage = item.toString();\n                message = message + (message ? '. ' : '') + itemMessage;\n            }\n\n            // Do not push intermediate errors, we're only interested in leafs\n\n            if (item.context.reason) {\n                const override = processErrors(item.context.reason, item.path, item.type === 'override' ? item.message : null);\n                if (override) {\n                    return override;\n                }\n            }\n            else {\n                details.push({\n                    message: overrideMessage || itemMessage || item.toString(),\n                    path: item.path,\n                    type: item.type,\n                    context: item.context\n                });\n            }\n        }\n    };\n\n    const override = processErrors(errors);\n    if (override) {\n        return override;\n    }\n\n    const error = new Error(message);\n    error.isJoi = true;\n    error.name = 'ValidationError';\n    error.details = details;\n    error._object = object;\n    error.annotate = internals.annotate;\n    return error;\n};\n\n\n// Inspired by json-stringify-safe\n\ninternals.safeStringify = function (obj, spaces) {\n\n    return JSON.stringify(obj, internals.serializer(), spaces);\n};\n\n\ninternals.serializer = function () {\n\n    const keys = [];\n    const stack = [];\n\n    const cycleReplacer = (key, value) => {\n\n        if (stack[0] === value) {\n            return '[Circular ~]';\n        }\n\n        return '[Circular ~.' + keys.slice(0, stack.indexOf(value)).join('.') + ']';\n    };\n\n    return function (key, value) {\n\n        if (stack.length > 0) {\n            const thisPos = stack.indexOf(this);\n            if (~thisPos) {\n                stack.length = thisPos + 1;\n                keys.length = thisPos + 1;\n                keys[thisPos] = key;\n            }\n            else {\n                stack.push(this);\n                keys.push(key);\n            }\n\n            if (~stack.indexOf(value)) {\n                value = cycleReplacer.call(this, key, value);\n            }\n        }\n        else {\n            stack.push(value);\n        }\n\n        if (value) {\n            const annotations = value[internals.annotations];\n            if (annotations) {\n                if (Array.isArray(value)) {\n                    const annotated = [];\n\n                    for (let i = 0; i < value.length; ++i) {\n                        if (annotations.errors[i]) {\n                            annotated.push(`_$idx$_${annotations.errors[i].sort().join(', ')}_$end$_`);\n                        }\n\n                        annotated.push(value[i]);\n                    }\n\n                    value = annotated;\n                }\n                else {\n                    const errorKeys = Object.keys(annotations.errors);\n                    for (let i = 0; i < errorKeys.length; ++i) {\n                        const errorKey = errorKeys[i];\n                        value[`${errorKey}_$key$_${annotations.errors[errorKey].sort().join(', ')}_$end$_`] = value[errorKey];\n                        value[errorKey] = undefined;\n                    }\n\n                    const missingKeys = Object.keys(annotations.missing);\n                    for (let i = 0; i < missingKeys.length; ++i) {\n                        const missingKey = missingKeys[i];\n                        value[`_$miss$_${missingKey}|${annotations.missing[missingKey]}_$end$_`] = '__missing__';\n                    }\n                }\n\n                return value;\n            }\n        }\n\n        if (value === Infinity || value === -Infinity || Number.isNaN(value) ||\n            typeof value === 'function' || typeof value === 'symbol') {\n            return '[' + value.toString() + ']';\n        }\n\n        return value;\n    };\n};\n\n\ninternals.annotate = function (stripColorCodes) {\n\n    const redFgEscape = stripColorCodes ? '' : '\\u001b[31m';\n    const redBgEscape = stripColorCodes ? '' : '\\u001b[41m';\n    const endColor = stripColorCodes ? '' : '\\u001b[0m';\n\n    if (typeof this._object !== 'object') {\n        return this.details[0].message;\n    }\n\n    const obj = Hoek.clone(this._object || {});\n\n    for (let i = this.details.length - 1; i >= 0; --i) {        // Reverse order to process deepest child first\n        const pos = i + 1;\n        const error = this.details[i];\n        const path = error.path;\n        let ref = obj;\n        for (let j = 0; ; ++j) {\n            const seg = path[j];\n\n            if (ref.isImmutable) {\n                ref = ref.clone();                              // joi schemas are not cloned by hoek, we have to take this extra step\n            }\n\n            if (j + 1 < path.length &&\n                ref[seg] &&\n                typeof ref[seg] !== 'string') {\n\n                ref = ref[seg];\n            }\n            else {\n                const refAnnotations = ref[internals.annotations] = ref[internals.annotations] || { errors: {}, missing: {} };\n                const value = ref[seg];\n                const cacheKey = seg || error.context.label;\n\n                if (value !== undefined) {\n                    refAnnotations.errors[cacheKey] = refAnnotations.errors[cacheKey] || [];\n                    refAnnotations.errors[cacheKey].push(pos);\n                }\n                else {\n                    refAnnotations.missing[cacheKey] = pos;\n                }\n\n                break;\n            }\n        }\n    }\n\n    const replacers = {\n        key: /_\\$key\\$_([, \\d]+)_\\$end\\$_\"/g,\n        missing: /\"_\\$miss\\$_([^|]+)\\|(\\d+)_\\$end\\$_\": \"__missing__\"/g,\n        arrayIndex: /\\s*\"_\\$idx\\$_([, \\d]+)_\\$end\\$_\",?\\n(.*)/g,\n        specials: /\"\\[(NaN|Symbol.*|-?Infinity|function.*|\\(.*)]\"/g\n    };\n\n    let message = internals.safeStringify(obj, 2)\n        .replace(replacers.key, ($0, $1) => `\" ${redFgEscape}[${$1}]${endColor}`)\n        .replace(replacers.missing, ($0, $1, $2) => `${redBgEscape}\"${$1}\"${endColor}${redFgEscape} [${$2}]: -- missing --${endColor}`)\n        .replace(replacers.arrayIndex, ($0, $1, $2) => `\\n${$2} ${redFgEscape}[${$1}]${endColor}`)\n        .replace(replacers.specials, ($0, $1) => $1);\n\n    message = `${message}\\n${redFgEscape}`;\n\n    for (let i = 0; i < this.details.length; ++i) {\n        const pos = i + 1;\n        message = `${message}\\n[${pos}] ${this.details[i].message}`;\n    }\n\n    message = message + endColor;\n\n    return message;\n};\n"]},"metadata":{},"sourceType":"script"}