{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\nconst fse = require('fs-extra');\n\nconst path = require('path');\n\nconst errors = require('./errors');\n\nconst populateSWTemplate = require('./populate-sw-template');\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2.default)(function* ({\n    cacheId,\n    cleanupOutdatedCaches,\n    clientsClaim,\n    directoryIndex,\n    handleFetch,\n    ignoreURLParametersMatching,\n    importScripts,\n    manifestEntries,\n    modulePathPrefix,\n    navigateFallback,\n    navigateFallbackBlacklist,\n    navigateFallbackWhitelist,\n    navigationPreload,\n    offlineGoogleAnalytics,\n    runtimeCaching,\n    skipWaiting,\n    swDest,\n    workboxSWImport\n  }) {\n    try {\n      yield fse.mkdirp(path.dirname(swDest));\n    } catch (error) {\n      throw new Error(`${errors['unable-to-make-sw-directory']}. ` + `'${error.message}'`);\n    }\n\n    const populatedTemplate = populateSWTemplate({\n      cacheId,\n      cleanupOutdatedCaches,\n      clientsClaim,\n      directoryIndex,\n      handleFetch,\n      ignoreURLParametersMatching,\n      importScripts,\n      manifestEntries,\n      modulePathPrefix,\n      navigateFallback,\n      navigateFallbackBlacklist,\n      navigateFallbackWhitelist,\n      navigationPreload,\n      offlineGoogleAnalytics,\n      runtimeCaching,\n      skipWaiting,\n      workboxSWImport\n    });\n\n    try {\n      yield fse.writeFile(swDest, populatedTemplate);\n    } catch (error) {\n      if (error.code === 'EISDIR') {\n        // See https://github.com/GoogleChrome/workbox/issues/612\n        throw new Error(errors['sw-write-failure-directory']);\n      }\n\n      throw new Error(`${errors['sw-write-failure']}. '${error.message}'`);\n    }\n  });\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/agatha/open/node_modules/workbox-build/build/lib/write-sw-using-default-template.js"],"names":["_interopRequireDefault","require","_asyncToGenerator2","fse","path","errors","populateSWTemplate","module","exports","_ref","default","cacheId","cleanupOutdatedCaches","clientsClaim","directoryIndex","handleFetch","ignoreURLParametersMatching","importScripts","manifestEntries","modulePathPrefix","navigateFallback","navigateFallbackBlacklist","navigateFallbackWhitelist","navigationPreload","offlineGoogleAnalytics","runtimeCaching","skipWaiting","swDest","workboxSWImport","mkdirp","dirname","error","Error","message","populatedTemplate","writeFile","code","_x","apply","arguments"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,kBAAkB,GAAGF,sBAAsB,CAACC,OAAO,CAAC,yCAAD,CAAR,CAA/C;AAEA;;;;;;;;;AAOA,MAAME,GAAG,GAAGF,OAAO,CAAC,UAAD,CAAnB;;AAEA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAAtB;;AAEA,MAAMK,kBAAkB,GAAGL,OAAO,CAAC,wBAAD,CAAlC;;AAEAM,MAAM,CAACC,OAAP,GACA,aACA,YAAY;AACV,MAAIC,IAAI,GAAG,CAAC,GAAGP,kBAAkB,CAACQ,OAAvB,EAAgC,WAAW;AACpDC,IAAAA,OADoD;AAEpDC,IAAAA,qBAFoD;AAGpDC,IAAAA,YAHoD;AAIpDC,IAAAA,cAJoD;AAKpDC,IAAAA,WALoD;AAMpDC,IAAAA,2BANoD;AAOpDC,IAAAA,aAPoD;AAQpDC,IAAAA,eARoD;AASpDC,IAAAA,gBAToD;AAUpDC,IAAAA,gBAVoD;AAWpDC,IAAAA,yBAXoD;AAYpDC,IAAAA,yBAZoD;AAapDC,IAAAA,iBAboD;AAcpDC,IAAAA,sBAdoD;AAepDC,IAAAA,cAfoD;AAgBpDC,IAAAA,WAhBoD;AAiBpDC,IAAAA,MAjBoD;AAkBpDC,IAAAA;AAlBoD,GAAX,EAmBxC;AACD,QAAI;AACF,YAAMzB,GAAG,CAAC0B,MAAJ,CAAWzB,IAAI,CAAC0B,OAAL,CAAaH,MAAb,CAAX,CAAN;AACD,KAFD,CAEE,OAAOI,KAAP,EAAc;AACd,YAAM,IAAIC,KAAJ,CAAW,GAAE3B,MAAM,CAAC,6BAAD,CAAgC,IAAzC,GAAgD,IAAG0B,KAAK,CAACE,OAAQ,GAA3E,CAAN;AACD;;AAED,UAAMC,iBAAiB,GAAG5B,kBAAkB,CAAC;AAC3CK,MAAAA,OAD2C;AAE3CC,MAAAA,qBAF2C;AAG3CC,MAAAA,YAH2C;AAI3CC,MAAAA,cAJ2C;AAK3CC,MAAAA,WAL2C;AAM3CC,MAAAA,2BAN2C;AAO3CC,MAAAA,aAP2C;AAQ3CC,MAAAA,eAR2C;AAS3CC,MAAAA,gBAT2C;AAU3CC,MAAAA,gBAV2C;AAW3CC,MAAAA,yBAX2C;AAY3CC,MAAAA,yBAZ2C;AAa3CC,MAAAA,iBAb2C;AAc3CC,MAAAA,sBAd2C;AAe3CC,MAAAA,cAf2C;AAgB3CC,MAAAA,WAhB2C;AAiB3CE,MAAAA;AAjB2C,KAAD,CAA5C;;AAoBA,QAAI;AACF,YAAMzB,GAAG,CAACgC,SAAJ,CAAcR,MAAd,EAAsBO,iBAAtB,CAAN;AACD,KAFD,CAEE,OAAOH,KAAP,EAAc;AACd,UAAIA,KAAK,CAACK,IAAN,KAAe,QAAnB,EAA6B;AAC3B;AACA,cAAM,IAAIJ,KAAJ,CAAU3B,MAAM,CAAC,4BAAD,CAAhB,CAAN;AACD;;AAED,YAAM,IAAI2B,KAAJ,CAAW,GAAE3B,MAAM,CAAC,kBAAD,CAAqB,MAAK0B,KAAK,CAACE,OAAQ,GAA3D,CAAN;AACD;AACF,GAxDU,CAAX;;AA0DA,SAAO,UAAUI,EAAV,EAAc;AACnB,WAAO5B,IAAI,CAAC6B,KAAL,CAAW,IAAX,EAAiBC,SAAjB,CAAP;AACD,GAFD;AAGD,CA9DD,EAFA","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nconst fse = require('fs-extra');\n\nconst path = require('path');\n\nconst errors = require('./errors');\n\nconst populateSWTemplate = require('./populate-sw-template');\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2.default)(function* ({\n    cacheId,\n    cleanupOutdatedCaches,\n    clientsClaim,\n    directoryIndex,\n    handleFetch,\n    ignoreURLParametersMatching,\n    importScripts,\n    manifestEntries,\n    modulePathPrefix,\n    navigateFallback,\n    navigateFallbackBlacklist,\n    navigateFallbackWhitelist,\n    navigationPreload,\n    offlineGoogleAnalytics,\n    runtimeCaching,\n    skipWaiting,\n    swDest,\n    workboxSWImport\n  }) {\n    try {\n      yield fse.mkdirp(path.dirname(swDest));\n    } catch (error) {\n      throw new Error(`${errors['unable-to-make-sw-directory']}. ` + `'${error.message}'`);\n    }\n\n    const populatedTemplate = populateSWTemplate({\n      cacheId,\n      cleanupOutdatedCaches,\n      clientsClaim,\n      directoryIndex,\n      handleFetch,\n      ignoreURLParametersMatching,\n      importScripts,\n      manifestEntries,\n      modulePathPrefix,\n      navigateFallback,\n      navigateFallbackBlacklist,\n      navigateFallbackWhitelist,\n      navigationPreload,\n      offlineGoogleAnalytics,\n      runtimeCaching,\n      skipWaiting,\n      workboxSWImport\n    });\n\n    try {\n      yield fse.writeFile(swDest, populatedTemplate);\n    } catch (error) {\n      if (error.code === 'EISDIR') {\n        // See https://github.com/GoogleChrome/workbox/issues/612\n        throw new Error(errors['sw-write-failure-directory']);\n      }\n\n      throw new Error(`${errors['sw-write-failure']}. '${error.message}'`);\n    }\n  });\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();"]},"metadata":{},"sourceType":"script"}