{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\n\nconst BUF_LENGTH = 64 * 1024;\n\nconst _buff = require('../util/buffer')(BUF_LENGTH);\n\nfunction copyFileSync(srcFile, destFile, options) {\n  const overwrite = options.overwrite;\n  const errorOnExist = options.errorOnExist;\n  const preserveTimestamps = options.preserveTimestamps;\n\n  if (fs.existsSync(destFile)) {\n    if (overwrite) {\n      fs.unlinkSync(destFile);\n    } else if (errorOnExist) {\n      throw new Error(`${destFile} already exists`);\n    } else return;\n  }\n\n  const fdr = fs.openSync(srcFile, 'r');\n  const stat = fs.fstatSync(fdr);\n  const fdw = fs.openSync(destFile, 'w', stat.mode);\n  let bytesRead = 1;\n  let pos = 0;\n\n  while (bytesRead > 0) {\n    bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos);\n    fs.writeSync(fdw, _buff, 0, bytesRead);\n    pos += bytesRead;\n  }\n\n  if (preserveTimestamps) {\n    fs.futimesSync(fdw, stat.atime, stat.mtime);\n  }\n\n  fs.closeSync(fdr);\n  fs.closeSync(fdw);\n}\n\nmodule.exports = copyFileSync;","map":{"version":3,"sources":["/home/agatha/open/node_modules/workbox-build/node_modules/fs-extra/lib/copy-sync/copy-file-sync.js"],"names":["fs","require","BUF_LENGTH","_buff","copyFileSync","srcFile","destFile","options","overwrite","errorOnExist","preserveTimestamps","existsSync","unlinkSync","Error","fdr","openSync","stat","fstatSync","fdw","mode","bytesRead","pos","readSync","writeSync","futimesSync","atime","mtime","closeSync","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAlB;;AAEA,MAAMC,UAAU,GAAG,KAAK,IAAxB;;AACA,MAAMC,KAAK,GAAGF,OAAO,CAAC,gBAAD,CAAP,CAA0BC,UAA1B,CAAd;;AAEA,SAASE,YAAT,CAAuBC,OAAvB,EAAgCC,QAAhC,EAA0CC,OAA1C,EAAmD;AACjD,QAAMC,SAAS,GAAGD,OAAO,CAACC,SAA1B;AACA,QAAMC,YAAY,GAAGF,OAAO,CAACE,YAA7B;AACA,QAAMC,kBAAkB,GAAGH,OAAO,CAACG,kBAAnC;;AAEA,MAAIV,EAAE,CAACW,UAAH,CAAcL,QAAd,CAAJ,EAA6B;AAC3B,QAAIE,SAAJ,EAAe;AACbR,MAAAA,EAAE,CAACY,UAAH,CAAcN,QAAd;AACD,KAFD,MAEO,IAAIG,YAAJ,EAAkB;AACvB,YAAM,IAAII,KAAJ,CAAW,GAAEP,QAAS,iBAAtB,CAAN;AACD,KAFM,MAEA;AACR;;AAED,QAAMQ,GAAG,GAAGd,EAAE,CAACe,QAAH,CAAYV,OAAZ,EAAqB,GAArB,CAAZ;AACA,QAAMW,IAAI,GAAGhB,EAAE,CAACiB,SAAH,CAAaH,GAAb,CAAb;AACA,QAAMI,GAAG,GAAGlB,EAAE,CAACe,QAAH,CAAYT,QAAZ,EAAsB,GAAtB,EAA2BU,IAAI,CAACG,IAAhC,CAAZ;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,GAAG,GAAG,CAAV;;AAEA,SAAOD,SAAS,GAAG,CAAnB,EAAsB;AACpBA,IAAAA,SAAS,GAAGpB,EAAE,CAACsB,QAAH,CAAYR,GAAZ,EAAiBX,KAAjB,EAAwB,CAAxB,EAA2BD,UAA3B,EAAuCmB,GAAvC,CAAZ;AACArB,IAAAA,EAAE,CAACuB,SAAH,CAAaL,GAAb,EAAkBf,KAAlB,EAAyB,CAAzB,EAA4BiB,SAA5B;AACAC,IAAAA,GAAG,IAAID,SAAP;AACD;;AAED,MAAIV,kBAAJ,EAAwB;AACtBV,IAAAA,EAAE,CAACwB,WAAH,CAAeN,GAAf,EAAoBF,IAAI,CAACS,KAAzB,EAAgCT,IAAI,CAACU,KAArC;AACD;;AAED1B,EAAAA,EAAE,CAAC2B,SAAH,CAAab,GAAb;AACAd,EAAAA,EAAE,CAAC2B,SAAH,CAAaT,GAAb;AACD;;AAEDU,MAAM,CAACC,OAAP,GAAiBzB,YAAjB","sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\n\nconst BUF_LENGTH = 64 * 1024\nconst _buff = require('../util/buffer')(BUF_LENGTH)\n\nfunction copyFileSync (srcFile, destFile, options) {\n  const overwrite = options.overwrite\n  const errorOnExist = options.errorOnExist\n  const preserveTimestamps = options.preserveTimestamps\n\n  if (fs.existsSync(destFile)) {\n    if (overwrite) {\n      fs.unlinkSync(destFile)\n    } else if (errorOnExist) {\n      throw new Error(`${destFile} already exists`)\n    } else return\n  }\n\n  const fdr = fs.openSync(srcFile, 'r')\n  const stat = fs.fstatSync(fdr)\n  const fdw = fs.openSync(destFile, 'w', stat.mode)\n  let bytesRead = 1\n  let pos = 0\n\n  while (bytesRead > 0) {\n    bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos)\n    fs.writeSync(fdw, _buff, 0, bytesRead)\n    pos += bytesRead\n  }\n\n  if (preserveTimestamps) {\n    fs.futimesSync(fdw, stat.atime, stat.mtime)\n  }\n\n  fs.closeSync(fdr)\n  fs.closeSync(fdw)\n}\n\nmodule.exports = copyFileSync\n"]},"metadata":{},"sourceType":"script"}