{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _corejs2BuiltIns = _interopRequireDefault(require(\"@babel/compat-data/corejs2-built-ins\"));\n\nvar _helperCompilationTargets = require(\"@babel/helper-compilation-targets\");\n\nvar _getPlatformSpecificDefault = _interopRequireDefault(require(\"./get-platform-specific-default\"));\n\nvar _builtInDefinitions = require(\"./built-in-definitions\");\n\nvar _utils = require(\"../../utils\");\n\nvar _debug = require(\"../../debug\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst NO_DIRECT_POLYFILL_IMPORT = `\n  When setting \\`useBuiltIns: 'usage'\\`, polyfills are automatically imported when needed.\n  Please remove the \\`import '@babel/polyfill'\\` call or use \\`useBuiltIns: 'entry'\\` instead.`;\n\nfunction _default({\n  types: t\n}, {\n  include,\n  exclude,\n  polyfillTargets,\n  debug\n}) {\n  const polyfills = (0, _helperCompilationTargets.filterItems)(_corejs2BuiltIns.default, include, exclude, polyfillTargets, (0, _getPlatformSpecificDefault.default)(polyfillTargets));\n  const addAndRemovePolyfillImports = {\n    ImportDeclaration(path) {\n      if ((0, _utils.isPolyfillSource)((0, _utils.getImportSource)(path))) {\n        console.warn(NO_DIRECT_POLYFILL_IMPORT);\n        path.remove();\n      }\n    },\n\n    Program(path) {\n      path.get(\"body\").forEach(bodyPath => {\n        if ((0, _utils.isPolyfillSource)((0, _utils.getRequireSource)(bodyPath))) {\n          console.warn(NO_DIRECT_POLYFILL_IMPORT);\n          bodyPath.remove();\n        }\n      });\n    },\n\n    ReferencedIdentifier({\n      node: {\n        name\n      },\n      parent,\n      scope\n    }) {\n      if (t.isMemberExpression(parent)) return;\n      if (!(0, _utils.has)(_builtInDefinitions.BuiltIns, name)) return;\n      if (scope.getBindingIdentifier(name)) return;\n      const BuiltInDependencies = _builtInDefinitions.BuiltIns[name];\n      this.addUnsupported(BuiltInDependencies);\n    },\n\n    CallExpression(path) {\n      if (path.node.arguments.length) return;\n      const callee = path.node.callee;\n      if (!t.isMemberExpression(callee)) return;\n      if (!callee.computed) return;\n\n      if (!path.get(\"callee.property\").matchesPattern(\"Symbol.iterator\")) {\n        return;\n      }\n\n      this.addImport(\"web.dom.iterable\");\n    },\n\n    BinaryExpression(path) {\n      if (path.node.operator !== \"in\") return;\n      if (!path.get(\"left\").matchesPattern(\"Symbol.iterator\")) return;\n      this.addImport(\"web.dom.iterable\");\n    },\n\n    YieldExpression(path) {\n      if (path.node.delegate) {\n        this.addImport(\"web.dom.iterable\");\n      }\n    },\n\n    MemberExpression: {\n      enter(path) {\n        const {\n          node\n        } = path;\n        const {\n          object,\n          property\n        } = node;\n        if ((0, _utils.isNamespaced)(path.get(\"object\"))) return;\n        let evaluatedPropType = object.name;\n        let propertyName = \"\";\n        let instanceType = \"\";\n\n        if (node.computed) {\n          if (t.isStringLiteral(property)) {\n            propertyName = property.value;\n          } else {\n            const result = path.get(\"property\").evaluate();\n\n            if (result.confident && result.value) {\n              propertyName = result.value;\n            }\n          }\n        } else {\n          propertyName = property.name;\n        }\n\n        if (path.scope.getBindingIdentifier(object.name)) {\n          const result = path.get(\"object\").evaluate();\n\n          if (result.value) {\n            instanceType = (0, _utils.getType)(result.value);\n          } else if (result.deopt && result.deopt.isIdentifier()) {\n            evaluatedPropType = result.deopt.node.name;\n          }\n        }\n\n        if ((0, _utils.has)(_builtInDefinitions.StaticProperties, evaluatedPropType)) {\n          const BuiltInProperties = _builtInDefinitions.StaticProperties[evaluatedPropType];\n\n          if ((0, _utils.has)(BuiltInProperties, propertyName)) {\n            const StaticPropertyDependencies = BuiltInProperties[propertyName];\n            this.addUnsupported(StaticPropertyDependencies);\n          }\n        }\n\n        if ((0, _utils.has)(_builtInDefinitions.InstanceProperties, propertyName)) {\n          let InstancePropertyDependencies = _builtInDefinitions.InstanceProperties[propertyName];\n\n          if (instanceType) {\n            InstancePropertyDependencies = InstancePropertyDependencies.filter(module => module.includes(instanceType));\n          }\n\n          this.addUnsupported(InstancePropertyDependencies);\n        }\n      },\n\n      exit(path) {\n        const {\n          name\n        } = path.node.object;\n        if (!(0, _utils.has)(_builtInDefinitions.BuiltIns, name)) return;\n        if (path.scope.getBindingIdentifier(name)) return;\n        const BuiltInDependencies = _builtInDefinitions.BuiltIns[name];\n        this.addUnsupported(BuiltInDependencies);\n      }\n\n    },\n\n    VariableDeclarator(path) {\n      const {\n        node\n      } = path;\n      const {\n        id,\n        init\n      } = node;\n      if (!t.isObjectPattern(id)) return;\n      if (init && path.scope.getBindingIdentifier(init.name)) return;\n\n      for (const {\n        key\n      } of id.properties) {\n        if (!node.computed && t.isIdentifier(key) && (0, _utils.has)(_builtInDefinitions.InstanceProperties, key.name)) {\n          const InstancePropertyDependencies = _builtInDefinitions.InstanceProperties[key.name];\n          this.addUnsupported(InstancePropertyDependencies);\n        }\n      }\n    }\n\n  };\n  return {\n    name: \"corejs2-usage\",\n\n    pre({\n      path\n    }) {\n      this.polyfillsSet = new Set();\n\n      this.addImport = function (builtIn) {\n        if (!this.polyfillsSet.has(builtIn)) {\n          this.polyfillsSet.add(builtIn);\n          (0, _utils.createImport)(path, builtIn);\n        }\n      };\n\n      this.addUnsupported = function (builtIn) {\n        const modules = Array.isArray(builtIn) ? builtIn : [builtIn];\n\n        for (const module of modules) {\n          if (polyfills.has(module)) {\n            this.addImport(module);\n          }\n        }\n      };\n    },\n\n    post() {\n      if (debug) {\n        (0, _debug.logUsagePolyfills)(this.polyfillsSet, this.file.opts.filename, polyfillTargets, _corejs2BuiltIns.default);\n      }\n    },\n\n    visitor: addAndRemovePolyfillImports\n  };\n}","map":{"version":3,"sources":["/home/agatha/open/node_modules/@babel/preset-env/lib/polyfills/corejs2/usage-plugin.js"],"names":["Object","defineProperty","exports","value","default","_default","_corejs2BuiltIns","_interopRequireDefault","require","_helperCompilationTargets","_getPlatformSpecificDefault","_builtInDefinitions","_utils","_debug","obj","__esModule","NO_DIRECT_POLYFILL_IMPORT","types","t","include","exclude","polyfillTargets","debug","polyfills","filterItems","addAndRemovePolyfillImports","ImportDeclaration","path","isPolyfillSource","getImportSource","console","warn","remove","Program","get","forEach","bodyPath","getRequireSource","ReferencedIdentifier","node","name","parent","scope","isMemberExpression","has","BuiltIns","getBindingIdentifier","BuiltInDependencies","addUnsupported","CallExpression","arguments","length","callee","computed","matchesPattern","addImport","BinaryExpression","operator","YieldExpression","delegate","MemberExpression","enter","object","property","isNamespaced","evaluatedPropType","propertyName","instanceType","isStringLiteral","result","evaluate","confident","getType","deopt","isIdentifier","StaticProperties","BuiltInProperties","StaticPropertyDependencies","InstanceProperties","InstancePropertyDependencies","filter","module","includes","exit","VariableDeclarator","id","init","isObjectPattern","key","properties","pre","polyfillsSet","Set","builtIn","add","createImport","modules","Array","isArray","post","logUsagePolyfills","file","opts","filename","visitor"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _corejs2BuiltIns = _interopRequireDefault(require(\"@babel/compat-data/corejs2-built-ins\"));\n\nvar _helperCompilationTargets = require(\"@babel/helper-compilation-targets\");\n\nvar _getPlatformSpecificDefault = _interopRequireDefault(require(\"./get-platform-specific-default\"));\n\nvar _builtInDefinitions = require(\"./built-in-definitions\");\n\nvar _utils = require(\"../../utils\");\n\nvar _debug = require(\"../../debug\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst NO_DIRECT_POLYFILL_IMPORT = `\n  When setting \\`useBuiltIns: 'usage'\\`, polyfills are automatically imported when needed.\n  Please remove the \\`import '@babel/polyfill'\\` call or use \\`useBuiltIns: 'entry'\\` instead.`;\n\nfunction _default({\n  types: t\n}, {\n  include,\n  exclude,\n  polyfillTargets,\n  debug\n}) {\n  const polyfills = (0, _helperCompilationTargets.filterItems)(_corejs2BuiltIns.default, include, exclude, polyfillTargets, (0, _getPlatformSpecificDefault.default)(polyfillTargets));\n  const addAndRemovePolyfillImports = {\n    ImportDeclaration(path) {\n      if ((0, _utils.isPolyfillSource)((0, _utils.getImportSource)(path))) {\n        console.warn(NO_DIRECT_POLYFILL_IMPORT);\n        path.remove();\n      }\n    },\n\n    Program(path) {\n      path.get(\"body\").forEach(bodyPath => {\n        if ((0, _utils.isPolyfillSource)((0, _utils.getRequireSource)(bodyPath))) {\n          console.warn(NO_DIRECT_POLYFILL_IMPORT);\n          bodyPath.remove();\n        }\n      });\n    },\n\n    ReferencedIdentifier({\n      node: {\n        name\n      },\n      parent,\n      scope\n    }) {\n      if (t.isMemberExpression(parent)) return;\n      if (!(0, _utils.has)(_builtInDefinitions.BuiltIns, name)) return;\n      if (scope.getBindingIdentifier(name)) return;\n      const BuiltInDependencies = _builtInDefinitions.BuiltIns[name];\n      this.addUnsupported(BuiltInDependencies);\n    },\n\n    CallExpression(path) {\n      if (path.node.arguments.length) return;\n      const callee = path.node.callee;\n      if (!t.isMemberExpression(callee)) return;\n      if (!callee.computed) return;\n\n      if (!path.get(\"callee.property\").matchesPattern(\"Symbol.iterator\")) {\n        return;\n      }\n\n      this.addImport(\"web.dom.iterable\");\n    },\n\n    BinaryExpression(path) {\n      if (path.node.operator !== \"in\") return;\n      if (!path.get(\"left\").matchesPattern(\"Symbol.iterator\")) return;\n      this.addImport(\"web.dom.iterable\");\n    },\n\n    YieldExpression(path) {\n      if (path.node.delegate) {\n        this.addImport(\"web.dom.iterable\");\n      }\n    },\n\n    MemberExpression: {\n      enter(path) {\n        const {\n          node\n        } = path;\n        const {\n          object,\n          property\n        } = node;\n        if ((0, _utils.isNamespaced)(path.get(\"object\"))) return;\n        let evaluatedPropType = object.name;\n        let propertyName = \"\";\n        let instanceType = \"\";\n\n        if (node.computed) {\n          if (t.isStringLiteral(property)) {\n            propertyName = property.value;\n          } else {\n            const result = path.get(\"property\").evaluate();\n\n            if (result.confident && result.value) {\n              propertyName = result.value;\n            }\n          }\n        } else {\n          propertyName = property.name;\n        }\n\n        if (path.scope.getBindingIdentifier(object.name)) {\n          const result = path.get(\"object\").evaluate();\n\n          if (result.value) {\n            instanceType = (0, _utils.getType)(result.value);\n          } else if (result.deopt && result.deopt.isIdentifier()) {\n            evaluatedPropType = result.deopt.node.name;\n          }\n        }\n\n        if ((0, _utils.has)(_builtInDefinitions.StaticProperties, evaluatedPropType)) {\n          const BuiltInProperties = _builtInDefinitions.StaticProperties[evaluatedPropType];\n\n          if ((0, _utils.has)(BuiltInProperties, propertyName)) {\n            const StaticPropertyDependencies = BuiltInProperties[propertyName];\n            this.addUnsupported(StaticPropertyDependencies);\n          }\n        }\n\n        if ((0, _utils.has)(_builtInDefinitions.InstanceProperties, propertyName)) {\n          let InstancePropertyDependencies = _builtInDefinitions.InstanceProperties[propertyName];\n\n          if (instanceType) {\n            InstancePropertyDependencies = InstancePropertyDependencies.filter(module => module.includes(instanceType));\n          }\n\n          this.addUnsupported(InstancePropertyDependencies);\n        }\n      },\n\n      exit(path) {\n        const {\n          name\n        } = path.node.object;\n        if (!(0, _utils.has)(_builtInDefinitions.BuiltIns, name)) return;\n        if (path.scope.getBindingIdentifier(name)) return;\n        const BuiltInDependencies = _builtInDefinitions.BuiltIns[name];\n        this.addUnsupported(BuiltInDependencies);\n      }\n\n    },\n\n    VariableDeclarator(path) {\n      const {\n        node\n      } = path;\n      const {\n        id,\n        init\n      } = node;\n      if (!t.isObjectPattern(id)) return;\n      if (init && path.scope.getBindingIdentifier(init.name)) return;\n\n      for (const {\n        key\n      } of id.properties) {\n        if (!node.computed && t.isIdentifier(key) && (0, _utils.has)(_builtInDefinitions.InstanceProperties, key.name)) {\n          const InstancePropertyDependencies = _builtInDefinitions.InstanceProperties[key.name];\n          this.addUnsupported(InstancePropertyDependencies);\n        }\n      }\n    }\n\n  };\n  return {\n    name: \"corejs2-usage\",\n\n    pre({\n      path\n    }) {\n      this.polyfillsSet = new Set();\n\n      this.addImport = function (builtIn) {\n        if (!this.polyfillsSet.has(builtIn)) {\n          this.polyfillsSet.add(builtIn);\n          (0, _utils.createImport)(path, builtIn);\n        }\n      };\n\n      this.addUnsupported = function (builtIn) {\n        const modules = Array.isArray(builtIn) ? builtIn : [builtIn];\n\n        for (const module of modules) {\n          if (polyfills.has(module)) {\n            this.addImport(module);\n          }\n        }\n      };\n    },\n\n    post() {\n      if (debug) {\n        (0, _debug.logUsagePolyfills)(this.polyfillsSet, this.file.opts.filename, polyfillTargets, _corejs2BuiltIns.default);\n      }\n    },\n\n    visitor: addAndRemovePolyfillImports\n  };\n}"]},"metadata":{},"sourceType":"script"}