{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.semverMin = semverMin;\nexports.semverify = semverify;\nexports.isUnreleasedVersion = isUnreleasedVersion;\nexports.getLowestUnreleased = getLowestUnreleased;\nexports.getLowestImplementedVersion = getLowestImplementedVersion;\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _semver = _interopRequireDefault(require(\"semver\"));\n\nvar _targets = require(\"./targets\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst versionRegExp = /^(\\d+|\\d+.\\d+)$/;\n\nfunction semverMin(first, second) {\n  return first && _semver.default.lt(first, second) ? first : second;\n}\n\nfunction semverify(version) {\n  if (typeof version === \"string\" && _semver.default.valid(version)) {\n    return version;\n  }\n\n  (0, _invariant.default)(typeof version === \"number\" || typeof version === \"string\" && versionRegExp.test(version), `'${version}' is not a valid version`);\n  const split = version.toString().split(\".\");\n\n  while (split.length < 3) {\n    split.push(\"0\");\n  }\n\n  return split.join(\".\");\n}\n\nfunction isUnreleasedVersion(version, env) {\n  const unreleasedLabel = _targets.unreleasedLabels[env];\n  return !!unreleasedLabel && unreleasedLabel === version.toString().toLowerCase();\n}\n\nfunction getLowestUnreleased(a, b, env) {\n  const unreleasedLabel = _targets.unreleasedLabels[env];\n  const hasUnreleased = [a, b].some(item => item === unreleasedLabel);\n\n  if (hasUnreleased) {\n    return a === hasUnreleased ? b : a || b;\n  }\n\n  return semverMin(a, b);\n}\n\nfunction getLowestImplementedVersion(plugin, environment) {\n  const result = plugin[environment];\n\n  if (!result && environment === \"android\") {\n    return plugin.chrome;\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/home/agatha/open/node_modules/@babel/helper-compilation-targets/lib/utils.js"],"names":["Object","defineProperty","exports","value","semverMin","semverify","isUnreleasedVersion","getLowestUnreleased","getLowestImplementedVersion","_invariant","_interopRequireDefault","require","_semver","_targets","obj","__esModule","default","versionRegExp","first","second","lt","version","valid","test","split","toString","length","push","join","env","unreleasedLabel","unreleasedLabels","toLowerCase","a","b","hasUnreleased","some","item","plugin","environment","result","chrome"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.semverMin = semverMin;\nexports.semverify = semverify;\nexports.isUnreleasedVersion = isUnreleasedVersion;\nexports.getLowestUnreleased = getLowestUnreleased;\nexports.getLowestImplementedVersion = getLowestImplementedVersion;\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _semver = _interopRequireDefault(require(\"semver\"));\n\nvar _targets = require(\"./targets\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst versionRegExp = /^(\\d+|\\d+.\\d+)$/;\n\nfunction semverMin(first, second) {\n  return first && _semver.default.lt(first, second) ? first : second;\n}\n\nfunction semverify(version) {\n  if (typeof version === \"string\" && _semver.default.valid(version)) {\n    return version;\n  }\n\n  (0, _invariant.default)(typeof version === \"number\" || typeof version === \"string\" && versionRegExp.test(version), `'${version}' is not a valid version`);\n  const split = version.toString().split(\".\");\n\n  while (split.length < 3) {\n    split.push(\"0\");\n  }\n\n  return split.join(\".\");\n}\n\nfunction isUnreleasedVersion(version, env) {\n  const unreleasedLabel = _targets.unreleasedLabels[env];\n  return !!unreleasedLabel && unreleasedLabel === version.toString().toLowerCase();\n}\n\nfunction getLowestUnreleased(a, b, env) {\n  const unreleasedLabel = _targets.unreleasedLabels[env];\n  const hasUnreleased = [a, b].some(item => item === unreleasedLabel);\n\n  if (hasUnreleased) {\n    return a === hasUnreleased ? b : a || b;\n  }\n\n  return semverMin(a, b);\n}\n\nfunction getLowestImplementedVersion(plugin, environment) {\n  const result = plugin[environment];\n\n  if (!result && environment === \"android\") {\n    return plugin.chrome;\n  }\n\n  return result;\n}"]},"metadata":{},"sourceType":"script"}