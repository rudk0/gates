{"ast":null,"code":"var splitStringTransformer = function splitStringTransformer(splitBy) {\n  return {\n    onSubstitution: function onSubstitution(substitution, resultSoFar) {\n      if (splitBy != null && typeof splitBy === 'string') {\n        if (typeof substitution === 'string' && substitution.includes(splitBy)) {\n          substitution = substitution.split(splitBy);\n        }\n      } else {\n        throw new Error('You need to specify a string character to split by.');\n      }\n\n      return substitution;\n    }\n  };\n};\n\nexport default splitStringTransformer;","map":{"version":3,"sources":["../../src/splitStringTransformer/splitStringTransformer.js"],"names":["splitStringTransformer","onSubstitution","splitBy","substitution"],"mappings":"AAAA,IAAMA,sBAAAA,GAAyB,SAAzBA,sBAAyB,CAAA,OAAA,EAAA;AAAA,SAAY;AACzCC,IAAAA,cADyC,EAAA,SAAA,cAAA,CAAA,YAAA,EAAA,WAAA,EACC;AACxC,UAAIC,OAAAA,IAAAA,IAAAA,IAAmB,OAAA,OAAA,KAAvB,QAAA,EAAoD;AAClD,YAAI,OAAA,YAAA,KAAA,QAAA,IAAoCC,YAAAA,CAAAA,QAAAA,CAAxC,OAAwCA,CAAxC,EAAwE;AACtEA,UAAAA,YAAAA,GAAeA,YAAAA,CAAAA,KAAAA,CAAfA,OAAeA,CAAfA;AACD;AAHH,OAAA,MAIO;AACL,cAAM,IAAA,KAAA,CAAN,qDAAM,CAAN;AACD;;AACD,aAAA,YAAA;AACD;AAVwC,GAAZ;AAA/B,CAAA;;AAaA,eAAA,sBAAA","sourcesContent":["const splitStringTransformer = splitBy => ({\n  onSubstitution(substitution, resultSoFar) {\n    if (splitBy != null && typeof splitBy === 'string') {\n      if (typeof substitution === 'string' && substitution.includes(splitBy)) {\n        substitution = substitution.split(splitBy);\n      }\n    } else {\n      throw new Error('You need to specify a string character to split by.');\n    }\n    return substitution;\n  },\n});\n\nexport default splitStringTransformer;\n"]},"metadata":{},"sourceType":"module"}