{"ast":null,"code":"\"use strict\";\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nconst errors = require('./errors');\n\nmodule.exports = additionalManifestEntries => {\n  return manifest => {\n    const warnings = [];\n    const stringEntries = new Set();\n\n    for (const additionalEntry of additionalManifestEntries) {\n      // Warn about either a string or an object that lacks a precache property.\n      // (An object with a revision property set to null is okay.)\n      if (typeof additionalEntry === 'string') {\n        stringEntries.add(additionalEntry);\n      } else if (additionalEntry && additionalEntry.revision === undefined) {\n        stringEntries.add(additionalEntry.url);\n      }\n\n      manifest.push(additionalEntry);\n    }\n\n    if (stringEntries.size > 0) {\n      let urls = '\\n';\n\n      for (const stringEntry of stringEntries) {\n        urls += `  - ${stringEntry}\\n`;\n      }\n\n      warnings.push(errors['string-entry-warning'] + urls);\n    }\n\n    return {\n      manifest,\n      warnings\n    };\n  };\n};","map":{"version":3,"sources":["/home/agatha/open/node_modules/workbox-build/build/lib/additional-manifest-entries-transform.js"],"names":["errors","require","module","exports","additionalManifestEntries","manifest","warnings","stringEntries","Set","additionalEntry","add","revision","undefined","url","push","size","urls","stringEntry"],"mappings":"AAAA;AAEA;;;;;;;;AAOA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,yBAAyB,IAAI;AAC5C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,QAAQ,GAAG,EAAjB;AACA,UAAMC,aAAa,GAAG,IAAIC,GAAJ,EAAtB;;AAEA,SAAK,MAAMC,eAAX,IAA8BL,yBAA9B,EAAyD;AACvD;AACA;AACA,UAAI,OAAOK,eAAP,KAA2B,QAA/B,EAAyC;AACvCF,QAAAA,aAAa,CAACG,GAAd,CAAkBD,eAAlB;AACD,OAFD,MAEO,IAAIA,eAAe,IAAIA,eAAe,CAACE,QAAhB,KAA6BC,SAApD,EAA+D;AACpEL,QAAAA,aAAa,CAACG,GAAd,CAAkBD,eAAe,CAACI,GAAlC;AACD;;AAEDR,MAAAA,QAAQ,CAACS,IAAT,CAAcL,eAAd;AACD;;AAED,QAAIF,aAAa,CAACQ,IAAd,GAAqB,CAAzB,EAA4B;AAC1B,UAAIC,IAAI,GAAG,IAAX;;AAEA,WAAK,MAAMC,WAAX,IAA0BV,aAA1B,EAAyC;AACvCS,QAAAA,IAAI,IAAK,OAAMC,WAAY,IAA3B;AACD;;AAEDX,MAAAA,QAAQ,CAACQ,IAAT,CAAcd,MAAM,CAAC,sBAAD,CAAN,GAAiCgB,IAA/C;AACD;;AAED,WAAO;AACLX,MAAAA,QADK;AAELC,MAAAA;AAFK,KAAP;AAID,GA9BD;AA+BD,CAhCD","sourcesContent":["\"use strict\";\n\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nconst errors = require('./errors');\n\nmodule.exports = additionalManifestEntries => {\n  return manifest => {\n    const warnings = [];\n    const stringEntries = new Set();\n\n    for (const additionalEntry of additionalManifestEntries) {\n      // Warn about either a string or an object that lacks a precache property.\n      // (An object with a revision property set to null is okay.)\n      if (typeof additionalEntry === 'string') {\n        stringEntries.add(additionalEntry);\n      } else if (additionalEntry && additionalEntry.revision === undefined) {\n        stringEntries.add(additionalEntry.url);\n      }\n\n      manifest.push(additionalEntry);\n    }\n\n    if (stringEntries.size > 0) {\n      let urls = '\\n';\n\n      for (const stringEntry of stringEntries) {\n        urls += `  - ${stringEntry}\\n`;\n      }\n\n      warnings.push(errors['string-entry-warning'] + urls);\n    }\n\n    return {\n      manifest,\n      warnings\n    };\n  };\n};"]},"metadata":{},"sourceType":"script"}