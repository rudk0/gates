{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _path = require(\"path\");\n\nvar _helperModuleTransforms = require(\"@babel/helper-module-transforms\");\n\nvar _core = require(\"@babel/core\");\n\nconst buildPrerequisiteAssignment = (0, _core.template)(`\n  GLOBAL_REFERENCE = GLOBAL_REFERENCE || {}\n`);\nconst buildWrapper = (0, _core.template)(`\n  (function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n      define(MODULE_NAME, AMD_ARGUMENTS, factory);\n    } else if (typeof exports !== \"undefined\") {\n      factory(COMMONJS_ARGUMENTS);\n    } else {\n      var mod = { exports: {} };\n      factory(BROWSER_ARGUMENTS);\n\n      GLOBAL_TO_ASSIGN;\n    }\n  })(\n    typeof globalThis !== \"undefined\" ? globalThis\n      : typeof self !== \"undefined\" ? self\n      : this,\n    function(IMPORT_NAMES) {\n  })\n`);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    globals,\n    exactGlobals,\n    loose,\n    allowTopLevelThis,\n    strict,\n    strictMode,\n    noInterop\n  } = options;\n\n  function buildBrowserInit(browserGlobals, exactGlobals, filename, moduleName) {\n    const moduleNameOrBasename = moduleName ? moduleName.value : (0, _path.basename)(filename, (0, _path.extname)(filename));\n\n    let globalToAssign = _core.types.memberExpression(_core.types.identifier(\"global\"), _core.types.identifier(_core.types.toIdentifier(moduleNameOrBasename)));\n\n    let initAssignments = [];\n\n    if (exactGlobals) {\n      const globalName = browserGlobals[moduleNameOrBasename];\n\n      if (globalName) {\n        initAssignments = [];\n        const members = globalName.split(\".\");\n        globalToAssign = members.slice(1).reduce((accum, curr) => {\n          initAssignments.push(buildPrerequisiteAssignment({\n            GLOBAL_REFERENCE: _core.types.cloneNode(accum)\n          }));\n          return _core.types.memberExpression(accum, _core.types.identifier(curr));\n        }, _core.types.memberExpression(_core.types.identifier(\"global\"), _core.types.identifier(members[0])));\n      }\n    }\n\n    initAssignments.push(_core.types.expressionStatement(_core.types.assignmentExpression(\"=\", globalToAssign, _core.types.memberExpression(_core.types.identifier(\"mod\"), _core.types.identifier(\"exports\")))));\n    return initAssignments;\n  }\n\n  function buildBrowserArg(browserGlobals, exactGlobals, source) {\n    let memberExpression;\n\n    if (exactGlobals) {\n      const globalRef = browserGlobals[source];\n\n      if (globalRef) {\n        memberExpression = globalRef.split(\".\").reduce((accum, curr) => _core.types.memberExpression(accum, _core.types.identifier(curr)), _core.types.identifier(\"global\"));\n      } else {\n        memberExpression = _core.types.memberExpression(_core.types.identifier(\"global\"), _core.types.identifier(_core.types.toIdentifier(source)));\n      }\n    } else {\n      const requireName = (0, _path.basename)(source, (0, _path.extname)(source));\n      const globalName = browserGlobals[requireName] || requireName;\n      memberExpression = _core.types.memberExpression(_core.types.identifier(\"global\"), _core.types.identifier(_core.types.toIdentifier(globalName)));\n    }\n\n    return memberExpression;\n  }\n\n  return {\n    name: \"transform-modules-umd\",\n    visitor: {\n      Program: {\n        exit(path) {\n          if (!(0, _helperModuleTransforms.isModule)(path)) return;\n          const browserGlobals = globals || {};\n          let moduleName = (0, _helperModuleTransforms.getModuleName)(this.file.opts, options);\n          if (moduleName) moduleName = _core.types.stringLiteral(moduleName);\n          const {\n            meta,\n            headers\n          } = (0, _helperModuleTransforms.rewriteModuleStatementsAndPrepareHeader)(path, {\n            loose,\n            strict,\n            strictMode,\n            allowTopLevelThis,\n            noInterop\n          });\n          const amdArgs = [];\n          const commonjsArgs = [];\n          const browserArgs = [];\n          const importNames = [];\n\n          if ((0, _helperModuleTransforms.hasExports)(meta)) {\n            amdArgs.push(_core.types.stringLiteral(\"exports\"));\n            commonjsArgs.push(_core.types.identifier(\"exports\"));\n            browserArgs.push(_core.types.memberExpression(_core.types.identifier(\"mod\"), _core.types.identifier(\"exports\")));\n            importNames.push(_core.types.identifier(meta.exportName));\n          }\n\n          for (const [source, metadata] of meta.source) {\n            amdArgs.push(_core.types.stringLiteral(source));\n            commonjsArgs.push(_core.types.callExpression(_core.types.identifier(\"require\"), [_core.types.stringLiteral(source)]));\n            browserArgs.push(buildBrowserArg(browserGlobals, exactGlobals, source));\n            importNames.push(_core.types.identifier(metadata.name));\n\n            if (!(0, _helperModuleTransforms.isSideEffectImport)(metadata)) {\n              const interop = (0, _helperModuleTransforms.wrapInterop)(path, _core.types.identifier(metadata.name), metadata.interop);\n\n              if (interop) {\n                const header = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", _core.types.identifier(metadata.name), interop));\n\n                header.loc = meta.loc;\n                headers.push(header);\n              }\n            }\n\n            headers.push(...(0, _helperModuleTransforms.buildNamespaceInitStatements)(meta, metadata, loose));\n          }\n\n          (0, _helperModuleTransforms.ensureStatementsHoisted)(headers);\n          path.unshiftContainer(\"body\", headers);\n          const {\n            body,\n            directives\n          } = path.node;\n          path.node.directives = [];\n          path.node.body = [];\n          const umdWrapper = path.pushContainer(\"body\", [buildWrapper({\n            MODULE_NAME: moduleName,\n            AMD_ARGUMENTS: _core.types.arrayExpression(amdArgs),\n            COMMONJS_ARGUMENTS: commonjsArgs,\n            BROWSER_ARGUMENTS: browserArgs,\n            IMPORT_NAMES: importNames,\n            GLOBAL_TO_ASSIGN: buildBrowserInit(browserGlobals, exactGlobals, this.filename || \"unknown\", moduleName)\n          })])[0];\n          const umdFactory = umdWrapper.get(\"expression.arguments\")[1].get(\"body\");\n          umdFactory.pushContainer(\"directives\", directives);\n          umdFactory.pushContainer(\"body\", body);\n        }\n\n      }\n    }\n  };\n});\n\nexports.default = _default;","map":{"version":3,"sources":["/home/agatha/open/node_modules/@babel/plugin-transform-modules-umd/lib/index.js"],"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_path","_helperModuleTransforms","_core","buildPrerequisiteAssignment","template","buildWrapper","_default","declare","api","options","assertVersion","globals","exactGlobals","loose","allowTopLevelThis","strict","strictMode","noInterop","buildBrowserInit","browserGlobals","filename","moduleName","moduleNameOrBasename","basename","extname","globalToAssign","types","memberExpression","identifier","toIdentifier","initAssignments","globalName","members","split","slice","reduce","accum","curr","push","GLOBAL_REFERENCE","cloneNode","expressionStatement","assignmentExpression","buildBrowserArg","source","globalRef","requireName","name","visitor","Program","exit","path","isModule","getModuleName","file","opts","stringLiteral","meta","headers","rewriteModuleStatementsAndPrepareHeader","amdArgs","commonjsArgs","browserArgs","importNames","hasExports","exportName","metadata","callExpression","isSideEffectImport","interop","wrapInterop","header","loc","buildNamespaceInitStatements","ensureStatementsHoisted","unshiftContainer","body","directives","node","umdWrapper","pushContainer","MODULE_NAME","AMD_ARGUMENTS","arrayExpression","COMMONJS_ARGUMENTS","BROWSER_ARGUMENTS","IMPORT_NAMES","GLOBAL_TO_ASSIGN","umdFactory","get"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _path = require(\"path\");\n\nvar _helperModuleTransforms = require(\"@babel/helper-module-transforms\");\n\nvar _core = require(\"@babel/core\");\n\nconst buildPrerequisiteAssignment = (0, _core.template)(`\n  GLOBAL_REFERENCE = GLOBAL_REFERENCE || {}\n`);\nconst buildWrapper = (0, _core.template)(`\n  (function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n      define(MODULE_NAME, AMD_ARGUMENTS, factory);\n    } else if (typeof exports !== \"undefined\") {\n      factory(COMMONJS_ARGUMENTS);\n    } else {\n      var mod = { exports: {} };\n      factory(BROWSER_ARGUMENTS);\n\n      GLOBAL_TO_ASSIGN;\n    }\n  })(\n    typeof globalThis !== \"undefined\" ? globalThis\n      : typeof self !== \"undefined\" ? self\n      : this,\n    function(IMPORT_NAMES) {\n  })\n`);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  api.assertVersion(7);\n  const {\n    globals,\n    exactGlobals,\n    loose,\n    allowTopLevelThis,\n    strict,\n    strictMode,\n    noInterop\n  } = options;\n\n  function buildBrowserInit(browserGlobals, exactGlobals, filename, moduleName) {\n    const moduleNameOrBasename = moduleName ? moduleName.value : (0, _path.basename)(filename, (0, _path.extname)(filename));\n\n    let globalToAssign = _core.types.memberExpression(_core.types.identifier(\"global\"), _core.types.identifier(_core.types.toIdentifier(moduleNameOrBasename)));\n\n    let initAssignments = [];\n\n    if (exactGlobals) {\n      const globalName = browserGlobals[moduleNameOrBasename];\n\n      if (globalName) {\n        initAssignments = [];\n        const members = globalName.split(\".\");\n        globalToAssign = members.slice(1).reduce((accum, curr) => {\n          initAssignments.push(buildPrerequisiteAssignment({\n            GLOBAL_REFERENCE: _core.types.cloneNode(accum)\n          }));\n          return _core.types.memberExpression(accum, _core.types.identifier(curr));\n        }, _core.types.memberExpression(_core.types.identifier(\"global\"), _core.types.identifier(members[0])));\n      }\n    }\n\n    initAssignments.push(_core.types.expressionStatement(_core.types.assignmentExpression(\"=\", globalToAssign, _core.types.memberExpression(_core.types.identifier(\"mod\"), _core.types.identifier(\"exports\")))));\n    return initAssignments;\n  }\n\n  function buildBrowserArg(browserGlobals, exactGlobals, source) {\n    let memberExpression;\n\n    if (exactGlobals) {\n      const globalRef = browserGlobals[source];\n\n      if (globalRef) {\n        memberExpression = globalRef.split(\".\").reduce((accum, curr) => _core.types.memberExpression(accum, _core.types.identifier(curr)), _core.types.identifier(\"global\"));\n      } else {\n        memberExpression = _core.types.memberExpression(_core.types.identifier(\"global\"), _core.types.identifier(_core.types.toIdentifier(source)));\n      }\n    } else {\n      const requireName = (0, _path.basename)(source, (0, _path.extname)(source));\n      const globalName = browserGlobals[requireName] || requireName;\n      memberExpression = _core.types.memberExpression(_core.types.identifier(\"global\"), _core.types.identifier(_core.types.toIdentifier(globalName)));\n    }\n\n    return memberExpression;\n  }\n\n  return {\n    name: \"transform-modules-umd\",\n    visitor: {\n      Program: {\n        exit(path) {\n          if (!(0, _helperModuleTransforms.isModule)(path)) return;\n          const browserGlobals = globals || {};\n          let moduleName = (0, _helperModuleTransforms.getModuleName)(this.file.opts, options);\n          if (moduleName) moduleName = _core.types.stringLiteral(moduleName);\n          const {\n            meta,\n            headers\n          } = (0, _helperModuleTransforms.rewriteModuleStatementsAndPrepareHeader)(path, {\n            loose,\n            strict,\n            strictMode,\n            allowTopLevelThis,\n            noInterop\n          });\n          const amdArgs = [];\n          const commonjsArgs = [];\n          const browserArgs = [];\n          const importNames = [];\n\n          if ((0, _helperModuleTransforms.hasExports)(meta)) {\n            amdArgs.push(_core.types.stringLiteral(\"exports\"));\n            commonjsArgs.push(_core.types.identifier(\"exports\"));\n            browserArgs.push(_core.types.memberExpression(_core.types.identifier(\"mod\"), _core.types.identifier(\"exports\")));\n            importNames.push(_core.types.identifier(meta.exportName));\n          }\n\n          for (const [source, metadata] of meta.source) {\n            amdArgs.push(_core.types.stringLiteral(source));\n            commonjsArgs.push(_core.types.callExpression(_core.types.identifier(\"require\"), [_core.types.stringLiteral(source)]));\n            browserArgs.push(buildBrowserArg(browserGlobals, exactGlobals, source));\n            importNames.push(_core.types.identifier(metadata.name));\n\n            if (!(0, _helperModuleTransforms.isSideEffectImport)(metadata)) {\n              const interop = (0, _helperModuleTransforms.wrapInterop)(path, _core.types.identifier(metadata.name), metadata.interop);\n\n              if (interop) {\n                const header = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", _core.types.identifier(metadata.name), interop));\n\n                header.loc = meta.loc;\n                headers.push(header);\n              }\n            }\n\n            headers.push(...(0, _helperModuleTransforms.buildNamespaceInitStatements)(meta, metadata, loose));\n          }\n\n          (0, _helperModuleTransforms.ensureStatementsHoisted)(headers);\n          path.unshiftContainer(\"body\", headers);\n          const {\n            body,\n            directives\n          } = path.node;\n          path.node.directives = [];\n          path.node.body = [];\n          const umdWrapper = path.pushContainer(\"body\", [buildWrapper({\n            MODULE_NAME: moduleName,\n            AMD_ARGUMENTS: _core.types.arrayExpression(amdArgs),\n            COMMONJS_ARGUMENTS: commonjsArgs,\n            BROWSER_ARGUMENTS: browserArgs,\n            IMPORT_NAMES: importNames,\n            GLOBAL_TO_ASSIGN: buildBrowserInit(browserGlobals, exactGlobals, this.filename || \"unknown\", moduleName)\n          })])[0];\n          const umdFactory = umdWrapper.get(\"expression.arguments\")[1].get(\"body\");\n          umdFactory.pushContainer(\"directives\", directives);\n          umdFactory.pushContainer(\"body\", body);\n        }\n\n      }\n    }\n  };\n});\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}