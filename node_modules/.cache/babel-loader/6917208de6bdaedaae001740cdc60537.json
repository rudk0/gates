{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/home/agatha/open/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _taggedTemplateLiteral = require(\"/home/agatha/open/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Specifying '\", \"'' in a\\n          'runtimeCaching[].handler' option is deprecated. Please update your\\n          config to use '\", \"' instead. In v4 Workbox strategies are now\\n          classes instead of functions.\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"The '\", \"' option has been renamed to\\n          '\", \"'. Please update your config. '\", \"' is now\\n          deprecated and will be removed in a future release of Workbox.\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\nvar ol = require('common-tags').oneLine;\n\nvar checkURLCasing = function checkURLCasing(options) {\n  var oldToNewOptionNames = {\n    dontCacheBustUrlsMatching: 'dontCacheBustURLsMatching',\n    ignoreUrlParametersMatching: 'ignoreURLParametersMatching',\n    modifyUrlPrefix: 'modifyURLPrefix',\n    templatedUrls: 'templatedURLs'\n  };\n  var warnings = [];\n\n  var _arr = Object.entries(oldToNewOptionNames);\n\n  for (var _i = 0; _i < _arr.length; _i++) {\n    var _arr$_i = (0, _slicedToArray2.default)(_arr[_i], 2),\n        oldOption = _arr$_i[0],\n        newOption = _arr$_i[1];\n\n    if (oldOption in options) {\n      warnings.push(ol(_templateObject(), oldOption, newOption, oldOption)); // Rename the option so the config will be valid.\n\n      options[newOption] = options[oldOption];\n      delete options[oldOption];\n    }\n  }\n\n  return warnings;\n};\n\nvar checkStrategyClasses = function checkStrategyClasses(options) {\n  var oldToNewOptionValues = {\n    cacheFirst: 'CacheFirst',\n    cacheOnly: 'CacheOnly',\n    networkFirst: 'NetworkFirst',\n    networkOnly: 'NetworkOnly',\n    staleWhileRevalidate: 'StaleWhileRevalidate'\n  };\n  var warnings = [];\n\n  if (options.runtimeCaching) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = options.runtimeCaching[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var entry = _step.value;\n\n        if (typeof entry.handler === 'string' && oldToNewOptionValues.hasOwnProperty(entry.handler)) {\n          var oldValue = entry.handler;\n          var newValue = oldToNewOptionValues[entry.handler];\n          warnings.push(ol(_templateObject2(), oldValue, newValue)); // Set the new value so the config will be valid.\n\n          entry.handler = newValue;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return warnings;\n};\n\nmodule.exports = function (options) {\n  return [].concat(_toConsumableArray(checkURLCasing(options)), _toConsumableArray(checkStrategyClasses(options)));\n};","map":{"version":3,"sources":["/home/agatha/open/node_modules/workbox-build/build/lib/check-for-deprecated-options.js"],"names":["_interopRequireDefault","require","_slicedToArray2","ol","oneLine","checkURLCasing","options","oldToNewOptionNames","dontCacheBustUrlsMatching","ignoreUrlParametersMatching","modifyUrlPrefix","templatedUrls","warnings","_arr","Object","entries","_i","length","_arr$_i","default","oldOption","newOption","push","checkStrategyClasses","oldToNewOptionValues","cacheFirst","cacheOnly","networkFirst","networkOnly","staleWhileRevalidate","runtimeCaching","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","entry","value","handler","hasOwnProperty","oldValue","newValue","err","return","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,eAAe,GAAGF,sBAAsB,CAACC,OAAO,CAAC,sCAAD,CAAR,CAA5C;AAEA;;;;;;;;;AAOA,IAAME,EAAE,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBG,OAAlC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,OAAO,EAAI;AAChC,MAAMC,mBAAmB,GAAG;AAC1BC,IAAAA,yBAAyB,EAAE,2BADD;AAE1BC,IAAAA,2BAA2B,EAAE,6BAFH;AAG1BC,IAAAA,eAAe,EAAE,iBAHS;AAI1BC,IAAAA,aAAa,EAAE;AAJW,GAA5B;AAMA,MAAMC,QAAQ,GAAG,EAAjB;;AAEA,MAAIC,IAAI,GAAGC,MAAM,CAACC,OAAP,CAAeR,mBAAf,CAAX;;AAEA,OAAK,IAAIS,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGH,IAAI,CAACI,MAA3B,EAAmCD,EAAE,EAArC,EAAyC;AACvC,QAAME,OAAO,GAAG,CAAC,GAAGhB,eAAe,CAACiB,OAApB,EAA6BN,IAAI,CAACG,EAAD,CAAjC,EAAuC,CAAvC,CAAhB;AAAA,QACMI,SAAS,GAAGF,OAAO,CAAC,CAAD,CADzB;AAAA,QAEMG,SAAS,GAAGH,OAAO,CAAC,CAAD,CAFzB;;AAIA,QAAIE,SAAS,IAAId,OAAjB,EAA0B;AACxBM,MAAAA,QAAQ,CAACU,IAAT,CAAcnB,EAAd,oBAAwBiB,SAAxB,EACOC,SADP,EACkDD,SADlD,GADwB,CAG8C;;AAEtEd,MAAAA,OAAO,CAACe,SAAD,CAAP,GAAqBf,OAAO,CAACc,SAAD,CAA5B;AACA,aAAOd,OAAO,CAACc,SAAD,CAAd;AACD;AACF;;AAED,SAAOR,QAAP;AACD,CA3BD;;AA6BA,IAAMW,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAjB,OAAO,EAAI;AACtC,MAAMkB,oBAAoB,GAAG;AAC3BC,IAAAA,UAAU,EAAE,YADe;AAE3BC,IAAAA,SAAS,EAAE,WAFgB;AAG3BC,IAAAA,YAAY,EAAE,cAHa;AAI3BC,IAAAA,WAAW,EAAE,aAJc;AAK3BC,IAAAA,oBAAoB,EAAE;AALK,GAA7B;AAOA,MAAMjB,QAAQ,GAAG,EAAjB;;AAEA,MAAIN,OAAO,CAACwB,cAAZ,EAA4B;AAC1B,QAAIC,yBAAyB,GAAG,IAAhC;AACA,QAAIC,iBAAiB,GAAG,KAAxB;AACA,QAAIC,cAAc,GAAGC,SAArB;;AAEA,QAAI;AACF,WAAK,IAAIC,SAAS,GAAG7B,OAAO,CAACwB,cAAR,CAAuBM,MAAM,CAACC,QAA9B,GAAhB,EAA2DC,KAAhE,EAAuE,EAAEP,yBAAyB,GAAG,CAACO,KAAK,GAAGH,SAAS,CAACI,IAAV,EAAT,EAA2BC,IAAzD,CAAvE,EAAuIT,yBAAyB,GAAG,IAAnK,EAAyK;AACvK,YAAMU,KAAK,GAAGH,KAAK,CAACI,KAApB;;AAEA,YAAI,OAAOD,KAAK,CAACE,OAAb,KAAyB,QAAzB,IAAqCnB,oBAAoB,CAACoB,cAArB,CAAoCH,KAAK,CAACE,OAA1C,CAAzC,EAA6F;AAC3F,cAAME,QAAQ,GAAGJ,KAAK,CAACE,OAAvB;AACA,cAAMG,QAAQ,GAAGtB,oBAAoB,CAACiB,KAAK,CAACE,OAAP,CAArC;AACA/B,UAAAA,QAAQ,CAACU,IAAT,CAAcnB,EAAd,qBAA+B0C,QAA/B,EAEiBC,QAFjB,GAH2F,CAM1D;;AAEjCL,UAAAA,KAAK,CAACE,OAAN,GAAgBG,QAAhB;AACD;AACF;AACF,KAfD,CAeE,OAAOC,GAAP,EAAY;AACZf,MAAAA,iBAAiB,GAAG,IAApB;AACAC,MAAAA,cAAc,GAAGc,GAAjB;AACD,KAlBD,SAkBU;AACR,UAAI;AACF,YAAI,CAAChB,yBAAD,IAA8BI,SAAS,CAACa,MAAV,IAAoB,IAAtD,EAA4D;AAC1Db,UAAAA,SAAS,CAACa,MAAV;AACD;AACF,OAJD,SAIU;AACR,YAAIhB,iBAAJ,EAAuB;AACrB,gBAAMC,cAAN;AACD;AACF;AACF;AACF;;AAED,SAAOrB,QAAP;AACD,CA/CD;;AAiDAqC,MAAM,CAACC,OAAP,GAAiB,UAAA5C,OAAO,EAAI;AAC1B,sCAAWD,cAAc,CAACC,OAAD,CAAzB,sBAAuCiB,oBAAoB,CAACjB,OAAD,CAA3D;AACD,CAFD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nconst ol = require('common-tags').oneLine;\n\nconst checkURLCasing = options => {\n  const oldToNewOptionNames = {\n    dontCacheBustUrlsMatching: 'dontCacheBustURLsMatching',\n    ignoreUrlParametersMatching: 'ignoreURLParametersMatching',\n    modifyUrlPrefix: 'modifyURLPrefix',\n    templatedUrls: 'templatedURLs'\n  };\n  const warnings = [];\n\n  var _arr = Object.entries(oldToNewOptionNames);\n\n  for (var _i = 0; _i < _arr.length; _i++) {\n    const _arr$_i = (0, _slicedToArray2.default)(_arr[_i], 2),\n          oldOption = _arr$_i[0],\n          newOption = _arr$_i[1];\n\n    if (oldOption in options) {\n      warnings.push(ol`The '${oldOption}' option has been renamed to\n          '${newOption}'. Please update your config. '${oldOption}' is now\n          deprecated and will be removed in a future release of Workbox.`); // Rename the option so the config will be valid.\n\n      options[newOption] = options[oldOption];\n      delete options[oldOption];\n    }\n  }\n\n  return warnings;\n};\n\nconst checkStrategyClasses = options => {\n  const oldToNewOptionValues = {\n    cacheFirst: 'CacheFirst',\n    cacheOnly: 'CacheOnly',\n    networkFirst: 'NetworkFirst',\n    networkOnly: 'NetworkOnly',\n    staleWhileRevalidate: 'StaleWhileRevalidate'\n  };\n  const warnings = [];\n\n  if (options.runtimeCaching) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = options.runtimeCaching[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        const entry = _step.value;\n\n        if (typeof entry.handler === 'string' && oldToNewOptionValues.hasOwnProperty(entry.handler)) {\n          const oldValue = entry.handler;\n          const newValue = oldToNewOptionValues[entry.handler];\n          warnings.push(ol`Specifying '${oldValue}'' in a\n          'runtimeCaching[].handler' option is deprecated. Please update your\n          config to use '${newValue}' instead. In v4 Workbox strategies are now\n          classes instead of functions.`); // Set the new value so the config will be valid.\n\n          entry.handler = newValue;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return warnings;\n};\n\nmodule.exports = options => {\n  return [...checkURLCasing(options), ...checkStrategyClasses(options)];\n};"]},"metadata":{},"sourceType":"script"}