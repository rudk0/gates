{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/agatha/open/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/agatha/open/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/home/agatha/open/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/home/agatha/open/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Hoek = require('@hapi/hoek');\n\nvar Any = require('../any');\n\nvar internals = {};\n\ninternals.Lazy = /*#__PURE__*/function (_Any) {\n  _inherits(_class, _Any);\n\n  var _super = _createSuper(_class);\n\n  function _class() {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    _this = _super.call(this);\n    _this._type = 'lazy';\n    _this._flags.once = true;\n    _this._cache = null;\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: \"_init\",\n    value: function _init(fn, options) {\n      return this.set(fn, options);\n    }\n  }, {\n    key: \"_base\",\n    value: function _base(value, state, options) {\n      var schema;\n\n      if (this._cache) {\n        schema = this._cache;\n      } else {\n        var result = {\n          value: value\n        };\n        var lazy = this._flags.lazy;\n\n        if (!lazy) {\n          result.errors = this.createError('lazy.base', null, state, options);\n          return result;\n        }\n\n        schema = lazy();\n\n        if (!(schema instanceof Any)) {\n          result.errors = this.createError('lazy.schema', {\n            schema: schema\n          }, state, options);\n          return result;\n        }\n\n        if (this._flags.once) {\n          this._cache = schema;\n        }\n      }\n\n      return schema._validate(value, state, options);\n    }\n  }, {\n    key: \"set\",\n    value: function set(fn, options) {\n      Hoek.assert(typeof fn === 'function', 'You must provide a function as first argument');\n      Hoek.assert(options === undefined || options && typeof options === 'object' && !Array.isArray(options), \"Options must be an object\");\n\n      if (options) {\n        var unknownOptions = Object.keys(options).filter(function (key) {\n          return !['once'].includes(key);\n        });\n        Hoek.assert(unknownOptions.length === 0, \"Options contain unknown keys: \".concat(unknownOptions));\n        Hoek.assert(options.once === undefined || typeof options.once === 'boolean', 'Option \"once\" must be a boolean');\n      }\n\n      var obj = this.clone();\n      obj._flags.lazy = fn;\n\n      if (options && options.once !== obj._flags.once) {\n        obj._flags.once = options.once;\n      }\n\n      return obj;\n    }\n  }]);\n\n  return _class;\n}(Any);\n\nmodule.exports = new internals.Lazy();","map":{"version":3,"sources":["/home/agatha/open/node_modules/@hapi/joi/lib/types/lazy/index.js"],"names":["Hoek","require","Any","internals","Lazy","_type","_flags","once","_cache","fn","options","set","value","state","schema","result","lazy","errors","createError","_validate","assert","undefined","Array","isArray","unknownOptions","Object","keys","filter","key","includes","length","obj","clone","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Hoek = require('@hapi/hoek');\n\nconst Any = require('../any');\n\n\nconst internals = {};\n\n\ninternals.Lazy = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'lazy';\n        this._flags.once = true;\n        this._cache = null;\n    }\n\n    _init(fn, options) {\n\n        return this.set(fn, options);\n    }\n\n    _base(value, state, options) {\n\n        let schema;\n        if (this._cache) {\n            schema = this._cache;\n        }\n        else {\n            const result = { value };\n            const lazy = this._flags.lazy;\n\n            if (!lazy) {\n                result.errors = this.createError('lazy.base', null, state, options);\n                return result;\n            }\n\n            schema = lazy();\n\n            if (!(schema instanceof Any)) {\n                result.errors = this.createError('lazy.schema', { schema }, state, options);\n                return result;\n            }\n\n            if (this._flags.once) {\n                this._cache = schema;\n            }\n        }\n\n        return schema._validate(value, state, options);\n    }\n\n    set(fn, options) {\n\n        Hoek.assert(typeof fn === 'function', 'You must provide a function as first argument');\n        Hoek.assert(options === undefined || (options && typeof options === 'object' && !Array.isArray(options)), `Options must be an object`);\n\n        if (options) {\n            const unknownOptions = Object.keys(options).filter((key) => !['once'].includes(key));\n            Hoek.assert(unknownOptions.length === 0, `Options contain unknown keys: ${unknownOptions}`);\n            Hoek.assert(options.once === undefined || typeof options.once === 'boolean', 'Option \"once\" must be a boolean');\n        }\n\n        const obj = this.clone();\n        obj._flags.lazy = fn;\n\n        if (options && options.once !== obj._flags.once) {\n            obj._flags.once = options.once;\n        }\n\n        return obj;\n    }\n\n};\n\nmodule.exports = new internals.Lazy();\n"]},"metadata":{},"sourceType":"script"}