{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"/home/agatha/open/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar internals = {};\n\nmodule.exports = function (array1, array2) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!array1 || !array2) {\n    return options.first ? null : [];\n  }\n\n  var common = [];\n  var hash = Array.isArray(array1) ? new Set(array1) : array1;\n  var found = new Set();\n\n  var _iterator = _createForOfIteratorHelper(array2),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var value = _step.value;\n\n      if (internals.has(hash, value) && !found.has(value)) {\n        if (options.first) {\n          return value;\n        }\n\n        common.push(value);\n        found.add(value);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return options.first ? null : common;\n};\n\ninternals.has = function (ref, key) {\n  if (typeof ref.has === 'function') {\n    return ref.has(key);\n  }\n\n  return ref[key] !== undefined;\n};","map":{"version":3,"sources":["/home/agatha/open/node_modules/@hapi/hoek/lib/intersect.js"],"names":["internals","module","exports","array1","array2","options","first","common","hash","Array","isArray","Set","found","value","has","push","add","ref","key","undefined"],"mappings":"AAAA;;;;AAEA,IAAMA,SAAS,GAAG,EAAlB;;AAGAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkBC,MAAlB,EAAwC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAErD,MAAI,CAACF,MAAD,IACA,CAACC,MADL,EACa;AAET,WAAQC,OAAO,CAACC,KAAR,GAAgB,IAAhB,GAAuB,EAA/B;AACH;;AAED,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,IAAI,GAAIC,KAAK,CAACC,OAAN,CAAcP,MAAd,IAAwB,IAAIQ,GAAJ,CAAQR,MAAR,CAAxB,GAA0CA,MAAxD;AACA,MAAMS,KAAK,GAAG,IAAID,GAAJ,EAAd;;AAVqD,6CAWjCP,MAXiC;AAAA;;AAAA;AAWrD,wDAA4B;AAAA,UAAjBS,KAAiB;;AACxB,UAAIb,SAAS,CAACc,GAAV,CAAcN,IAAd,EAAoBK,KAApB,KACA,CAACD,KAAK,CAACE,GAAN,CAAUD,KAAV,CADL,EACuB;AAEnB,YAAIR,OAAO,CAACC,KAAZ,EAAmB;AACf,iBAAOO,KAAP;AACH;;AAEDN,QAAAA,MAAM,CAACQ,IAAP,CAAYF,KAAZ;AACAD,QAAAA,KAAK,CAACI,GAAN,CAAUH,KAAV;AACH;AACJ;AAtBoD;AAAA;AAAA;AAAA;AAAA;;AAwBrD,SAAQR,OAAO,CAACC,KAAR,GAAgB,IAAhB,GAAuBC,MAA/B;AACH,CAzBD;;AA4BAP,SAAS,CAACc,GAAV,GAAgB,UAAUG,GAAV,EAAeC,GAAf,EAAoB;AAEhC,MAAI,OAAOD,GAAG,CAACH,GAAX,KAAmB,UAAvB,EAAmC;AAC/B,WAAOG,GAAG,CAACH,GAAJ,CAAQI,GAAR,CAAP;AACH;;AAED,SAAOD,GAAG,CAACC,GAAD,CAAH,KAAaC,SAApB;AACH,CAPD","sourcesContent":["'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function (array1, array2, options = {}) {\n\n    if (!array1 ||\n        !array2) {\n\n        return (options.first ? null : []);\n    }\n\n    const common = [];\n    const hash = (Array.isArray(array1) ? new Set(array1) : array1);\n    const found = new Set();\n    for (const value of array2) {\n        if (internals.has(hash, value) &&\n            !found.has(value)) {\n\n            if (options.first) {\n                return value;\n            }\n\n            common.push(value);\n            found.add(value);\n        }\n    }\n\n    return (options.first ? null : common);\n};\n\n\ninternals.has = function (ref, key) {\n\n    if (typeof ref.has === 'function') {\n        return ref.has(key);\n    }\n\n    return ref[key] !== undefined;\n};\n"]},"metadata":{},"sourceType":"script"}