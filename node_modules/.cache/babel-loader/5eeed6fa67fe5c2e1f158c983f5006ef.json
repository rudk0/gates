{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = wrapFunction;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _template = _interopRequireDefault(require(\"@babel/template\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst buildAnonymousExpressionWrapper = _template.default.expression(`\n  (function () {\n    var REF = FUNCTION;\n    return function NAME(PARAMS) {\n      return REF.apply(this, arguments);\n    };\n  })()\n`);\n\nconst buildNamedExpressionWrapper = _template.default.expression(`\n  (function () {\n    var REF = FUNCTION;\n    function NAME(PARAMS) {\n      return REF.apply(this, arguments);\n    }\n    return NAME;\n  })()\n`);\n\nconst buildDeclarationWrapper = (0, _template.default)(`\n  function NAME(PARAMS) { return REF.apply(this, arguments); }\n  function REF() {\n    REF = FUNCTION;\n    return REF.apply(this, arguments);\n  }\n`);\n\nfunction classOrObjectMethod(path, callId) {\n  const node = path.node;\n  const body = node.body;\n  const container = t.functionExpression(null, [], t.blockStatement(body.body), true);\n  body.body = [t.returnStatement(t.callExpression(t.callExpression(callId, [container]), []))];\n  node.async = false;\n  node.generator = false;\n  path.get(\"body.body.0.argument.callee.arguments.0\").unwrapFunctionEnvironment();\n}\n\nfunction plainFunction(path, callId) {\n  const node = path.node;\n  const isDeclaration = path.isFunctionDeclaration();\n  const functionId = node.id;\n  const wrapper = isDeclaration ? buildDeclarationWrapper : functionId ? buildNamedExpressionWrapper : buildAnonymousExpressionWrapper;\n\n  if (path.isArrowFunctionExpression()) {\n    path.arrowFunctionToExpression();\n  }\n\n  node.id = null;\n\n  if (isDeclaration) {\n    node.type = \"FunctionExpression\";\n  }\n\n  const built = t.callExpression(callId, [node]);\n  const container = wrapper({\n    NAME: functionId || null,\n    REF: path.scope.generateUidIdentifier(functionId ? functionId.name : \"ref\"),\n    FUNCTION: built,\n    PARAMS: node.params.reduce((acc, param) => {\n      acc.done = acc.done || t.isAssignmentPattern(param) || t.isRestElement(param);\n\n      if (!acc.done) {\n        acc.params.push(path.scope.generateUidIdentifier(\"x\"));\n      }\n\n      return acc;\n    }, {\n      params: [],\n      done: false\n    }).params\n  });\n\n  if (isDeclaration) {\n    path.replaceWith(container[0]);\n    path.insertAfter(container[1]);\n  } else {\n    const retFunction = container.callee.body.body[1].argument;\n\n    if (!functionId) {\n      (0, _helperFunctionName.default)({\n        node: retFunction,\n        parent: path.parent,\n        scope: path.scope\n      });\n    }\n\n    if (!retFunction || retFunction.id || node.params.length) {\n      path.replaceWith(container);\n    } else {\n      path.replaceWith(built);\n    }\n  }\n}\n\nfunction wrapFunction(path, callId) {\n  if (path.isClassMethod() || path.isObjectMethod()) {\n    classOrObjectMethod(path, callId);\n  } else {\n    plainFunction(path, callId);\n  }\n}","map":{"version":3,"sources":["/home/agatha/open/node_modules/@babel/helper-wrap-function/lib/index.js"],"names":["Object","defineProperty","exports","value","default","wrapFunction","_helperFunctionName","_interopRequireDefault","require","_template","t","_interopRequireWildcard","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","buildAnonymousExpressionWrapper","expression","buildNamedExpressionWrapper","buildDeclarationWrapper","classOrObjectMethod","path","callId","node","body","container","functionExpression","blockStatement","returnStatement","callExpression","async","generator","unwrapFunctionEnvironment","plainFunction","isDeclaration","isFunctionDeclaration","functionId","id","wrapper","isArrowFunctionExpression","arrowFunctionToExpression","type","built","NAME","REF","scope","generateUidIdentifier","name","FUNCTION","PARAMS","params","reduce","acc","param","done","isAssignmentPattern","isRestElement","push","replaceWith","insertAfter","retFunction","callee","argument","parent","length","isClassMethod","isObjectMethod"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = wrapFunction;\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nvar _template = _interopRequireDefault(require(\"@babel/template\"));\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst buildAnonymousExpressionWrapper = _template.default.expression(`\n  (function () {\n    var REF = FUNCTION;\n    return function NAME(PARAMS) {\n      return REF.apply(this, arguments);\n    };\n  })()\n`);\n\nconst buildNamedExpressionWrapper = _template.default.expression(`\n  (function () {\n    var REF = FUNCTION;\n    function NAME(PARAMS) {\n      return REF.apply(this, arguments);\n    }\n    return NAME;\n  })()\n`);\n\nconst buildDeclarationWrapper = (0, _template.default)(`\n  function NAME(PARAMS) { return REF.apply(this, arguments); }\n  function REF() {\n    REF = FUNCTION;\n    return REF.apply(this, arguments);\n  }\n`);\n\nfunction classOrObjectMethod(path, callId) {\n  const node = path.node;\n  const body = node.body;\n  const container = t.functionExpression(null, [], t.blockStatement(body.body), true);\n  body.body = [t.returnStatement(t.callExpression(t.callExpression(callId, [container]), []))];\n  node.async = false;\n  node.generator = false;\n  path.get(\"body.body.0.argument.callee.arguments.0\").unwrapFunctionEnvironment();\n}\n\nfunction plainFunction(path, callId) {\n  const node = path.node;\n  const isDeclaration = path.isFunctionDeclaration();\n  const functionId = node.id;\n  const wrapper = isDeclaration ? buildDeclarationWrapper : functionId ? buildNamedExpressionWrapper : buildAnonymousExpressionWrapper;\n\n  if (path.isArrowFunctionExpression()) {\n    path.arrowFunctionToExpression();\n  }\n\n  node.id = null;\n\n  if (isDeclaration) {\n    node.type = \"FunctionExpression\";\n  }\n\n  const built = t.callExpression(callId, [node]);\n  const container = wrapper({\n    NAME: functionId || null,\n    REF: path.scope.generateUidIdentifier(functionId ? functionId.name : \"ref\"),\n    FUNCTION: built,\n    PARAMS: node.params.reduce((acc, param) => {\n      acc.done = acc.done || t.isAssignmentPattern(param) || t.isRestElement(param);\n\n      if (!acc.done) {\n        acc.params.push(path.scope.generateUidIdentifier(\"x\"));\n      }\n\n      return acc;\n    }, {\n      params: [],\n      done: false\n    }).params\n  });\n\n  if (isDeclaration) {\n    path.replaceWith(container[0]);\n    path.insertAfter(container[1]);\n  } else {\n    const retFunction = container.callee.body.body[1].argument;\n\n    if (!functionId) {\n      (0, _helperFunctionName.default)({\n        node: retFunction,\n        parent: path.parent,\n        scope: path.scope\n      });\n    }\n\n    if (!retFunction || retFunction.id || node.params.length) {\n      path.replaceWith(container);\n    } else {\n      path.replaceWith(built);\n    }\n  }\n}\n\nfunction wrapFunction(path, callId) {\n  if (path.isClassMethod() || path.isObjectMethod()) {\n    classOrObjectMethod(path, callId);\n  } else {\n    plainFunction(path, callId);\n  }\n}"]},"metadata":{},"sourceType":"script"}