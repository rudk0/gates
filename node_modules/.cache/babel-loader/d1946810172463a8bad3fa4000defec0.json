{"ast":null,"code":"import { dirname, resolve, extname, normalize, sep } from 'path';\nimport builtinList from 'builtin-modules';\nimport isModule from 'is-module';\nimport fs, { realpathSync } from 'fs';\nimport { promisify } from 'util';\nimport { createFilter } from '@rollup/pluginutils';\nimport resolveModule from 'resolve';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nconst exists = promisify(fs.exists);\nconst readFile = promisify(fs.readFile);\nconst realpath = promisify(fs.realpath);\nconst stat = promisify(fs.stat);\n\nconst onError = error => {\n  if (error.code === 'ENOENT') {\n    return false;\n  }\n\n  throw error;\n};\n\nconst makeCache = fn => {\n  const cache = new Map();\n\n  const wrapped = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (param, done) {\n      if (cache.has(param) === false) {\n        cache.set(param, fn(param).catch(err => {\n          cache.delete(param);\n          throw err;\n        }));\n      }\n\n      try {\n        const result = cache.get(param);\n        const value = yield result;\n        return done(null, value);\n      } catch (error) {\n        return done(error);\n      }\n    });\n\n    return function wrapped(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  wrapped.clear = () => cache.clear();\n\n  return wrapped;\n};\n\nconst isDirCached = makeCache( /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (file) {\n    try {\n      const stats = yield stat(file);\n      return stats.isDirectory();\n    } catch (error) {\n      return onError(error);\n    }\n  });\n\n  return function (_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nconst isFileCached = makeCache( /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (file) {\n    try {\n      const stats = yield stat(file);\n      return stats.isFile();\n    } catch (error) {\n      return onError(error);\n    }\n  });\n\n  return function (_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nconst readCachedFile = makeCache(readFile);\nconst resolveId = promisify(resolveModule); // returns the imported package name for bare module imports\n\nfunction getPackageName(id) {\n  if (id.startsWith('.') || id.startsWith('/')) {\n    return null;\n  }\n\n  const split = id.split('/'); // @my-scope/my-package/foo.js -> @my-scope/my-package\n  // @my-scope/my-package -> @my-scope/my-package\n\n  if (split[0][0] === '@') {\n    return `${split[0]}/${split[1]}`;\n  } // my-package/foo.js -> my-package\n  // my-package -> my-package\n\n\n  return split[0];\n}\n\nfunction getMainFields(options) {\n  let mainFields;\n\n  if (options.mainFields) {\n    mainFields = options.mainFields;\n  } else {\n    mainFields = ['module', 'main'];\n  }\n\n  if (options.browser && mainFields.indexOf('browser') === -1) {\n    return ['browser'].concat(mainFields);\n  }\n\n  if (!mainFields.length) {\n    throw new Error('Please ensure at least one `mainFields` value is specified');\n  }\n\n  return mainFields;\n}\n\nfunction getPackageInfo(options) {\n  const cache = options.cache,\n        extensions = options.extensions,\n        pkg = options.pkg,\n        mainFields = options.mainFields,\n        preserveSymlinks = options.preserveSymlinks,\n        useBrowserOverrides = options.useBrowserOverrides;\n  let pkgPath = options.pkgPath;\n\n  if (cache.has(pkgPath)) {\n    return cache.get(pkgPath);\n  } // browserify/resolve doesn't realpath paths returned in its packageFilter callback\n\n\n  if (!preserveSymlinks) {\n    pkgPath = realpathSync(pkgPath);\n  }\n\n  const pkgRoot = dirname(pkgPath);\n  const packageInfo = {\n    // copy as we are about to munge the `main` field of `pkg`.\n    packageJson: Object.assign({}, pkg),\n    // path to package.json file\n    packageJsonPath: pkgPath,\n    // directory containing the package.json\n    root: pkgRoot,\n    // which main field was used during resolution of this module (main, module, or browser)\n    resolvedMainField: 'main',\n    // whether the browser map was used to resolve the entry point to this module\n    browserMappedMain: false,\n    // the entry point of the module with respect to the selected main field and any\n    // relevant browser mappings.\n    resolvedEntryPoint: ''\n  };\n  let overriddenMain = false;\n\n  for (let i = 0; i < mainFields.length; i++) {\n    const field = mainFields[i];\n\n    if (typeof pkg[field] === 'string') {\n      pkg.main = pkg[field];\n      packageInfo.resolvedMainField = field;\n      overriddenMain = true;\n      break;\n    }\n  }\n\n  const internalPackageInfo = {\n    cachedPkg: pkg,\n    hasModuleSideEffects: () => null,\n    hasPackageEntry: overriddenMain !== false || mainFields.indexOf('main') !== -1,\n    packageBrowserField: useBrowserOverrides && typeof pkg.browser === 'object' && Object.keys(pkg.browser).reduce((browser, key) => {\n      let resolved = pkg.browser[key];\n\n      if (resolved && resolved[0] === '.') {\n        resolved = resolve(pkgRoot, resolved);\n      }\n      /* eslint-disable no-param-reassign */\n\n\n      browser[key] = resolved;\n\n      if (key[0] === '.') {\n        const absoluteKey = resolve(pkgRoot, key);\n        browser[absoluteKey] = resolved;\n\n        if (!extname(key)) {\n          extensions.reduce((subBrowser, ext) => {\n            subBrowser[absoluteKey + ext] = subBrowser[key];\n            return subBrowser;\n          }, browser);\n        }\n      }\n\n      return browser;\n    }, {}),\n    packageInfo\n  };\n  const browserMap = internalPackageInfo.packageBrowserField;\n\n  if (useBrowserOverrides && typeof pkg.browser === 'object' && // eslint-disable-next-line no-prototype-builtins\n  browserMap.hasOwnProperty(pkg.main)) {\n    packageInfo.resolvedEntryPoint = browserMap[pkg.main];\n    packageInfo.browserMappedMain = true;\n  } else {\n    // index.node is technically a valid default entrypoint as well...\n    packageInfo.resolvedEntryPoint = resolve(pkgRoot, pkg.main || 'index.js');\n    packageInfo.browserMappedMain = false;\n  }\n\n  const packageSideEffects = pkg.sideEffects;\n\n  if (typeof packageSideEffects === 'boolean') {\n    internalPackageInfo.hasModuleSideEffects = () => packageSideEffects;\n  } else if (Array.isArray(packageSideEffects)) {\n    internalPackageInfo.hasModuleSideEffects = createFilter(packageSideEffects, null, {\n      resolve: pkgRoot\n    });\n  }\n\n  cache.set(pkgPath, internalPackageInfo);\n  return internalPackageInfo;\n}\n\nfunction normalizeInput(input) {\n  if (Array.isArray(input)) {\n    return input;\n  } else if (typeof input === 'object') {\n    return Object.values(input);\n  } // otherwise it's a string\n\n\n  return input;\n} // Resolve module specifiers in order. Promise resolves to the first module that resolves\n// successfully, or the error that resulted from the last attempted module resolution.\n\n\nfunction resolveImportSpecifiers(importSpecifierList, resolveOptions) {\n  let promise = Promise.resolve();\n\n  for (let i = 0; i < importSpecifierList.length; i++) {\n    promise = promise.then(value => {\n      // if we've already resolved to something, just return it.\n      if (value) {\n        return value;\n      }\n\n      return resolveId(importSpecifierList[i], resolveOptions).then(result => {\n        if (!resolveOptions.preserveSymlinks) {\n          result = realpathSync(result);\n        }\n\n        return result;\n      });\n    });\n\n    if (i < importSpecifierList.length - 1) {\n      // swallow MODULE_NOT_FOUND errors from all but the last resolution\n      promise = promise.catch(error => {\n        if (error.code !== 'MODULE_NOT_FOUND') {\n          throw error;\n        }\n      });\n    }\n  }\n\n  return promise;\n}\n\nconst builtins = new Set(builtinList);\nconst ES6_BROWSER_EMPTY = '\\0node-resolve:empty.js';\n\nconst nullFn = () => null;\n\nconst defaults = {\n  customResolveOptions: {},\n  dedupe: [],\n  // It's important that .mjs is listed before .js so that Rollup will interpret npm modules\n  // which deploy both ESM .mjs and CommonJS .js files as ESM.\n  extensions: ['.mjs', '.js', '.json', '.node'],\n  resolveOnly: []\n};\n\nfunction nodeResolve(opts = {}) {\n  const options = Object.assign({}, defaults, opts);\n  const customResolveOptions = options.customResolveOptions,\n        extensions = options.extensions,\n        jail = options.jail;\n  const warnings = [];\n  const packageInfoCache = new Map();\n  const idToPackageInfo = new Map();\n  const mainFields = getMainFields(options);\n  const useBrowserOverrides = mainFields.indexOf('browser') !== -1;\n  const isPreferBuiltinsSet = options.preferBuiltins === true || options.preferBuiltins === false;\n  const preferBuiltins = isPreferBuiltinsSet ? options.preferBuiltins : true;\n  const rootDir = options.rootDir || process.cwd();\n  let dedupe = options.dedupe;\n  let rollupOptions;\n\n  if (options.only) {\n    warnings.push('node-resolve: The `only` options is deprecated, please use `resolveOnly`');\n    options.resolveOnly = options.only;\n  }\n\n  if (typeof dedupe !== 'function') {\n    dedupe = importee => options.dedupe.includes(importee) || options.dedupe.includes(getPackageName(importee));\n  }\n\n  const resolveOnly = options.resolveOnly.map(pattern => {\n    if (pattern instanceof RegExp) {\n      return pattern;\n    }\n\n    const normalized = pattern.replace(/[\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    return new RegExp(`^${normalized}$`);\n  });\n  const browserMapCache = new Map();\n  let preserveSymlinks;\n  return {\n    name: 'node-resolve',\n\n    buildStart(options) {\n      rollupOptions = options;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = warnings[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          const warning = _step.value;\n          this.warn(warning);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      preserveSymlinks = options.preserveSymlinks;\n    },\n\n    generateBundle() {\n      readCachedFile.clear();\n      isFileCached.clear();\n      isDirCached.clear();\n    },\n\n    resolveId(importee, importer) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        if (importee === ES6_BROWSER_EMPTY) {\n          return importee;\n        } // ignore IDs with null character, these belong to other plugins\n\n\n        if (/\\0/.test(importee)) return null;\n        const basedir = !importer || dedupe(importee) ? rootDir : dirname(importer); // https://github.com/defunctzombie/package-browser-field-spec\n\n        const browser = browserMapCache.get(importer);\n\n        if (useBrowserOverrides && browser) {\n          const resolvedImportee = resolve(basedir, importee);\n\n          if (browser[importee] === false || browser[resolvedImportee] === false) {\n            return ES6_BROWSER_EMPTY;\n          }\n\n          const browserImportee = browser[importee] || browser[resolvedImportee] || browser[`${resolvedImportee}.js`] || browser[`${resolvedImportee}.json`];\n\n          if (browserImportee) {\n            importee = browserImportee;\n          }\n        }\n\n        const parts = importee.split(/[/\\\\]/);\n        let id = parts.shift();\n\n        if (id[0] === '@' && parts.length > 0) {\n          // scoped packages\n          id += `/${parts.shift()}`;\n        } else if (id[0] === '.') {\n          // an import relative to the parent dir of the importer\n          id = resolve(basedir, importee);\n        }\n\n        const input = normalizeInput(rollupOptions.input);\n\n        if (resolveOnly.length && !resolveOnly.some(pattern => pattern.test(id))) {\n          if (input.includes(id)) {\n            return null;\n          }\n\n          return false;\n        }\n\n        let hasModuleSideEffects = nullFn;\n        let hasPackageEntry = true;\n        let packageBrowserField = false;\n        let packageInfo;\n\n        const filter = (pkg, pkgPath) => {\n          const info = getPackageInfo({\n            cache: packageInfoCache,\n            extensions,\n            pkg,\n            pkgPath,\n            mainFields,\n            preserveSymlinks,\n            useBrowserOverrides\n          });\n          packageInfo = info.packageInfo;\n          hasModuleSideEffects = info.hasModuleSideEffects;\n          hasPackageEntry = info.hasPackageEntry;\n          packageBrowserField = info.packageBrowserField;\n          return info.cachedPkg;\n        };\n\n        let resolveOptions = {\n          basedir,\n          packageFilter: filter,\n          readFile: readCachedFile,\n          isFile: isFileCached,\n          isDirectory: isDirCached,\n          extensions\n        };\n\n        if (preserveSymlinks !== undefined) {\n          resolveOptions.preserveSymlinks = preserveSymlinks;\n        }\n\n        const importSpecifierList = [];\n\n        if (importer === undefined && !importee[0].match(/^\\.?\\.?\\//)) {\n          // For module graph roots (i.e. when importer is undefined), we\n          // need to handle 'path fragments` like `foo/bar` that are commonly\n          // found in rollup config files. If importee doesn't look like a\n          // relative or absolute path, we make it relative and attempt to\n          // resolve it. If we don't find anything, we try resolving it as we\n          // got it.\n          importSpecifierList.push(`./${importee}`);\n        }\n\n        const importeeIsBuiltin = builtins.has(importee);\n\n        if (importeeIsBuiltin && (!preferBuiltins || !isPreferBuiltinsSet)) {\n          // The `resolve` library will not resolve packages with the same\n          // name as a node built-in module. If we're resolving something\n          // that's a builtin, and we don't prefer to find built-ins, we\n          // first try to look up a local module with that name. If we don't\n          // find anything, we resolve the builtin which just returns back\n          // the built-in's name.\n          importSpecifierList.push(`${importee}/`);\n        }\n\n        importSpecifierList.push(importee);\n        resolveOptions = Object.assign(resolveOptions, customResolveOptions);\n\n        try {\n          let resolved = yield resolveImportSpecifiers(importSpecifierList, resolveOptions);\n\n          if (resolved && packageBrowserField) {\n            if (Object.prototype.hasOwnProperty.call(packageBrowserField, resolved)) {\n              if (!packageBrowserField[resolved]) {\n                browserMapCache.set(resolved, packageBrowserField);\n                return ES6_BROWSER_EMPTY;\n              }\n\n              resolved = packageBrowserField[resolved];\n            }\n\n            browserMapCache.set(resolved, packageBrowserField);\n          }\n\n          if (hasPackageEntry && !preserveSymlinks && resolved) {\n            const fileExists = yield exists(resolved);\n\n            if (fileExists) {\n              resolved = yield realpath(resolved);\n            }\n          }\n\n          idToPackageInfo.set(resolved, packageInfo);\n\n          if (hasPackageEntry) {\n            if (builtins.has(resolved) && preferBuiltins && isPreferBuiltinsSet) {\n              return null;\n            } else if (importeeIsBuiltin && preferBuiltins) {\n              if (!isPreferBuiltinsSet) {\n                _this.warn(`preferring built-in module '${importee}' over local alternative at '${resolved}', pass 'preferBuiltins: false' to disable this behavior or 'preferBuiltins: true' to disable this warning`);\n              }\n\n              return null;\n            } else if (jail && resolved.indexOf(normalize(jail.trim(sep))) !== 0) {\n              return null;\n            }\n          }\n\n          if (resolved && options.modulesOnly) {\n            const code = yield readFile(resolved, 'utf-8');\n\n            if (isModule(code)) {\n              return {\n                id: resolved,\n                moduleSideEffects: hasModuleSideEffects(resolved)\n              };\n            }\n\n            return null;\n          }\n\n          const result = {\n            id: resolved,\n            moduleSideEffects: hasModuleSideEffects(resolved)\n          };\n          return result;\n        } catch (error) {\n          return null;\n        }\n      })();\n    },\n\n    load(importee) {\n      if (importee === ES6_BROWSER_EMPTY) {\n        return 'export default {};';\n      }\n\n      return null;\n    },\n\n    getPackageInfoForId(id) {\n      return idToPackageInfo.get(id);\n    }\n\n  };\n}\n\nexport default nodeResolve;","map":{"version":3,"sources":["/home/agatha/open/node_modules/@rollup/plugin-node-resolve/dist/index.es.js"],"names":["dirname","resolve","extname","normalize","sep","builtinList","isModule","fs","realpathSync","promisify","createFilter","resolveModule","asyncGeneratorStep","gen","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","exists","readFile","realpath","stat","onError","code","makeCache","cache","Map","wrapped","_ref","param","has","set","catch","delete","result","get","_x","_x2","clear","isDirCached","_ref2","file","stats","isDirectory","_x3","isFileCached","_ref3","isFile","_x4","readCachedFile","resolveId","getPackageName","id","startsWith","split","getMainFields","options","mainFields","browser","indexOf","concat","length","Error","getPackageInfo","extensions","pkg","preserveSymlinks","useBrowserOverrides","pkgPath","pkgRoot","packageInfo","packageJson","Object","assign","packageJsonPath","root","resolvedMainField","browserMappedMain","resolvedEntryPoint","overriddenMain","i","field","main","internalPackageInfo","cachedPkg","hasModuleSideEffects","hasPackageEntry","packageBrowserField","keys","reduce","resolved","absoluteKey","subBrowser","ext","browserMap","hasOwnProperty","packageSideEffects","sideEffects","Array","isArray","normalizeInput","input","values","resolveImportSpecifiers","importSpecifierList","resolveOptions","promise","builtins","Set","ES6_BROWSER_EMPTY","nullFn","defaults","customResolveOptions","dedupe","resolveOnly","nodeResolve","opts","jail","warnings","packageInfoCache","idToPackageInfo","isPreferBuiltinsSet","preferBuiltins","rootDir","process","cwd","rollupOptions","only","push","importee","includes","map","pattern","RegExp","normalized","replace","browserMapCache","name","buildStart","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","next","warning","warn","return","generateBundle","importer","_this","test","basedir","resolvedImportee","browserImportee","parts","shift","some","filter","packageFilter","match","importeeIsBuiltin","prototype","call","fileExists","trim","modulesOnly","moduleSideEffects","load","getPackageInfoForId"],"mappings":"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","sourcesContent":["import { dirname, resolve, extname, normalize, sep } from 'path';\nimport builtinList from 'builtin-modules';\nimport isModule from 'is-module';\nimport fs, { realpathSync } from 'fs';\nimport { promisify } from 'util';\nimport { createFilter } from '@rollup/pluginutils';\nimport resolveModule from 'resolve';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nconst exists = promisify(fs.exists);\nconst readFile = promisify(fs.readFile);\nconst realpath = promisify(fs.realpath);\nconst stat = promisify(fs.stat);\n\nconst onError = error => {\n  if (error.code === 'ENOENT') {\n    return false;\n  }\n\n  throw error;\n};\n\nconst makeCache = fn => {\n  const cache = new Map();\n\n  const wrapped =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(function* (param, done) {\n      if (cache.has(param) === false) {\n        cache.set(param, fn(param).catch(err => {\n          cache.delete(param);\n          throw err;\n        }));\n      }\n\n      try {\n        const result = cache.get(param);\n        const value = yield result;\n        return done(null, value);\n      } catch (error) {\n        return done(error);\n      }\n    });\n\n    return function wrapped(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  wrapped.clear = () => cache.clear();\n\n  return wrapped;\n};\n\nconst isDirCached = makeCache(\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(function* (file) {\n    try {\n      const stats = yield stat(file);\n      return stats.isDirectory();\n    } catch (error) {\n      return onError(error);\n    }\n  });\n\n  return function (_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nconst isFileCached = makeCache(\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(function* (file) {\n    try {\n      const stats = yield stat(file);\n      return stats.isFile();\n    } catch (error) {\n      return onError(error);\n    }\n  });\n\n  return function (_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nconst readCachedFile = makeCache(readFile);\n\nconst resolveId = promisify(resolveModule); // returns the imported package name for bare module imports\n\nfunction getPackageName(id) {\n  if (id.startsWith('.') || id.startsWith('/')) {\n    return null;\n  }\n\n  const split = id.split('/'); // @my-scope/my-package/foo.js -> @my-scope/my-package\n  // @my-scope/my-package -> @my-scope/my-package\n\n  if (split[0][0] === '@') {\n    return `${split[0]}/${split[1]}`;\n  } // my-package/foo.js -> my-package\n  // my-package -> my-package\n\n\n  return split[0];\n}\nfunction getMainFields(options) {\n  let mainFields;\n\n  if (options.mainFields) {\n    mainFields = options.mainFields;\n  } else {\n    mainFields = ['module', 'main'];\n  }\n\n  if (options.browser && mainFields.indexOf('browser') === -1) {\n    return ['browser'].concat(mainFields);\n  }\n\n  if (!mainFields.length) {\n    throw new Error('Please ensure at least one `mainFields` value is specified');\n  }\n\n  return mainFields;\n}\nfunction getPackageInfo(options) {\n  const cache = options.cache,\n        extensions = options.extensions,\n        pkg = options.pkg,\n        mainFields = options.mainFields,\n        preserveSymlinks = options.preserveSymlinks,\n        useBrowserOverrides = options.useBrowserOverrides;\n  let pkgPath = options.pkgPath;\n\n  if (cache.has(pkgPath)) {\n    return cache.get(pkgPath);\n  } // browserify/resolve doesn't realpath paths returned in its packageFilter callback\n\n\n  if (!preserveSymlinks) {\n    pkgPath = realpathSync(pkgPath);\n  }\n\n  const pkgRoot = dirname(pkgPath);\n  const packageInfo = {\n    // copy as we are about to munge the `main` field of `pkg`.\n    packageJson: Object.assign({}, pkg),\n    // path to package.json file\n    packageJsonPath: pkgPath,\n    // directory containing the package.json\n    root: pkgRoot,\n    // which main field was used during resolution of this module (main, module, or browser)\n    resolvedMainField: 'main',\n    // whether the browser map was used to resolve the entry point to this module\n    browserMappedMain: false,\n    // the entry point of the module with respect to the selected main field and any\n    // relevant browser mappings.\n    resolvedEntryPoint: ''\n  };\n  let overriddenMain = false;\n\n  for (let i = 0; i < mainFields.length; i++) {\n    const field = mainFields[i];\n\n    if (typeof pkg[field] === 'string') {\n      pkg.main = pkg[field];\n      packageInfo.resolvedMainField = field;\n      overriddenMain = true;\n      break;\n    }\n  }\n\n  const internalPackageInfo = {\n    cachedPkg: pkg,\n    hasModuleSideEffects: () => null,\n    hasPackageEntry: overriddenMain !== false || mainFields.indexOf('main') !== -1,\n    packageBrowserField: useBrowserOverrides && typeof pkg.browser === 'object' && Object.keys(pkg.browser).reduce((browser, key) => {\n      let resolved = pkg.browser[key];\n\n      if (resolved && resolved[0] === '.') {\n        resolved = resolve(pkgRoot, resolved);\n      }\n      /* eslint-disable no-param-reassign */\n\n\n      browser[key] = resolved;\n\n      if (key[0] === '.') {\n        const absoluteKey = resolve(pkgRoot, key);\n        browser[absoluteKey] = resolved;\n\n        if (!extname(key)) {\n          extensions.reduce((subBrowser, ext) => {\n            subBrowser[absoluteKey + ext] = subBrowser[key];\n            return subBrowser;\n          }, browser);\n        }\n      }\n\n      return browser;\n    }, {}),\n    packageInfo\n  };\n  const browserMap = internalPackageInfo.packageBrowserField;\n\n  if (useBrowserOverrides && typeof pkg.browser === 'object' && // eslint-disable-next-line no-prototype-builtins\n  browserMap.hasOwnProperty(pkg.main)) {\n    packageInfo.resolvedEntryPoint = browserMap[pkg.main];\n    packageInfo.browserMappedMain = true;\n  } else {\n    // index.node is technically a valid default entrypoint as well...\n    packageInfo.resolvedEntryPoint = resolve(pkgRoot, pkg.main || 'index.js');\n    packageInfo.browserMappedMain = false;\n  }\n\n  const packageSideEffects = pkg.sideEffects;\n\n  if (typeof packageSideEffects === 'boolean') {\n    internalPackageInfo.hasModuleSideEffects = () => packageSideEffects;\n  } else if (Array.isArray(packageSideEffects)) {\n    internalPackageInfo.hasModuleSideEffects = createFilter(packageSideEffects, null, {\n      resolve: pkgRoot\n    });\n  }\n\n  cache.set(pkgPath, internalPackageInfo);\n  return internalPackageInfo;\n}\nfunction normalizeInput(input) {\n  if (Array.isArray(input)) {\n    return input;\n  } else if (typeof input === 'object') {\n    return Object.values(input);\n  } // otherwise it's a string\n\n\n  return input;\n} // Resolve module specifiers in order. Promise resolves to the first module that resolves\n// successfully, or the error that resulted from the last attempted module resolution.\n\nfunction resolveImportSpecifiers(importSpecifierList, resolveOptions) {\n  let promise = Promise.resolve();\n\n  for (let i = 0; i < importSpecifierList.length; i++) {\n    promise = promise.then(value => {\n      // if we've already resolved to something, just return it.\n      if (value) {\n        return value;\n      }\n\n      return resolveId(importSpecifierList[i], resolveOptions).then(result => {\n        if (!resolveOptions.preserveSymlinks) {\n          result = realpathSync(result);\n        }\n\n        return result;\n      });\n    });\n\n    if (i < importSpecifierList.length - 1) {\n      // swallow MODULE_NOT_FOUND errors from all but the last resolution\n      promise = promise.catch(error => {\n        if (error.code !== 'MODULE_NOT_FOUND') {\n          throw error;\n        }\n      });\n    }\n  }\n\n  return promise;\n}\n\nconst builtins = new Set(builtinList);\nconst ES6_BROWSER_EMPTY = '\\0node-resolve:empty.js';\n\nconst nullFn = () => null;\n\nconst defaults = {\n  customResolveOptions: {},\n  dedupe: [],\n  // It's important that .mjs is listed before .js so that Rollup will interpret npm modules\n  // which deploy both ESM .mjs and CommonJS .js files as ESM.\n  extensions: ['.mjs', '.js', '.json', '.node'],\n  resolveOnly: []\n};\nfunction nodeResolve(opts = {}) {\n  const options = Object.assign({}, defaults, opts);\n  const customResolveOptions = options.customResolveOptions,\n        extensions = options.extensions,\n        jail = options.jail;\n  const warnings = [];\n  const packageInfoCache = new Map();\n  const idToPackageInfo = new Map();\n  const mainFields = getMainFields(options);\n  const useBrowserOverrides = mainFields.indexOf('browser') !== -1;\n  const isPreferBuiltinsSet = options.preferBuiltins === true || options.preferBuiltins === false;\n  const preferBuiltins = isPreferBuiltinsSet ? options.preferBuiltins : true;\n  const rootDir = options.rootDir || process.cwd();\n  let dedupe = options.dedupe;\n  let rollupOptions;\n\n  if (options.only) {\n    warnings.push('node-resolve: The `only` options is deprecated, please use `resolveOnly`');\n    options.resolveOnly = options.only;\n  }\n\n  if (typeof dedupe !== 'function') {\n    dedupe = importee => options.dedupe.includes(importee) || options.dedupe.includes(getPackageName(importee));\n  }\n\n  const resolveOnly = options.resolveOnly.map(pattern => {\n    if (pattern instanceof RegExp) {\n      return pattern;\n    }\n\n    const normalized = pattern.replace(/[\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    return new RegExp(`^${normalized}$`);\n  });\n  const browserMapCache = new Map();\n  let preserveSymlinks;\n  return {\n    name: 'node-resolve',\n\n    buildStart(options) {\n      rollupOptions = options;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = warnings[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          const warning = _step.value;\n          this.warn(warning);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      preserveSymlinks = options.preserveSymlinks;\n    },\n\n    generateBundle() {\n      readCachedFile.clear();\n      isFileCached.clear();\n      isDirCached.clear();\n    },\n\n    resolveId(importee, importer) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        if (importee === ES6_BROWSER_EMPTY) {\n          return importee;\n        } // ignore IDs with null character, these belong to other plugins\n\n\n        if (/\\0/.test(importee)) return null;\n        const basedir = !importer || dedupe(importee) ? rootDir : dirname(importer); // https://github.com/defunctzombie/package-browser-field-spec\n\n        const browser = browserMapCache.get(importer);\n\n        if (useBrowserOverrides && browser) {\n          const resolvedImportee = resolve(basedir, importee);\n\n          if (browser[importee] === false || browser[resolvedImportee] === false) {\n            return ES6_BROWSER_EMPTY;\n          }\n\n          const browserImportee = browser[importee] || browser[resolvedImportee] || browser[`${resolvedImportee}.js`] || browser[`${resolvedImportee}.json`];\n\n          if (browserImportee) {\n            importee = browserImportee;\n          }\n        }\n\n        const parts = importee.split(/[/\\\\]/);\n        let id = parts.shift();\n\n        if (id[0] === '@' && parts.length > 0) {\n          // scoped packages\n          id += `/${parts.shift()}`;\n        } else if (id[0] === '.') {\n          // an import relative to the parent dir of the importer\n          id = resolve(basedir, importee);\n        }\n\n        const input = normalizeInput(rollupOptions.input);\n\n        if (resolveOnly.length && !resolveOnly.some(pattern => pattern.test(id))) {\n          if (input.includes(id)) {\n            return null;\n          }\n\n          return false;\n        }\n\n        let hasModuleSideEffects = nullFn;\n        let hasPackageEntry = true;\n        let packageBrowserField = false;\n        let packageInfo;\n\n        const filter = (pkg, pkgPath) => {\n          const info = getPackageInfo({\n            cache: packageInfoCache,\n            extensions,\n            pkg,\n            pkgPath,\n            mainFields,\n            preserveSymlinks,\n            useBrowserOverrides\n          });\n          packageInfo = info.packageInfo;\n          hasModuleSideEffects = info.hasModuleSideEffects;\n          hasPackageEntry = info.hasPackageEntry;\n          packageBrowserField = info.packageBrowserField;\n          return info.cachedPkg;\n        };\n\n        let resolveOptions = {\n          basedir,\n          packageFilter: filter,\n          readFile: readCachedFile,\n          isFile: isFileCached,\n          isDirectory: isDirCached,\n          extensions\n        };\n\n        if (preserveSymlinks !== undefined) {\n          resolveOptions.preserveSymlinks = preserveSymlinks;\n        }\n\n        const importSpecifierList = [];\n\n        if (importer === undefined && !importee[0].match(/^\\.?\\.?\\//)) {\n          // For module graph roots (i.e. when importer is undefined), we\n          // need to handle 'path fragments` like `foo/bar` that are commonly\n          // found in rollup config files. If importee doesn't look like a\n          // relative or absolute path, we make it relative and attempt to\n          // resolve it. If we don't find anything, we try resolving it as we\n          // got it.\n          importSpecifierList.push(`./${importee}`);\n        }\n\n        const importeeIsBuiltin = builtins.has(importee);\n\n        if (importeeIsBuiltin && (!preferBuiltins || !isPreferBuiltinsSet)) {\n          // The `resolve` library will not resolve packages with the same\n          // name as a node built-in module. If we're resolving something\n          // that's a builtin, and we don't prefer to find built-ins, we\n          // first try to look up a local module with that name. If we don't\n          // find anything, we resolve the builtin which just returns back\n          // the built-in's name.\n          importSpecifierList.push(`${importee}/`);\n        }\n\n        importSpecifierList.push(importee);\n        resolveOptions = Object.assign(resolveOptions, customResolveOptions);\n\n        try {\n          let resolved = yield resolveImportSpecifiers(importSpecifierList, resolveOptions);\n\n          if (resolved && packageBrowserField) {\n            if (Object.prototype.hasOwnProperty.call(packageBrowserField, resolved)) {\n              if (!packageBrowserField[resolved]) {\n                browserMapCache.set(resolved, packageBrowserField);\n                return ES6_BROWSER_EMPTY;\n              }\n\n              resolved = packageBrowserField[resolved];\n            }\n\n            browserMapCache.set(resolved, packageBrowserField);\n          }\n\n          if (hasPackageEntry && !preserveSymlinks && resolved) {\n            const fileExists = yield exists(resolved);\n\n            if (fileExists) {\n              resolved = yield realpath(resolved);\n            }\n          }\n\n          idToPackageInfo.set(resolved, packageInfo);\n\n          if (hasPackageEntry) {\n            if (builtins.has(resolved) && preferBuiltins && isPreferBuiltinsSet) {\n              return null;\n            } else if (importeeIsBuiltin && preferBuiltins) {\n              if (!isPreferBuiltinsSet) {\n                _this.warn(`preferring built-in module '${importee}' over local alternative at '${resolved}', pass 'preferBuiltins: false' to disable this behavior or 'preferBuiltins: true' to disable this warning`);\n              }\n\n              return null;\n            } else if (jail && resolved.indexOf(normalize(jail.trim(sep))) !== 0) {\n              return null;\n            }\n          }\n\n          if (resolved && options.modulesOnly) {\n            const code = yield readFile(resolved, 'utf-8');\n\n            if (isModule(code)) {\n              return {\n                id: resolved,\n                moduleSideEffects: hasModuleSideEffects(resolved)\n              };\n            }\n\n            return null;\n          }\n\n          const result = {\n            id: resolved,\n            moduleSideEffects: hasModuleSideEffects(resolved)\n          };\n          return result;\n        } catch (error) {\n          return null;\n        }\n      })();\n    },\n\n    load(importee) {\n      if (importee === ES6_BROWSER_EMPTY) {\n        return 'export default {};';\n      }\n\n      return null;\n    },\n\n    getPackageInfoForId(id) {\n      return idToPackageInfo.get(id);\n    }\n\n  };\n}\n\nexport default nodeResolve;\n"]},"metadata":{},"sourceType":"module"}