{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateRegexpuOptions = generateRegexpuOptions;\n\nvar _features = require(\"./features\");\n\nfunction generateRegexpuOptions(node, features) {\n  let useUnicodeFlag = false,\n      dotAllFlag = false,\n      unicodePropertyEscape = false,\n      namedGroup = false;\n  const {\n    flags,\n    pattern\n  } = node;\n  const flagsIncludesU = flags.includes(\"u\");\n\n  if (flagsIncludesU) {\n    if (!(0, _features.hasFeature)(features, _features.FEATURES.unicodeFlag)) {\n      useUnicodeFlag = true;\n    }\n\n    if ((0, _features.hasFeature)(features, _features.FEATURES.unicodePropertyEscape) && /\\\\[pP]{/.test(pattern)) {\n      unicodePropertyEscape = true;\n    }\n  }\n\n  if ((0, _features.hasFeature)(features, _features.FEATURES.dotAllFlag) && flags.indexOf(\"s\") >= 0) {\n    dotAllFlag = true;\n  }\n\n  if ((0, _features.hasFeature)(features, _features.FEATURES.namedCaptureGroups) && /\\(\\?<(?![=!])/.test(pattern)) {\n    namedGroup = true;\n  }\n\n  if (!namedGroup && !unicodePropertyEscape && !dotAllFlag && (!flagsIncludesU || useUnicodeFlag)) {\n    return null;\n  }\n\n  if (flagsIncludesU && flags.indexOf(\"s\") >= 0) {\n    dotAllFlag = true;\n  }\n\n  return {\n    useUnicodeFlag,\n    onNamedGroup: () => {},\n    namedGroup,\n    unicodePropertyEscape,\n    dotAllFlag,\n    lookbehind: true\n  };\n}","map":{"version":3,"sources":["/home/agatha/open/node_modules/@babel/helper-create-regexp-features-plugin/lib/util.js"],"names":["Object","defineProperty","exports","value","generateRegexpuOptions","_features","require","node","features","useUnicodeFlag","dotAllFlag","unicodePropertyEscape","namedGroup","flags","pattern","flagsIncludesU","includes","hasFeature","FEATURES","unicodeFlag","test","indexOf","namedCaptureGroups","onNamedGroup","lookbehind"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,sBAAR,GAAiCA,sBAAjC;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AAEA,SAASF,sBAAT,CAAgCG,IAAhC,EAAsCC,QAAtC,EAAgD;AAC9C,MAAIC,cAAc,GAAG,KAArB;AAAA,MACIC,UAAU,GAAG,KADjB;AAAA,MAEIC,qBAAqB,GAAG,KAF5B;AAAA,MAGIC,UAAU,GAAG,KAHjB;AAIA,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA;AAFI,MAGFP,IAHJ;AAIA,QAAMQ,cAAc,GAAGF,KAAK,CAACG,QAAN,CAAe,GAAf,CAAvB;;AAEA,MAAID,cAAJ,EAAoB;AAClB,QAAI,CAAC,CAAC,GAAGV,SAAS,CAACY,UAAd,EAA0BT,QAA1B,EAAoCH,SAAS,CAACa,QAAV,CAAmBC,WAAvD,CAAL,EAA0E;AACxEV,MAAAA,cAAc,GAAG,IAAjB;AACD;;AAED,QAAI,CAAC,GAAGJ,SAAS,CAACY,UAAd,EAA0BT,QAA1B,EAAoCH,SAAS,CAACa,QAAV,CAAmBP,qBAAvD,KAAiF,UAAUS,IAAV,CAAeN,OAAf,CAArF,EAA8G;AAC5GH,MAAAA,qBAAqB,GAAG,IAAxB;AACD;AACF;;AAED,MAAI,CAAC,GAAGN,SAAS,CAACY,UAAd,EAA0BT,QAA1B,EAAoCH,SAAS,CAACa,QAAV,CAAmBR,UAAvD,KAAsEG,KAAK,CAACQ,OAAN,CAAc,GAAd,KAAsB,CAAhG,EAAmG;AACjGX,IAAAA,UAAU,GAAG,IAAb;AACD;;AAED,MAAI,CAAC,GAAGL,SAAS,CAACY,UAAd,EAA0BT,QAA1B,EAAoCH,SAAS,CAACa,QAAV,CAAmBI,kBAAvD,KAA8E,gBAAgBF,IAAhB,CAAqBN,OAArB,CAAlF,EAAiH;AAC/GF,IAAAA,UAAU,GAAG,IAAb;AACD;;AAED,MAAI,CAACA,UAAD,IAAe,CAACD,qBAAhB,IAAyC,CAACD,UAA1C,KAAyD,CAACK,cAAD,IAAmBN,cAA5E,CAAJ,EAAiG;AAC/F,WAAO,IAAP;AACD;;AAED,MAAIM,cAAc,IAAIF,KAAK,CAACQ,OAAN,CAAc,GAAd,KAAsB,CAA5C,EAA+C;AAC7CX,IAAAA,UAAU,GAAG,IAAb;AACD;;AAED,SAAO;AACLD,IAAAA,cADK;AAELc,IAAAA,YAAY,EAAE,MAAM,CAAE,CAFjB;AAGLX,IAAAA,UAHK;AAILD,IAAAA,qBAJK;AAKLD,IAAAA,UALK;AAMLc,IAAAA,UAAU,EAAE;AANP,GAAP;AAQD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateRegexpuOptions = generateRegexpuOptions;\n\nvar _features = require(\"./features\");\n\nfunction generateRegexpuOptions(node, features) {\n  let useUnicodeFlag = false,\n      dotAllFlag = false,\n      unicodePropertyEscape = false,\n      namedGroup = false;\n  const {\n    flags,\n    pattern\n  } = node;\n  const flagsIncludesU = flags.includes(\"u\");\n\n  if (flagsIncludesU) {\n    if (!(0, _features.hasFeature)(features, _features.FEATURES.unicodeFlag)) {\n      useUnicodeFlag = true;\n    }\n\n    if ((0, _features.hasFeature)(features, _features.FEATURES.unicodePropertyEscape) && /\\\\[pP]{/.test(pattern)) {\n      unicodePropertyEscape = true;\n    }\n  }\n\n  if ((0, _features.hasFeature)(features, _features.FEATURES.dotAllFlag) && flags.indexOf(\"s\") >= 0) {\n    dotAllFlag = true;\n  }\n\n  if ((0, _features.hasFeature)(features, _features.FEATURES.namedCaptureGroups) && /\\(\\?<(?![=!])/.test(pattern)) {\n    namedGroup = true;\n  }\n\n  if (!namedGroup && !unicodePropertyEscape && !dotAllFlag && (!flagsIncludesU || useUnicodeFlag)) {\n    return null;\n  }\n\n  if (flagsIncludesU && flags.indexOf(\"s\") >= 0) {\n    dotAllFlag = true;\n  }\n\n  return {\n    useUnicodeFlag,\n    onNamedGroup: () => {},\n    namedGroup,\n    unicodePropertyEscape,\n    dotAllFlag,\n    lookbehind: true\n  };\n}"]},"metadata":{},"sourceType":"script"}