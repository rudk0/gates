{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexports.getImportSource = getImportSource;\nexports.createDynamicImportTransform = createDynamicImportTransform;\n\nfunction getImportSource(t, callNode) {\n  var importArguments = callNode.arguments;\n\n  var _importArguments = _slicedToArray(importArguments, 1),\n      importPath = _importArguments[0];\n\n  var isString = t.isStringLiteral(importPath) || t.isTemplateLiteral(importPath);\n\n  if (isString) {\n    t.removeComments(importPath);\n    return importPath;\n  }\n\n  return t.templateLiteral([t.templateElement({\n    raw: '',\n    cooked: ''\n  }), t.templateElement({\n    raw: '',\n    cooked: ''\n  }, true)], importArguments);\n}\n\nfunction createDynamicImportTransform(_ref) {\n  var template = _ref.template,\n      t = _ref.types;\n  var builders = {\n    'static': {\n      interop: template('Promise.resolve().then(() => INTEROP(require(SOURCE)))'),\n      noInterop: template('Promise.resolve().then(() => require(SOURCE))')\n    },\n    dynamic: {\n      interop: template('Promise.resolve(SOURCE).then(s => INTEROP(require(s)))'),\n      noInterop: template('Promise.resolve(SOURCE).then(s => require(s))')\n    }\n  };\n  var visited = typeof WeakSet === 'function' && new WeakSet();\n\n  var isString = function isString(node) {\n    return t.isStringLiteral(node) || t.isTemplateLiteral(node) && node.expressions.length === 0;\n  };\n\n  return function (context, path) {\n    if (visited) {\n      if (visited.has(path)) {\n        return;\n      }\n\n      visited.add(path);\n    }\n\n    var SOURCE = getImportSource(t, path.parent);\n    var builder = isString(SOURCE) ? builders['static'] : builders.dynamic;\n    var newImport = context.opts.noInterop ? builder.noInterop({\n      SOURCE: SOURCE\n    }) : builder.interop({\n      SOURCE: SOURCE,\n      INTEROP: context.addHelper('interopRequireWildcard')\n    });\n    path.parentPath.replaceWith(newImport);\n  };\n}","map":{"version":3,"sources":["/home/agatha/open/node_modules/babel-plugin-dynamic-import-node/lib/utils.js"],"names":["Object","defineProperty","exports","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","getImportSource","createDynamicImportTransform","t","callNode","importArguments","arguments","_importArguments","importPath","isString","isStringLiteral","isTemplateLiteral","removeComments","templateLiteral","templateElement","raw","cooked","_ref","template","types","builders","interop","noInterop","dynamic","visited","WeakSet","node","expressions","context","path","has","add","SOURCE","parent","builder","newImport","opts","INTEROP","addHelper","parentPath","replaceWith"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.getImportSource = getImportSource;\nexports.createDynamicImportTransform = createDynamicImportTransform;\nfunction getImportSource(t, callNode) {\n  var importArguments = callNode.arguments;\n\n  var _importArguments = _slicedToArray(importArguments, 1),\n      importPath = _importArguments[0];\n\n  var isString = t.isStringLiteral(importPath) || t.isTemplateLiteral(importPath);\n  if (isString) {\n    t.removeComments(importPath);\n    return importPath;\n  }\n\n  return t.templateLiteral([t.templateElement({ raw: '', cooked: '' }), t.templateElement({ raw: '', cooked: '' }, true)], importArguments);\n}\n\nfunction createDynamicImportTransform(_ref) {\n  var template = _ref.template,\n      t = _ref.types;\n\n  var builders = {\n    'static': {\n      interop: template('Promise.resolve().then(() => INTEROP(require(SOURCE)))'),\n      noInterop: template('Promise.resolve().then(() => require(SOURCE))')\n    },\n    dynamic: {\n      interop: template('Promise.resolve(SOURCE).then(s => INTEROP(require(s)))'),\n      noInterop: template('Promise.resolve(SOURCE).then(s => require(s))')\n    }\n  };\n\n  var visited = typeof WeakSet === 'function' && new WeakSet();\n\n  var isString = function isString(node) {\n    return t.isStringLiteral(node) || t.isTemplateLiteral(node) && node.expressions.length === 0;\n  };\n\n  return function (context, path) {\n    if (visited) {\n      if (visited.has(path)) {\n        return;\n      }\n      visited.add(path);\n    }\n\n    var SOURCE = getImportSource(t, path.parent);\n\n    var builder = isString(SOURCE) ? builders['static'] : builders.dynamic;\n\n    var newImport = context.opts.noInterop ? builder.noInterop({ SOURCE: SOURCE }) : builder.interop({ SOURCE: SOURCE, INTEROP: context.addHelper('interopRequireWildcard') });\n\n    path.parentPath.replaceWith(newImport);\n  };\n}"]},"metadata":{},"sourceType":"script"}