{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _utils = require(\"../../utils\");\n\nfunction isRegeneratorSource(source) {\n  return source === \"regenerator-runtime/runtime\";\n}\n\nfunction _default() {\n  const visitor = {\n    ImportDeclaration(path) {\n      if (isRegeneratorSource((0, _utils.getImportSource)(path))) {\n        this.regeneratorImportExcluded = true;\n        path.remove();\n      }\n    },\n\n    Program(path) {\n      path.get(\"body\").forEach(bodyPath => {\n        if (isRegeneratorSource((0, _utils.getRequireSource)(bodyPath))) {\n          this.regeneratorImportExcluded = true;\n          bodyPath.remove();\n        }\n      });\n    }\n\n  };\n  return {\n    name: \"regenerator-entry\",\n    visitor,\n\n    pre() {\n      this.regeneratorImportExcluded = false;\n    },\n\n    post() {\n      if (this.opts.debug && this.regeneratorImportExcluded) {\n        let filename = this.file.opts.filename;\n\n        if (process.env.BABEL_ENV === \"test\") {\n          filename = filename.replace(/\\\\/g, \"/\");\n        }\n\n        console.log(`\\n[${filename}] Based on your targets, regenerator-runtime import excluded.`);\n      }\n    }\n\n  };\n}","map":{"version":3,"sources":["/home/agatha/open/node_modules/@babel/preset-env/lib/polyfills/regenerator/entry-plugin.js"],"names":["Object","defineProperty","exports","value","default","_default","_utils","require","isRegeneratorSource","source","visitor","ImportDeclaration","path","getImportSource","regeneratorImportExcluded","remove","Program","get","forEach","bodyPath","getRequireSource","name","pre","post","opts","debug","filename","file","process","env","BABEL_ENV","replace","console","log"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;;AAEA,SAASC,mBAAT,CAA6BC,MAA7B,EAAqC;AACnC,SAAOA,MAAM,KAAK,6BAAlB;AACD;;AAED,SAASJ,QAAT,GAAoB;AAClB,QAAMK,OAAO,GAAG;AACdC,IAAAA,iBAAiB,CAACC,IAAD,EAAO;AACtB,UAAIJ,mBAAmB,CAAC,CAAC,GAAGF,MAAM,CAACO,eAAX,EAA4BD,IAA5B,CAAD,CAAvB,EAA4D;AAC1D,aAAKE,yBAAL,GAAiC,IAAjC;AACAF,QAAAA,IAAI,CAACG,MAAL;AACD;AACF,KANa;;AAQdC,IAAAA,OAAO,CAACJ,IAAD,EAAO;AACZA,MAAAA,IAAI,CAACK,GAAL,CAAS,MAAT,EAAiBC,OAAjB,CAAyBC,QAAQ,IAAI;AACnC,YAAIX,mBAAmB,CAAC,CAAC,GAAGF,MAAM,CAACc,gBAAX,EAA6BD,QAA7B,CAAD,CAAvB,EAAiE;AAC/D,eAAKL,yBAAL,GAAiC,IAAjC;AACAK,UAAAA,QAAQ,CAACJ,MAAT;AACD;AACF,OALD;AAMD;;AAfa,GAAhB;AAkBA,SAAO;AACLM,IAAAA,IAAI,EAAE,mBADD;AAELX,IAAAA,OAFK;;AAILY,IAAAA,GAAG,GAAG;AACJ,WAAKR,yBAAL,GAAiC,KAAjC;AACD,KANI;;AAQLS,IAAAA,IAAI,GAAG;AACL,UAAI,KAAKC,IAAL,CAAUC,KAAV,IAAmB,KAAKX,yBAA5B,EAAuD;AACrD,YAAIY,QAAQ,GAAG,KAAKC,IAAL,CAAUH,IAAV,CAAeE,QAA9B;;AAEA,YAAIE,OAAO,CAACC,GAAR,CAAYC,SAAZ,KAA0B,MAA9B,EAAsC;AACpCJ,UAAAA,QAAQ,GAAGA,QAAQ,CAACK,OAAT,CAAiB,KAAjB,EAAwB,GAAxB,CAAX;AACD;;AAEDC,QAAAA,OAAO,CAACC,GAAR,CAAa,MAAKP,QAAS,+DAA3B;AACD;AACF;;AAlBI,GAAP;AAqBD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _utils = require(\"../../utils\");\n\nfunction isRegeneratorSource(source) {\n  return source === \"regenerator-runtime/runtime\";\n}\n\nfunction _default() {\n  const visitor = {\n    ImportDeclaration(path) {\n      if (isRegeneratorSource((0, _utils.getImportSource)(path))) {\n        this.regeneratorImportExcluded = true;\n        path.remove();\n      }\n    },\n\n    Program(path) {\n      path.get(\"body\").forEach(bodyPath => {\n        if (isRegeneratorSource((0, _utils.getRequireSource)(bodyPath))) {\n          this.regeneratorImportExcluded = true;\n          bodyPath.remove();\n        }\n      });\n    }\n\n  };\n  return {\n    name: \"regenerator-entry\",\n    visitor,\n\n    pre() {\n      this.regeneratorImportExcluded = false;\n    },\n\n    post() {\n      if (this.opts.debug && this.regeneratorImportExcluded) {\n        let filename = this.file.opts.filename;\n\n        if (process.env.BABEL_ENV === \"test\") {\n          filename = filename.replace(/\\\\/g, \"/\");\n        }\n\n        console.log(`\\n[${filename}] Based on your targets, regenerator-runtime import excluded.`);\n      }\n    }\n\n  };\n}"]},"metadata":{},"sourceType":"script"}