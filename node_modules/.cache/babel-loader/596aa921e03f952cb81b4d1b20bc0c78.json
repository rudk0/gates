{"ast":null,"code":"\"use strict\";\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n// All workbox references must come after the workboxSWImport/importScripts block\n\nmodule.exports = `/**\n * Welcome to your Workbox-powered service worker!\n *\n * You'll need to register this file in your web app and you should\n * disable HTTP caching for this file too.\n * See https://goo.gl/nhQhGp\n *\n * The rest of the code is auto-generated. Please don't update this file\n * directly; instead, make changes to your Workbox build configuration\n * and re-run your build process.\n * See https://goo.gl/2aRDsh\n */\n\n<% if (workboxSWImport) { %>\nimportScripts(<%= JSON.stringify(workboxSWImport) %>);\n<% if (modulePathPrefix) { %>workbox.setConfig({modulePathPrefix: <%= JSON.stringify(modulePathPrefix) %>});<% } %>\n<% } %>\n<% if (importScripts) { %>\nimportScripts(\n  <%= importScripts.map(JSON.stringify).join(',\\\\n  ') %>\n);\n<% } %>\n\n<% if (navigationPreload) { %>workbox.navigationPreload.enable();<% } %>\n\n<% if (cacheId) { %>workbox.core.setCacheNameDetails({prefix: <%= JSON.stringify(cacheId) %>});<% } %>\n\n<% if (skipWaiting) { %>\nworkbox.core.skipWaiting();\n<% } else { %>\nself.addEventListener('message', (event) => {\n  if (event.data && event.data.type === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }\n});\n<% } %>\n<% if (clientsClaim) { %>workbox.core.clientsClaim();<% } %>\n\n<% if (Array.isArray(manifestEntries)) {%>\n/**\n * The workboxSW.precacheAndRoute() method efficiently caches and responds to\n * requests for URLs in the manifest.\n * See https://goo.gl/S9QRab\n */\nself.__precacheManifest = <%= JSON.stringify(manifestEntries, null, 2) %>.concat(self.__precacheManifest || []);\nworkbox.precaching.precacheAndRoute(self.__precacheManifest, <%= precacheOptionsString %>);\n<% } else { %>\nif (Array.isArray(self.__precacheManifest)) {\n  workbox.precaching.precacheAndRoute(self.__precacheManifest, <%= precacheOptionsString %>);\n}\n<% } %>\n<% if (cleanupOutdatedCaches) { %>workbox.precaching.cleanupOutdatedCaches();<% } %>\n<% if (navigateFallback) { %>workbox.routing.registerNavigationRoute(workbox.precaching.getCacheKeyForURL(<%= JSON.stringify(navigateFallback) %>)<% if (navigateFallbackWhitelist || navigateFallbackBlacklist) { %>, {\n  <% if (navigateFallbackWhitelist) { %>whitelist: [<%= navigateFallbackWhitelist %>],<% } %>\n  <% if (navigateFallbackBlacklist) { %>blacklist: [<%= navigateFallbackBlacklist %>],<% } %>\n}<% } %>);<% } %>\n\n<% if (runtimeCaching) { runtimeCaching.forEach(runtimeCachingString => {%><%= runtimeCachingString %><% });} %>\n\n<% if (offlineAnalyticsConfigString) { %>workbox.googleAnalytics.initialize(<%= offlineAnalyticsConfigString %>);<% } %>`;","map":{"version":3,"sources":["/home/agatha/open/node_modules/workbox-build/build/templates/sw-template.js"],"names":["module","exports"],"mappings":"AAAA;AAEA;;;;;;;AAOA;;AACAA,MAAM,CAACC,OAAP,GAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yHAAlB","sourcesContent":["\"use strict\";\n\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n// All workbox references must come after the workboxSWImport/importScripts block\nmodule.exports = `/**\n * Welcome to your Workbox-powered service worker!\n *\n * You'll need to register this file in your web app and you should\n * disable HTTP caching for this file too.\n * See https://goo.gl/nhQhGp\n *\n * The rest of the code is auto-generated. Please don't update this file\n * directly; instead, make changes to your Workbox build configuration\n * and re-run your build process.\n * See https://goo.gl/2aRDsh\n */\n\n<% if (workboxSWImport) { %>\nimportScripts(<%= JSON.stringify(workboxSWImport) %>);\n<% if (modulePathPrefix) { %>workbox.setConfig({modulePathPrefix: <%= JSON.stringify(modulePathPrefix) %>});<% } %>\n<% } %>\n<% if (importScripts) { %>\nimportScripts(\n  <%= importScripts.map(JSON.stringify).join(',\\\\n  ') %>\n);\n<% } %>\n\n<% if (navigationPreload) { %>workbox.navigationPreload.enable();<% } %>\n\n<% if (cacheId) { %>workbox.core.setCacheNameDetails({prefix: <%= JSON.stringify(cacheId) %>});<% } %>\n\n<% if (skipWaiting) { %>\nworkbox.core.skipWaiting();\n<% } else { %>\nself.addEventListener('message', (event) => {\n  if (event.data && event.data.type === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }\n});\n<% } %>\n<% if (clientsClaim) { %>workbox.core.clientsClaim();<% } %>\n\n<% if (Array.isArray(manifestEntries)) {%>\n/**\n * The workboxSW.precacheAndRoute() method efficiently caches and responds to\n * requests for URLs in the manifest.\n * See https://goo.gl/S9QRab\n */\nself.__precacheManifest = <%= JSON.stringify(manifestEntries, null, 2) %>.concat(self.__precacheManifest || []);\nworkbox.precaching.precacheAndRoute(self.__precacheManifest, <%= precacheOptionsString %>);\n<% } else { %>\nif (Array.isArray(self.__precacheManifest)) {\n  workbox.precaching.precacheAndRoute(self.__precacheManifest, <%= precacheOptionsString %>);\n}\n<% } %>\n<% if (cleanupOutdatedCaches) { %>workbox.precaching.cleanupOutdatedCaches();<% } %>\n<% if (navigateFallback) { %>workbox.routing.registerNavigationRoute(workbox.precaching.getCacheKeyForURL(<%= JSON.stringify(navigateFallback) %>)<% if (navigateFallbackWhitelist || navigateFallbackBlacklist) { %>, {\n  <% if (navigateFallbackWhitelist) { %>whitelist: [<%= navigateFallbackWhitelist %>],<% } %>\n  <% if (navigateFallbackBlacklist) { %>blacklist: [<%= navigateFallbackBlacklist %>],<% } %>\n}<% } %>);<% } %>\n\n<% if (runtimeCaching) { runtimeCaching.forEach(runtimeCachingString => {%><%= runtimeCachingString %><% });} %>\n\n<% if (offlineAnalyticsConfigString) { %>workbox.googleAnalytics.initialize(<%= offlineAnalyticsConfigString %>);<% } %>`;"]},"metadata":{},"sourceType":"script"}