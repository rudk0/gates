{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/agatha/open/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\nvar assert = require('assert');\n\nvar path = require('path');\n\nvar errors = require('./errors');\n\nvar filterFiles = require('./filter-files');\n\nvar getCompositeDetails = require('./get-composite-details');\n\nvar getFileDetails = require('./get-file-details');\n\nvar getStringDetails = require('./get-string-details');\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var dontCacheBustURLsMatching, globDirectory, globFollow, globIgnores, globPatterns, globStrict, manifestTransforms, maximumFileSizeToCacheInBytes, modifyURLPrefix, swDest, templatedURLs, warnings, fileDetails, fileSet, _arr, _loop, _i, filteredFiles, _filteredFiles$warnin;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dontCacheBustURLsMatching = _ref2.dontCacheBustURLsMatching, globDirectory = _ref2.globDirectory, globFollow = _ref2.globFollow, globIgnores = _ref2.globIgnores, globPatterns = _ref2.globPatterns, globStrict = _ref2.globStrict, manifestTransforms = _ref2.manifestTransforms, maximumFileSizeToCacheInBytes = _ref2.maximumFileSizeToCacheInBytes, modifyURLPrefix = _ref2.modifyURLPrefix, swDest = _ref2.swDest, templatedURLs = _ref2.templatedURLs;\n            warnings = []; // Initialize to an empty array so that we can still pass something to\n            // filterFiles() and get a normalized output.\n\n            fileDetails = [];\n            fileSet = new Set();\n\n            if (globDirectory) {\n              if (swDest) {\n                // Ensure that we ignore the SW file we're eventually writing to disk.\n                globIgnores.push(\"**/\".concat(path.basename(swDest)));\n              }\n\n              try {\n                fileDetails = globPatterns.reduce(function (accumulated, globPattern) {\n                  var globbedFileDetails = getFileDetails({\n                    globDirectory: globDirectory,\n                    globFollow: globFollow,\n                    globIgnores: globIgnores,\n                    globPattern: globPattern,\n                    globStrict: globStrict\n                  });\n                  globbedFileDetails.forEach(function (fileDetails) {\n                    if (fileSet.has(fileDetails.file)) {\n                      return;\n                    }\n\n                    fileSet.add(fileDetails.file);\n                    accumulated.push(fileDetails);\n                  });\n                  return accumulated;\n                }, []);\n              } catch (error) {\n                // If there's an exception thrown while globbing, then report\n                // it back as a warning, and don't consider it fatal.\n                warnings.push(error.message);\n              }\n            }\n\n            if (templatedURLs) {\n              _arr = Object.keys(templatedURLs);\n\n              _loop = function _loop() {\n                var url = _arr[_i];\n                assert(!fileSet.has(url), errors['templated-url-matches-glob']);\n                var dependencies = templatedURLs[url];\n\n                if (Array.isArray(dependencies)) {\n                  var details = dependencies.reduce(function (previous, globPattern) {\n                    try {\n                      var globbedFileDetails = getFileDetails({\n                        globDirectory: globDirectory,\n                        globFollow: globFollow,\n                        globIgnores: globIgnores,\n                        globPattern: globPattern,\n                        globStrict: globStrict\n                      });\n                      return previous.concat(globbedFileDetails);\n                    } catch (error) {\n                      var debugObj = {};\n                      debugObj[url] = dependencies;\n                      throw new Error(\"\".concat(errors['bad-template-urls-asset'], \" \") + \"'\".concat(globPattern, \"' from '\").concat(JSON.stringify(debugObj), \"':\\n\") + error);\n                    }\n                  }, []);\n                  fileDetails.push(getCompositeDetails(url, details));\n                } else if (typeof dependencies === 'string') {\n                  fileDetails.push(getStringDetails(url, dependencies));\n                }\n              };\n\n              for (_i = 0; _i < _arr.length; _i++) {\n                _loop();\n              }\n            }\n\n            filteredFiles = filterFiles({\n              fileDetails: fileDetails,\n              maximumFileSizeToCacheInBytes: maximumFileSizeToCacheInBytes,\n              modifyURLPrefix: modifyURLPrefix,\n              dontCacheBustURLsMatching: dontCacheBustURLsMatching,\n              manifestTransforms: manifestTransforms\n            });\n\n            if (warnings.length > 0) {\n              (_filteredFiles$warnin = filteredFiles.warnings).push.apply(_filteredFiles$warnin, warnings);\n            }\n\n            return _context.abrupt(\"return\", filteredFiles);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/agatha/open/node_modules/workbox-build/build/lib/get-file-manifest-entries.js"],"names":["_interopRequireDefault","require","_asyncToGenerator2","assert","path","errors","filterFiles","getCompositeDetails","getFileDetails","getStringDetails","module","exports","_ref","default","dontCacheBustURLsMatching","globDirectory","globFollow","globIgnores","globPatterns","globStrict","manifestTransforms","maximumFileSizeToCacheInBytes","modifyURLPrefix","swDest","templatedURLs","warnings","fileDetails","fileSet","Set","push","basename","reduce","accumulated","globPattern","globbedFileDetails","forEach","has","file","add","error","message","_arr","Object","keys","url","_i","dependencies","Array","isArray","details","previous","concat","debugObj","Error","JSON","stringify","length","filteredFiles","_x","apply","arguments"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nconst assert = require('assert');\n\nconst path = require('path');\n\nconst errors = require('./errors');\n\nconst filterFiles = require('./filter-files');\n\nconst getCompositeDetails = require('./get-composite-details');\n\nconst getFileDetails = require('./get-file-details');\n\nconst getStringDetails = require('./get-string-details');\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2.default)(function* ({\n    dontCacheBustURLsMatching,\n    globDirectory,\n    globFollow,\n    globIgnores,\n    globPatterns,\n    globStrict,\n    manifestTransforms,\n    maximumFileSizeToCacheInBytes,\n    modifyURLPrefix,\n    swDest,\n    templatedURLs\n  }) {\n    const warnings = []; // Initialize to an empty array so that we can still pass something to\n    // filterFiles() and get a normalized output.\n\n    let fileDetails = [];\n    const fileSet = new Set();\n\n    if (globDirectory) {\n      if (swDest) {\n        // Ensure that we ignore the SW file we're eventually writing to disk.\n        globIgnores.push(`**/${path.basename(swDest)}`);\n      }\n\n      try {\n        fileDetails = globPatterns.reduce((accumulated, globPattern) => {\n          const globbedFileDetails = getFileDetails({\n            globDirectory,\n            globFollow,\n            globIgnores,\n            globPattern,\n            globStrict\n          });\n          globbedFileDetails.forEach(fileDetails => {\n            if (fileSet.has(fileDetails.file)) {\n              return;\n            }\n\n            fileSet.add(fileDetails.file);\n            accumulated.push(fileDetails);\n          });\n          return accumulated;\n        }, []);\n      } catch (error) {\n        // If there's an exception thrown while globbing, then report\n        // it back as a warning, and don't consider it fatal.\n        warnings.push(error.message);\n      }\n    }\n\n    if (templatedURLs) {\n      var _arr = Object.keys(templatedURLs);\n\n      for (var _i = 0; _i < _arr.length; _i++) {\n        let url = _arr[_i];\n        assert(!fileSet.has(url), errors['templated-url-matches-glob']);\n        const dependencies = templatedURLs[url];\n\n        if (Array.isArray(dependencies)) {\n          const details = dependencies.reduce((previous, globPattern) => {\n            try {\n              const globbedFileDetails = getFileDetails({\n                globDirectory,\n                globFollow,\n                globIgnores,\n                globPattern,\n                globStrict\n              });\n              return previous.concat(globbedFileDetails);\n            } catch (error) {\n              const debugObj = {};\n              debugObj[url] = dependencies;\n              throw new Error(`${errors['bad-template-urls-asset']} ` + `'${globPattern}' from '${JSON.stringify(debugObj)}':\\n` + error);\n            }\n          }, []);\n          fileDetails.push(getCompositeDetails(url, details));\n        } else if (typeof dependencies === 'string') {\n          fileDetails.push(getStringDetails(url, dependencies));\n        }\n      }\n    }\n\n    const filteredFiles = filterFiles({\n      fileDetails,\n      maximumFileSizeToCacheInBytes,\n      modifyURLPrefix,\n      dontCacheBustURLsMatching,\n      manifestTransforms\n    });\n\n    if (warnings.length > 0) {\n      filteredFiles.warnings.push(...warnings);\n    }\n\n    return filteredFiles;\n  });\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();"]},"metadata":{},"sourceType":"script"}